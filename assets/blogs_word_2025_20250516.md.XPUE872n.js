import{_ as s,c as i,o as a,a7 as l}from"./chunks/framework.DLSH1pMh.js";const t="/assets/01.DyxNeF4Y.png",n="/assets/02.yPAVEGnF.png",y=JSON.parse('{"title":"NodeJS从零到一开发一个全栈项目","description":"","frontmatter":{"title":"NodeJS从零到一开发一个全栈项目","date":"2025-05-16T00:00:00.000Z","categories":["前端进阶","工作随记","javascript"]},"headers":[],"relativePath":"blogs/word/2025/20250516.md","filePath":"blogs/word/2025/20250516.md"}'),e={name:"blogs/word/2025/20250516.md"},p=l(`<h2 id="使用-express-脚手架创建项目" tabindex="-1">使用 express 脚手架创建项目 <a class="header-anchor" href="#使用-express-脚手架创建项目" aria-label="Permalink to &quot;使用 express 脚手架创建项目&quot;">​</a></h2><ol><li>安装 express-generator</li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> express-generator@4</span></span></code></pre></div><ol start="2"><li>创建项目</li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># --view=ejs 表示使用ejs模板引擎 视图存放在views目录下</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">express</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --view=ejs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> demo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># --no-view 创建项目时不使用视图模板，专门做后台接口开发，后期渲染页面通过其他框架</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">express</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-view</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> demo</span></span></code></pre></div><ol start="3"><li>启动项目</li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div><ol start="4"><li>使用 nodemon 监听页面修改 将scripts下的<code>&quot;start&quot;: &quot;node ./bin/www&quot;</code>改为 <code>&quot;start&quot;: &quot;nodemon ./bin/www&quot;</code></li></ol><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodemon</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重启项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div><ol start="5"><li>安装docker 5.1. Docker 镜像下载不动 根据新闻报道，近期国内 Docker 镜像几乎都出问题了。阿里近期说只能在阿里云服务器上访问其镜像，也就说本地配置阿里云镜像已经不可用了。</li></ol><p>最近找到的可用镜像是：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;registry-mirrors&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;https://docker.1ms.run&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>5.2. Docker 配置代理 如果发现此镜像也失效了，请删除镜像配置后，在Docker中配置 VPN 代理后使用。 <img src="`+t+'" alt=""> 修改完成后，再次拉取镜像即可。 5.3. 使用 Laragon 集成环境 如果电脑实在安装不了 Docker，或者不会配置VPN。那也可以使用 Laragon 集成环境，</p><p>下载地址（附安装使用教程）：链接：<a href="https://clwy.cn/tools/laragon" target="_blank" rel="noreferrer">https://clwy.cn/tools/laragon</a><img src="'+n+`" alt=""> 但由于Laragon的MySQL默认没有密码，所以等使用express连接MySQL数据库，请调整项目中的数据库配置文件config/config.json，将密码password设置为：null。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;development&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;username&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;root&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;password&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;database&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;clwy_api_development&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;host&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;127.0.0.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;dialect&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mysql&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;timezone&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;+08:00&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;logQueryParameters&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div><p>注意：null，不要打引号！！！ 5.4 处理 windows wsl问题</p><ol><li>检查 WSL 状态</li></ol><ul><li>打开 PowerShell（管理员身份），输入以下命令查看 WSL 是否已安装：</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span></code></pre></div><ul><li>如果提示“未安装”，需要手动安装 WSL：</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install</span></span></code></pre></div><p>安装完成后重启系统。</p><ol start="2"><li>强制关闭 WSL 并重启</li></ol><ul><li>在 PowerShell（管理员）中执行：</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --shutdown</span></span></code></pre></div><p>重启电脑，再次尝试启动 Docker Desktop。</p><ol start="3"><li>启用虚拟化（BIOS/UEFI）</li></ol><ul><li>重启电脑，进入 BIOS/UEFI 设置（开机时按 F2、Del 等键，具体取决于主板型号）。</li><li>找到 Virtualization Technology（VT-x/AMD-V） 选项，确保已启用。</li><li>保存并退出 BIOS。</li></ul><ol start="4"><li><p>更新 Windows 和 WSL 确保 Windows 系统已更新到最新版本（设置 → 更新和安全 → Windows 更新）。 下载并安装 WSL 2 内核更新包：<a href="https://aka.ms/wsl2kernel" target="_blank" rel="noreferrer">微软官方下载地址</a></p></li><li><p>重置 Docker 和 WSL</p></li></ol><ul><li>卸载 Docker Desktop。</li><li>在 PowerShell（管理员）中彻底清理 WSL：</li></ul><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --unregister</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DockerDesktop</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --unregister</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ubuntu</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 如果有其他 WSL 发行版也卸载</span></span></code></pre></div><ul><li>重新安装 Docker Desktop，安装时勾选“使用 WSL 2 引擎”。</li></ul><ol start="6"><li>检查 Hyper-V 和 Windows 功能</li></ol><ul><li>在“控制面板 → 程序 → 启用或关闭 Windows 功能”中，确保以下选项已勾选： <ul><li>Hyper-V</li><li>虚拟机平台</li><li>Windows Subsystem for Linux 完成后重启系统。</li></ul></li></ul>`,34),h=[p];function k(o,r,d,c,g,u){return a(),i("div",null,h)}const E=s(e,[["render",k]]);export{y as __pageData,E as default};
