import{_ as s,c as i,o as a,a7 as t}from"./chunks/framework.DLSH1pMh.js";const F=JSON.parse('{"title":"私钥公钥使用别再搞混了！","description":"","frontmatter":{"title":"私钥公钥使用别再搞混了！","date":"2025-01-22T00:00:00.000Z","categories":["前端进阶","工作随记"]},"headers":[],"relativePath":"blogs/word/2025/20250122.md","filePath":"blogs/word/2025/20250122.md"}'),n={name:"blogs/word/2025/20250122.md"},p=t(`<h1 id="私钥公钥使用别再搞混了" tabindex="-1">私钥公钥使用别再搞混了！ <a class="header-anchor" href="#私钥公钥使用别再搞混了" aria-label="Permalink to &quot;私钥公钥使用别再搞混了！&quot;">​</a></h1><h2 id="_1-github-仓库访问密钥对" tabindex="-1">1. GitHub 仓库访问密钥对 <a class="header-anchor" href="#_1-github-仓库访问密钥对" aria-label="Permalink to &quot;1. GitHub 仓库访问密钥对&quot;">​</a></h2><p>这是用于您的电脑与 GitHub 之间的通信。</p><p><strong>用途</strong>：让您能够从本地推送代码到 GitHub 而不需要输入密码</p><p><strong>查看现有密钥</strong>：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看是否已有 GitHub 相关的 SSH 密钥</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -la</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 常见的 GitHub 密钥名称：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># - id_rsa (私钥)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># - id_rsa.pub (公钥)</span></span></code></pre></div><p><strong>生成新密钥</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4096</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;your_github_email@example.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 建议使用默认路径 (~/.ssh/id_rsa)</span></span></code></pre></div><p><strong>配置到 GitHub</strong>：</p><ol><li>复制公钥内容：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_rsa.pub</span></span></code></pre></div><ol start="2"><li>在 GitHub.com -&gt; Settings -&gt; SSH and GPG keys -&gt; New SSH key</li><li>粘贴公钥内容</li></ol><h2 id="_2-服务器部署密钥对" tabindex="-1">2. 服务器部署密钥对 <a class="header-anchor" href="#_2-服务器部署密钥对" aria-label="Permalink to &quot;2. 服务器部署密钥对&quot;">​</a></h2><p>这是用于 GitHub Actions 自动部署代码到您的服务器。</p><p><strong>用途</strong>：让 GitHub Actions 能够自动将构建后的文件部署到您的服务器</p><p><strong>1. 生成专用的部署密钥</strong>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 建议生成一个专门用于部署的密钥对，使用不同的文件名</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4096</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;deploy_key&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/deploy_key</span></span></code></pre></div><p><strong>2. 执行命令后会提示：</strong></p><ol><li>输入密码短语（建议直接回车，不设置密码，否则自动部署时会出问题）</li><li>确认密码短语（再次回车） 然后就会在指定位置生成两个文件：</li></ol><ul><li>私钥文件：imgprocessing_key</li><li>公钥文件：imgprocessing_key.pub</li></ul><p><strong>3. 确认密钥已生成：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -la</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/imgprocessing_key</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 应该看到两个文件：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># imgprocessing_key</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># imgprocessing_key.pub</span></span></code></pre></div><p><strong>4. 设置正确的权限：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 600</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/imgprocessing_key</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 644</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/imgprocessing_key.pub</span></span></code></pre></div><p><strong>5. 配置到服务器</strong>：</p><ol><li><strong>查看公钥内容（这个需要添加到服务器）：</strong></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/imgprocessing_key.pub</span></span></code></pre></div><ol start="2"><li><strong>查看私钥内容（这个需要添加到 GitHub Secrets）：</strong></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/imgprocessing_key</span></span></code></pre></div><ol start="3"><li><strong>将公钥添加到服务器：</strong></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 方法1：使用 ssh-copy-id</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-copy-id</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/deploy_key.pub</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> username@your_server_ip</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 测试连接</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/imgprocessing_key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> username@your_server_ip</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 方法2：手动添加</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/deploy_key.pub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> username@your_server_ip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;mkdir -p ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys&quot;</span></span></code></pre></div><p><strong>6. 配置到 GitHub Actions</strong>：</p><ol><li>查看私钥内容：</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/deploy_key</span></span></code></pre></div><ol start="2"><li>在 GitHub 仓库 -&gt; Settings -&gt; Secrets -&gt; Actions -&gt; New repository secret</li><li>添加以下 secrets：</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>SSH_PRIVATE_KEY: [deploy_key 私钥内容]</span></span>
<span class="line"><span>SSH_HOST: [您的服务器 IP]</span></span>
<span class="line"><span>SSH_USERNAME: [您的服务器用户名]</span></span></code></pre></div>`,36),e=[p];function l(h,k,o,r,g,d){return a(),i("div",null,e)}const y=s(n,[["render",l]]);export{F as __pageData,y as default};
