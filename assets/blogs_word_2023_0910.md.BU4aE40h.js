import{_ as s,c as i,o as a,a5 as n}from"./chunks/framework.BIhQMg0k.js";const g=JSON.parse('{"title":"Performance使用详解","description":"","frontmatter":{"title":"Performance使用详解","date":"2023-09-10T00:00:00.000Z","categories":["浏览器","工作随记"]},"headers":[],"relativePath":"blogs/word/2023/0910.md","filePath":"blogs/word/2023/0910.md"}'),e={name:"blogs/word/2023/0910.md"},l=n(`<h1 id="🚀-performance-api-完全指南" tabindex="-1">🚀 Performance API 完全指南 <a class="header-anchor" href="#🚀-performance-api-完全指南" aria-label="Permalink to &quot;🚀 Performance API 完全指南&quot;">​</a></h1><h2 id="📚-简介" tabindex="-1">📚 简介 <a class="header-anchor" href="#📚-简介" aria-label="Permalink to &quot;📚 简介&quot;">​</a></h2><p>Performance API 是浏览器提供的性能监控工具，能够帮助我们更好地了解网页性能瓶颈。本文将详细介绍如何使用 Performance API 进行性能分析和优化。</p><h2 id="🔍-核心概念" tabindex="-1">🔍 核心概念 <a class="header-anchor" href="#🔍-核心概念" aria-label="Permalink to &quot;🔍 核心概念&quot;">​</a></h2><h3 id="performance-timeline" tabindex="-1">Performance Timeline <a class="header-anchor" href="#performance-timeline" aria-label="Permalink to &quot;Performance Timeline&quot;">​</a></h3><ul><li>Navigation Timing</li><li>Resource Timing</li><li>User Timing</li><li>Paint Timing</li></ul><h2 id="💡-常用-api-详解" tabindex="-1">💡 常用 API 详解 <a class="header-anchor" href="#💡-常用-api-详解" aria-label="Permalink to &quot;💡 常用 API 详解&quot;">​</a></h2><h3 id="_1-性能计时-api" tabindex="-1">1. 性能计时 API <a class="header-anchor" href="#_1-性能计时-api" aria-label="Permalink to &quot;1. 性能计时 API&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取性能时间线</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">performance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">performance.timeOrigin</span></span></code></pre></div><h3 id="_2-页面加载性能" tabindex="-1">2. 页面加载性能 <a class="header-anchor" href="#_2-页面加载性能" aria-label="Permalink to &quot;2. 页面加载性能&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取页面加载相关时间</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> timing</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> performance.timing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    DNS查询耗时: timing.domainLookupEnd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timing.domainLookupStart,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    TCP连接耗时: timing.connectEnd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timing.connectStart,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    首屏时间: timing.domContentLoadedEventEnd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timing.navigationStart</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_3-资源加载性能" tabindex="-1">3. 资源加载性能 <a class="header-anchor" href="#_3-资源加载性能" aria-label="Permalink to &quot;3. 资源加载性能&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取资源加载详情</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> resources</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> performance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEntriesByType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;resource&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="⚠️-使用注意事项" tabindex="-1">⚠️ 使用注意事项 <a class="header-anchor" href="#⚠️-使用注意事项" aria-label="Permalink to &quot;⚠️ 使用注意事项&quot;">​</a></h2><ol><li>Performance API 在不同浏览器中的实现可能存在差异</li><li>某些性能数据可能因为浏览器的安全策略而无法获取</li><li>建议结合 Chrome DevTools 的 Performance 面板一起使用</li></ol><h2 id="🌟-最佳实践" tabindex="-1">🌟 最佳实践 <a class="header-anchor" href="#🌟-最佳实践" aria-label="Permalink to &quot;🌟 最佳实践&quot;">​</a></h2><h3 id="性能监控示例" tabindex="-1">性能监控示例 <a class="header-anchor" href="#性能监控示例" aria-label="Permalink to &quot;性能监控示例&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 监控页面性能</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> monitorPagePerformance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> performance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.performance;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">performance) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;当前浏览器不支持 Performance API&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 获取关键性能指标</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> timing</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> performance.timing;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> performanceMetrics</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 页面加载总耗时</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        loadTime: timing.loadEventEnd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timing.navigationStart,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 首次渲染时间</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        firstPaint: timing.responseEnd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timing.navigationStart,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // DOM解析耗时</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        domReady: timing.domContentLoadedEventEnd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> timing.navigationStart</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> performanceMetrics;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="📈-性能优化建议" tabindex="-1">📈 性能优化建议 <a class="header-anchor" href="#📈-性能优化建议" aria-label="Permalink to &quot;📈 性能优化建议&quot;">​</a></h2><ol><li>使用 Performance API 建立性能基准</li><li>定期监控关键性能指标</li><li>对较大资源进行懒加载</li><li>优化关键渲染路径</li></ol><h2 id="🔗-相关资源" tabindex="-1">🔗 相关资源 <a class="header-anchor" href="#🔗-相关资源" aria-label="Permalink to &quot;🔗 相关资源&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Performance" target="_blank" rel="noreferrer">MDN Performance API 文档</a></li><li><a href="https://web.dev/vitals/" target="_blank" rel="noreferrer">Web Vitals</a></li><li><a href="https://developer.chrome.com/docs/devtools/performance/" target="_blank" rel="noreferrer">Chrome DevTools Performance</a></li></ul><h2 id="📝-总结" tabindex="-1">📝 总结 <a class="header-anchor" href="#📝-总结" aria-label="Permalink to &quot;📝 总结&quot;">​</a></h2><p>Performance API 是前端性能优化的重要工具，合理使用可以帮助我们更好地理解和改善网页性能。建议在实际开发中结合具体场景选择合适的性能指标进行监控和优化。</p>`,24),t=[l];function h(p,r,k,o,d,c){return a(),i("div",null,t)}const m=s(e,[["render",h]]);export{g as __pageData,m as default};
