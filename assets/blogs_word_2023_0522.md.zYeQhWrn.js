import{_ as t,c as i,o as a,a3 as n}from"./chunks/framework.DpzXWsSh.js";const p=JSON.parse('{"title":"animation属性","description":"","frontmatter":{"title":"animation属性","date":"2023-5-22","categories":["css","踩坑"]},"headers":[],"relativePath":"blogs/word/2023/0522.md","filePath":"blogs/word/2023/0522.md"}'),o={name:"blogs/word/2023/0522.md"},e=n('<ol><li><strong>在CSS中，可以通过animation属性来创建动画效果。animation属性包含多个子属性，下面一一列举各个参数及其含义：</strong></li></ol><table><thead><tr><th>属性名</th><th>属性含义</th></tr></thead><tbody><tr><td>animation-name</td><td>指定要应用的关键帧动画的名称。</td></tr><tr><td>animation-duration</td><td>指定动画的持续时间，以秒或毫秒为单位。</td></tr><tr><td>animation-timing-function</td><td>指定动画的时间函数，用于控制动画从起始状态到结束状态的过程中如何变化。常用的时间函数有：linear（匀速）、ease（先加速后减速）、ease-in（加速）、ease-out（减速）、ease-in-out（先加速后减速再加速）。</td></tr><tr><td>animation-delay</td><td>指定动画的延迟时间，以秒或毫秒为单位</td></tr><tr><td>animation-iteration-count</td><td>指定动画的播放次数。常用的值有：infinite（无限次播放）、1（播放一次）、2（播放两次）等。</td></tr><tr><td>animation-direction</td><td>指定动画的播放方向。常用的值有：normal（正向播放）、reverse（反向播放）、alternate（交替正反向播放）等。</td></tr><tr><td>animation-play-state</td><td>指定动画的播放状态。常用的值有：running（播放状态）、paused（暂停状态）。</td></tr><tr><td>animation-fill-mode</td><td>指定动画在播放之前和之后如何应用到元素的样式。常用的值有：none、forwards、backwards、both等。none表示不改变默认值；forwards表示动画完成后保持最后一帧的状态；backwards表示在动画播放前使用动画的第一帧的样式；both表示同时应用forwards和backwards的效果。</td></tr></tbody></table><ol start="2"><li><p>上述参数可以单独使用，也可以组合使用来实现各种复杂的动画效果。例如，我们可以组合使用<code>animation-duration</code>和<code>animation-timing-function</code>来控制动画的速度和渐变效果，使用<code>animation-iteration-count</code>和<code>animation-direction</code>来控制动画的播放次数和方向，使用<code>animation-fill-mode</code>来控制动画的起始状态和结束状态等。</p></li><li><p>在CSS中，可以使用animation属性来同时指定多个参数，以简化代码，并更方便地控制动画效果。animation属性的语法为：</p><ul><li><strong>animation: animation-name animation-duration animation-timing-function animation-delay animation-iteration-count animation-direction animation-fill-mode animation-play-state;;</strong></li><li>所有的子属性都是可选的，但必须按照特定的顺序排列。如果省略其中某个属性，则会使用默认值。</li><li>下面是各个子属性的缩写形式及其默认值：</li><li><strong>animation: name duration timing-function delay iteration-count direction fill-mode play-state;</strong></li></ul></li></ol>',3),d=[e];function r(l,m,s,c,_,u){return a(),i("div",null,d)}const g=t(o,[["render",r]]);export{p as __pageData,g as default};
