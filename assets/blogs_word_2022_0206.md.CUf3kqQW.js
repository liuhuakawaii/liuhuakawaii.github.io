import{_ as e,c as o,o as t,a3 as c}from"./chunks/framework.DpzXWsSh.js";const x=JSON.parse('{"title":"静态资源的动态访问问题","description":"","frontmatter":{"title":"静态资源的动态访问问题","date":"2022-2-06","categories":["vue","css","踩坑"]},"headers":[],"relativePath":"blogs/word/2022/0206.md","filePath":"blogs/word/2022/0206.md"}'),a={name:"blogs/word/2022/0206.md"},l=c('<h2 id="静态资源的动态访问问题" tabindex="-1">静态资源的动态访问问题 <a class="header-anchor" href="#静态资源的动态访问问题" aria-label="Permalink to &quot;静态资源的动态访问问题&quot;">​</a></h2><ol><li>相对路径导入</li></ol><ul><li>在<code>.js .css .vue</code>文件中使用<strong>相对路径</strong><code>（../../xxx）</code>引用一个静态资源时，该资源将会被包含进入到webpack的依赖图中</li><li>在其编译过程中，所有诸如<code>&lt;img src=&#39;xxxx&#39;&gt;</code>,<code>background:url(xxx)</code>,<code>@import</code>的资源URL都会被解析为一个模块依赖，会被<strong>编译成一个带文件指纹（hash）的新路径</strong></li></ul><ol start="2"><li>绝对路径导入</li></ol><ul><li>路径读取的是<code>public</code>文件夹的资源，任何放置在public文件夹的静态资源都会被简单复制到编译的目录中，webpack不做特殊处理</li><li>问题：<strong>没有文件指纹，之后如果文件被同名替换，客户端缓存不会识别</strong></li></ul>',5),s=[l];function r(i,d,n,_,u,p){return t(),o("div",null,s)}const h=e(a,[["render",r]]);export{x as __pageData,h as default};
