(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{520:function(t,s,a){t.exports=a.p+"assets/img/js1.396bf8a1.jpg"},521:function(t,s,a){t.exports=a.p+"assets/img/js2.2e812b6f.jpg"},522:function(t,s,a){t.exports=a.p+"assets/img/js3.2611108e.jpg"},523:function(t,s,a){t.exports=a.p+"assets/img/js4.e27b03eb.jpg"},524:function(t,s,a){t.exports=a.p+"assets/img/js5.2ade7b47.jpg"},525:function(t,s,a){t.exports=a.p+"assets/img/js6.b3cb4b3e.jpg"},526:function(t,s,a){t.exports=a.p+"assets/img/js7.eeafe056.jpg"},527:function(t,s,a){t.exports=a.p+"assets/img/js8.42b8c7d1.jpg"},528:function(t,s,a){t.exports=a.p+"assets/img/day0101.f44d7e5c.png"},529:function(t,s,a){t.exports=a.p+"assets/img/day0201.7550f5f7.jpg"},530:function(t,s,a){t.exports=a.p+"assets/img/day0301.e04bc40e.jpg"},531:function(t,s,a){t.exports=a.p+"assets/img/day0401.15b776fa.jpg"},532:function(t,s,a){t.exports=a.p+"assets/img/day0601.6d16eb6a.jpg"},533:function(t,s,a){t.exports=a.p+"assets/img/day0602.b3843457.jpg"},534:function(t,s,a){t.exports=a.p+"assets/img/day0603.29e66354.jpg"},535:function(t,s,a){t.exports=a.p+"assets/img/day0701.0501cc82.jpg"},536:function(t,s,a){t.exports=a.p+"assets/img/day0702.a0334d70.jpg"},537:function(t,s,a){t.exports=a.p+"assets/img/day0703.5c2bba2e.jpg"},538:function(t,s,a){t.exports=a.p+"assets/img/01.d09fa84e.jpg"},539:function(t,s,a){t.exports=a.p+"assets/img/02.1c085a6a.jpg"},540:function(t,s,a){t.exports=a.p+"assets/img/03.061be1ea.jpg"},541:function(t,s,a){t.exports=a.p+"assets/img/04.25678cd4.jpg"},682:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"js基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js基础"}},[t._v("#")]),t._v(" JS基础")]),t._v(" "),s("ol",[s("li",[t._v("JS基础认识\n"),s("ol",[s("li",[t._v("JavaScript是什么?"),s("br"),t._v("\nJavaScript是一门编程语言，可以实现"),s("strong",[t._v("网页特效，表单验证，数据交互")])]),t._v(" "),s("li",[t._v("JavaScript的注释?\n"),s("ul",[s("li",[t._v("单行注释 "),s("code",[t._v("//")])]),t._v(" "),s("li",[t._v("多行注释 "),s("code",[t._v("/* */")])])])]),t._v(" "),s("li",[t._v("JavaScript的结束符?"),s("br"),t._v("\n分号"),s("code",[t._v(";")]),t._v("可以加也可以不加，可以按照团队约定，注意换行默认为结束符")]),t._v(" "),s("li",[t._v("Javascript输入输出语句?\n"),s("ul",[s("li",[t._v("输入: "),s("code",[t._v("prompt()")]),t._v("  （"),s("code",[t._v('+prompt（" "）')]),t._v("可以转换出数值）")]),t._v(" "),s("li",[t._v("输出: "),s("code",[t._v("alert()")]),t._v(" "),s("code",[t._v("document.write()")]),t._v(" "),s("code",[t._v("console.log()")])])])])])]),t._v(" "),s("li",[t._v("变量和字面量\n"),s("ol",[s("li",[t._v("字面量，都是一些不可改变的值，数字、字符串、数组、对象等等"),s("br"),t._v("\n变量是计算机存储数据的"),s("font",{attrs:{color:"red"}},[t._v("“容器”")]),t._v("，而不是数据"),s("br"),t._v("\n可以用"),s("code",[t._v("let、var")]),t._v("来声明变量，"),s("strong",[t._v("注意同一个变量不能用"),s("code",[t._v("let")]),t._v("多次声明")])],1),t._v(" "),s("li",[t._v("变量的本质"),s("br"),t._v("\n内存:计算机中存储数据的地方，相当于一个空间"),s("br"),t._v("\n变量:是程序在内存中申请的一块用来存放数据的小空间")]),t._v(" "),s("li",[t._v("命名规则与规范\n"),s("ol",[s("li",[t._v("规则:\n"),s("ul",[s("li",[t._v("不能用"),s("strong",[t._v("关键字")]),t._v(",（有特殊含义的字符，"),s("code",[t._v("JavaScript")]),t._v("内置的一些英语词汇。例如: "),s("code",[t._v("let、var、if、for")]),t._v("等）")]),t._v(" "),s("li",[t._v("只能用"),s("strong",[t._v("下划线、字母、数字、$"),s("strong",[t._v("组成，且")]),t._v("数字不能开头")])]),t._v(" "),s("li",[t._v("字母"),s("strong",[t._v("严格区分大小写")]),t._v("，如Age和age是不同的变量")])])]),t._v(" "),s("li",[t._v("规范:\n"),s("ul",[s("li",[t._v("起名要有意义")]),t._v(" "),s("li",[t._v("遵守"),s("strong",[t._v("小驼峰命名法")]),t._v("，第一个单词首字母小写，后面每个单词首字母大写。例: "),s("code",[t._v("userName")])])])])])])])]),t._v(" "),s("li",[t._v("数据类型\n"),s("ul",[s("li",[t._v("基本数据类型："),s("code",[t._v("number、string、boolean、undefined、null、Symbol、BigInt")])]),t._v(" "),s("li",[t._v("引用数据类型："),s("code",[t._v("object、function、array")])])]),t._v(" "),s("ol",[s("li",[t._v("数字类型:正数、负数、小数；\n"),s("ul",[s("li",[s("code",[t._v("NaN")]),t._v("是一个特殊的数字，表示"),s("code",[t._v("Not A Number")]),t._v("，用"),s("code",[t._v("typeof")]),t._v("检查"),s("code",[t._v("NaN")]),t._v("会返回"),s("code",[t._v("number")])]),t._v(" "),s("li",[s("code",[t._v("Number.MAX_VALUE")]),t._v("、"),s("code",[t._v("Number.MIN VALUE")]),t._v("表示数字的最值")]),t._v(" "),s("li",[t._v("尽量不要再JS中进行精度较高的运算")])])]),t._v(" "),s("li",[t._v("字符串类型：通过单引号('')、双引号(\"\"）或反引号(``)包裹的数据都叫字符串\n"),s("ul",[s("li",[s("strong",[t._v("模板字符串")])])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'大家好，我叫'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("',今年'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'岁'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),t._v("用反引号包裹内容，"),s("code",[t._v("${}")]),t._v("包住变量"),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("大家好我叫")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("，今年")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("岁")]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[t._v("布尔值\n"),s("ul",[s("li",[t._v("使用"),s("code",[t._v("typeof")]),t._v("检查一个布尔值时，会返回"),s("code",[t._v("boolean")])]),t._v(" "),s("li",[t._v("它有两个值 "),s("code",[t._v("true")]),t._v("和"),s("code",[t._v("false")]),t._v("，表示肯定的数据用"),s("code",[t._v("true")]),t._v("(真)，表示否定的数据用"),s("code",[t._v("false")]),t._v("(假)。")])])]),t._v(" "),s("li",[s("code",[t._v("Null")]),t._v(" 和"),s("code",[t._v("Undefined")]),t._v(" "),s("ul",[s("li",[t._v("只声明，未给变量赋值时，它的值就是"),s("code",[t._v("undefined")]),t._v("，使用"),s("code",[t._v("typeof")]),t._v("检查时也会返回"),s("code",[t._v("undefined")])]),t._v(" "),s("li",[s("code",[t._v("Null")]),t._v("类型的值只有一个，就是"),s("code",[t._v("null")]),t._v("，这个值专门用来表示一个为空的对象")]),t._v(" "),s("li",[t._v("使用"),s("code",[t._v("typeof")]),t._v("检查一个"),s("code",[t._v("null")]),t._v("值时，会返回"),s("code",[t._v("object")])])])])])]),t._v(" "),s("li",[t._v("类型转换\n"),s("ul",[s("li",[t._v("JavaScript是弱数据类型: JavaScript也不知道变量属于那种类型，赋值了才清楚。")]),t._v(" "),s("li",[t._v("坑:使用表单、prompt 获取过来的数据默认是字符串类型，此时不能直接进行加法运算。")])]),t._v(" "),s("ol",[s("li",[t._v("隐式转换\n"),s("ol",[s("li",[s("code",[t._v("+")]),t._v("号两边只要有一个是字符串，都会把另外一个转成字符串")]),t._v(" "),s("li",[t._v("除了"),s("code",[t._v("+")]),t._v("以外的算术运算符比如"),s("code",[t._v("– * /")]),t._v("等都会把数据转成数字类型")]),t._v(" "),s("li",[t._v("作为正号解析时可以把数据转成数字类型")]),t._v(" "),s("li",[t._v("我们只需要为任意的数据类型"),s("code",[t._v("+")]),t._v("一个"),s("code",[t._v('""')]),t._v("即可将其转换为"),s("code",[t._v("String")])])])]),t._v(" "),s("li",[t._v("显式转换\n"),s("ul",[s("li",[s("strong",[s("font",{attrs:{color:"red"}},[t._v("转换成数字")])],1),t._v(" "),s("ol",[s("li",[s("strong",[t._v("使用"),s("code",[t._v("Number()")]),t._v("函数")]),t._v(" "),s("ul",[s("li",[t._v("字符串--\x3e数字\n"),s("ol",[s("li",[t._v("如果是纯数字的字符串，则直接将其转换为数字")]),t._v(" "),s("li",[t._v("如果字符串中有非数字的内容，则转换为"),s("code",[t._v("NaN")])]),t._v(" "),s("li",[t._v("如果字符串是一个空串或者是一个全是空格的字符串，则转换为"),s("code",[t._v("0")])])])]),t._v(" "),s("li",[t._v("布尔--\x3e数字\n"),s("ul",[s("li",[s("code",[t._v("true")]),t._v("转成"),s("code",[t._v("1")]),t._v(" "),s("code",[t._v("false")]),t._v("转成"),s("code",[t._v("0")])])])]),t._v(" "),s("li",[s("code",[t._v("null")]),t._v(" --\x3e数字"),s("code",[t._v("0")])]),t._v(" "),s("li",[s("code",[t._v("undefined")]),t._v("--\x3e数字"),s("code",[t._v("NaN")])])])]),t._v(" "),s("li",[s("strong",[t._v("这种方式专门用来对付字符串")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("parseInt()")]),t._v("把一个字符串转换为一个整数")]),t._v(" "),s("li",[s("code",[t._v("parseFloat()")]),t._v("把一个字符串转换为一个浮点数")]),t._v(" "),s("li",[t._v("如果对非"),s("code",[t._v("String")]),t._v("使用"),s("code",[t._v("parseInt()")]),t._v("或"),s("code",[t._v("parseFloat()")]),t._v("它会先将其转换为"),s("code",[t._v("String")]),t._v("然后在操作")]),t._v(" "),s("li",[s("strong",[s("font",{attrs:{color:"red"}},[t._v("可以在"),s("code",[t._v("parseInt()")]),t._v("中传递第二个参数，表示以此进制看待传入进来的参数")])],1)])])])])]),t._v(" "),s("li",[s("strong",[s("font",{attrs:{color:"red"}},[t._v("转换成字符串")])],1),t._v(" "),s("ol",[s("li",[s("strong",[t._v("调用"),s("code",[t._v("String()")]),t._v("函数")]),t._v("  -- 并将被转换的数据作为参数传递给函数\n"),s("ul",[s("li",[t._v("对于"),s("code",[t._v("Number")]),t._v("和"),s("code",[t._v("Boolean")]),t._v("实际上就是调用的"),s("code",[t._v("toString()")]),t._v("方法")]),t._v(" "),s("li",[t._v("但是对于"),s("code",[t._v("null")]),t._v("和"),s("code",[t._v("undefined")]),t._v("，它会将"),s("code",[t._v("null")]),t._v("直接转换为"),s("code",[t._v('"null"')]),t._v(",将"),s("code",[t._v("undefined")]),t._v("直接转换为"),s("code",[t._v('"undefined”')])])])]),t._v(" "),s("li",[s("strong",[t._v("调用被转换数据类型的"),s("code",[t._v("toString()")]),t._v("方法")]),t._v(" "),s("ul",[s("li",[t._v("该方法不会影响到原变量，它会将转换的结果返回")]),t._v(" "),s("li",[t._v("但是注意:null和undefined这两个值没有toString()方法,")]),t._v(" "),s("li",[s("strong",[s("font",{attrs:{color:"red"}},[t._v("可以传一个参数2，表示转换成2进制结果 ")])],1)])])])])]),t._v(" "),s("li",[s("strong",[s("font",{attrs:{color:"red"}},[t._v("转换成"),s("code",[t._v("boolean")])])],1),t._v(" "),s("ol",[s("li",[s("strong",[t._v("使用"),s("code",[t._v("Boolean()")]),t._v("函数")]),t._v(" "),s("ul",[s("li",[t._v("数字---\x3e布尔 : 除了"),s("code",[t._v("0")]),t._v("和"),s("code",[t._v("NaN")]),t._v("，其余的都是"),s("code",[t._v("true")])]),t._v(" "),s("li",[t._v("字符串---\x3e布尔 : 除了空串，其余的都是"),s("code",[t._v("true")])]),t._v(" "),s("li",[s("code",[t._v("null")]),t._v("和"),s("code",[t._v("undefined")]),t._v("都会转换为"),s("code",[t._v("false")])]),t._v(" "),s("li",[t._v("对象也会转换为"),s("code",[t._v("true")])])])])])])])])])]),t._v(" "),s("li",[t._v("运算符\n"),s("ol",[s("li",[s("code",[t._v("typeof")]),t._v("就是运算符，它将该值的类型"),s("strong",[t._v("以字符串的形式")]),t._v("返回")]),t._v(" "),s("li",[t._v("一元运算符：自增和自减  自减同理\n"),s("ul",[s("li",[s("strong",[t._v("无论是a++ 还是++a，都会立即使原变量的值自增1")])]),t._v(" "),s("li",[s("strong",[s("font",{attrs:{color:"red"}},[t._v("a++的值")]),t._v(" = 原变量的值（"),s("font",{attrs:{color:"red"}},[t._v("自增前")]),t._v("的值)")],1)]),t._v(" "),s("li",[s("strong",[s("font",{attrs:{color:"red"}},[t._v("++a的值")]),t._v(" = 新值（"),s("font",{attrs:{color:"red"}},[t._v("自增后")]),t._v("的值)")],1)])])]),t._v(" "),s("li",[t._v("比较运算符（结果只有"),s("code",[t._v("true")]),t._v("和"),s("code",[t._v("false")]),t._v("）\n"),s("ol",[s("li",[t._v("对于非数值进行比较时，会将其转换为数字然后在比较")]),t._v(" "),s("li",[t._v("如果符号两侧的值都是字符串时，不会将其转换为数字进行比较，而会分别比较字符串中字符的Unicode编码，比较字符编码时是一位一位进行比较\n"),s("ul",[s("li",[s("strong",[t._v("注意:在比较两个字符串型的数字时，一定一定一定要转型")])]),t._v(" "),s("li",[t._v("在字符串中使用转义字符输入"),s("code",[t._v("Unicode")]),t._v("编码  "),s("code",[t._v("\\u四位编码")])]),t._v(" "),s("li",[t._v("在网页中使用"),s("code",[t._v("Unicode")]),t._v("编码，&#编码;这里的编码需要的是10进制")])])]),t._v(" "),s("li",[t._v("相等运算符\n"),s("ul",[s("li",[s("code",[t._v("=")]),t._v("是赋值")]),t._v(" "),s("li",[s("code",[t._v("==")]),t._v("是判断，只要值相等，不要求数据类型即返回"),s("code",[t._v("true")]),t._v("，会"),s("strong",[t._v("进行类型转换")]),t._v(" （"),s("code",[t._v("!=")]),t._v("同理）")]),t._v(" "),s("li",[s("code",[t._v("===")]),t._v("是全等要求值和数据类型都一样返回的才是"),s("code",[t._v("true")]),t._v("   （"),s("code",[t._v("!==")]),t._v("同理）")])])])])]),t._v(" "),s("li",[t._v("逻辑运算符"),s("br"),t._v(" "),s("strong",[t._v("&&属于短路的与，如果第一个值为false，则不会看第二个值")]),t._v(" "),s("ol",[s("li",[s("strong",[s("font",{attrs:{color:"red"}},[t._v("与运算：第一个为false，返回第一个；第一个为true，必然返回第二个")])],1),s("br"),t._v(" "),s("img",{attrs:{src:a(520),alt:""}}),s("br"),t._v(" "),s("strong",[t._v("||属于短路的或，如果第一个值为true，则不会检查第二个值")])]),t._v(" "),s("li",[s("strong",[s("font",{attrs:{color:"red"}},[t._v("或运算：第一个为true，返回第一个；第一个为false，必然返回第二个")])],1),s("br"),t._v(" "),s("img",{attrs:{src:a(521),alt:""}})]),t._v(" "),s("li",[s("strong",[s("font",{attrs:{color:"red"}},[t._v("非运算：！！a可以将任意数据类型转换为布尔值")])],1)])])]),t._v(" "),s("li",[t._v("运算符的优先级"),s("br"),t._v(" "),s("img",{attrs:{src:a(522),alt:""}})])])]),t._v(" "),s("li",[t._v("分支语句"),s("br"),t._v("\n1. if语句"),s("br"),t._v(" "),s("strong",[t._v("若条件的结果不是布尔值，此时条件会发生隐式转换")]),s("br"),t._v("\n2. 三元运算符"),s("br"),t._v(" "),s("strong",[t._v("条件 ? 满足条件执行的代码 : 不满足条件执行的代码")]),s("br"),t._v(" "),s("strong",[t._v("但是这是个表达式，我们可以用一个变量来接收他的运算结果")]),s("br"),t._v("\n3. Switch语句"),s("br"),t._v(" "),s("img",{attrs:{src:a(523),alt:""}})]),t._v(" "),s("li",[t._v("循环语句"),s("br"),t._v("\n1. "),s("code",[t._v("while")]),t._v("循环"),s("br"),t._v(" "),s("code",[t._v("js while(){ 要重复执行的代码（循环体） }")]),s("br"),t._v("\n循环必备三要素：变量起始值、"),s("strong",[t._v("终止条件（死循环）")]),t._v("、变量变化值"),s("br"),t._v("\n2. "),s("code",[t._v("break")]),t._v("和"),s("code",[t._v("continue")]),s("br"),t._v("\n+ "),s("code",[t._v("continue")]),t._v("可以用来"),s("strong",[t._v("跳过当次循环")]),t._v("，这轮循环的语句就不执行了"),s("br"),t._v("\n+ "),s("code",[t._v("break")]),t._v("可以用来"),s("strong",[t._v("退出"),s("code",[t._v("switch")]),t._v("或整个循环语句")]),s("br"),t._v("\n+ 默认只会对离他"),s("strong",[t._v("最近")]),t._v("的循环起作用"),s("br"),t._v("\n+ 可以为循环语句创建一个"),s("code",[t._v("label")]),t._v("，来标识当前的循环"),s("code",[t._v("label:循环语句")]),s("br"),t._v("\n+ "),s("strong",[t._v("使用"),s("code",[t._v("break")]),t._v("语句时，可以在"),s("code",[t._v("break")]),t._v("后跟着一个"),s("code",[t._v("label")]),t._v(",这样"),s("code",[t._v("break")]),t._v("将会结束指定的循环")]),s("br"),t._v("\n3. "),s("code",[t._v("for")]),t._v("循环"),s("br"),t._v(" "),s("code",[t._v("js for (起始条件;退出条件;变化量){ 循环语句 }")]),s("br"),t._v(" "),s("strong",[t._v("打印质数练习")]),s("br"),t._v(" "),s("img",{attrs:{src:a(524),alt:""}})]),t._v(" "),s("li",[t._v("数组的基本使用\n"),s("ol",[s("li",[s("code",[t._v("arr.push()")]),t._v("方法将一个或多个元素添加到数组末尾，并"),s("strong",[t._v("返回该数组的新长度(重点)")])]),t._v(" "),s("li",[s("code",[t._v("arr.unshift()")]),t._v("方法将一或多个元素添加到数组开头，并"),s("strong",[t._v("返回该数组的新长度(索引改变)")])]),t._v(" "),s("li",[s("code",[t._v("arr.pop()")]),t._v("方法从数组中删除最后一个元素，并"),s("strong",[t._v("返回该元素的值")])]),t._v(" "),s("li",[s("code",[t._v("arr.shift()")]),t._v("方法从数组中删除第一个元素，并且"),s("strong",[t._v("返回该元素的值")])]),t._v(" "),s("li",[s("code",[t._v("arr.splice(起始索引，删几个，插入的新元素)")]),t._v("，会"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("改变原数组")])])],1),t._v(" "),s("li",[s("code",[t._v("arr.slice(起始索引，结束索引)")]),t._v("可以从数组提取指定元素("),s("font",{attrs:{color:"red"}},[t._v("左闭右开")]),t._v(")，并且封装到一个新数组中返回，"),s("strong",[s("font",{attrs:{color:"red"}},[t._v("不会改变原数组")])],1),t._v("，第二个参数可以省略不写,此时会截取从开始索引往后的所有元素,可如果索引传递一个负值，则从后往前计算(-1倒数第一个)")],1),t._v(" "),s("li",[s("code",[t._v("concat()")]),t._v("可以连接两个或多个数组，并将新的数组返回，"),s("strong",[s("font",{attrs:{color:"red"}},[t._v("不会改变原数组")])],1),s("br"),t._v(" "),s("code",[t._v('var result = arr.concat(arr2,arr3,"牛魔王","铁扇公主")')])]),t._v(" "),s("li",[s("code",[t._v("join()")]),t._v("可以将数组转换为一个字符串并作为结果返回，"),s("strong",[s("font",{attrs:{color:"red"}},[t._v("不会对原数组产生影响")])],1),t._v(".在"),s("code",[t._v("join()")]),t._v("中可以指定一个字符串作为参数，将成为数组中元素的连接符，默认"),s("code",[t._v(",")]),t._v("作为连接符")]),t._v(" "),s("li",[s("code",[t._v("reverse()")]),t._v("方法用来反转数组，该方法会"),s("font",{attrs:{color:"red"}},[t._v("直"),s("strong",[t._v("接修改原数组")])])],1),t._v(" "),s("li",[s("code",[t._v("sort()")]),t._v("用来对数组中的元素进行排序，"),s("strong",[s("font",{attrs:{color:"red"}},[t._v("会影响原数组")])],1),t._v("，默认按照"),s("code",[t._v("Unicode")]),t._v("编码进行排序"),s("br"),t._v(" "),s("img",{attrs:{src:a(525),alt:""}}),s("br"),t._v(" "),s("strong",[t._v("数组去重")]),s("br"),t._v(" "),s("img",{attrs:{src:a(526),alt:""}})])])]),t._v(" "),s("li",[t._v("函数\n"),s("ol",[s("li",[t._v("函数是封装一些功能的代码块，可以实现代码复用，提高开发效率"),s("br"),t._v("\n函数声明: "),s("code",[t._v("function 函数名 ( ) {语句...}")])]),t._v(" "),s("li",[t._v("函数的参数"),s("br"),t._v("\n形参可以理解为是在这个函数内声明的变量，但是没有赋值，实参可以理解为是给这个变量赋值，多余实参不会被赋值，没有对应实参的形参将是"),s("code",[t._v("undefined")])]),t._v(" "),s("li",[t._v("函数的返回值\n"),s("ol",[s("li",[t._v("特点：有值就返回值，无值就结束函数")]),t._v(" "),s("li",[s("strong",[s("font",{attrs:{color:"red"}},[t._v("return后面不接数据")]),s("strong",[t._v("或者"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("函数内不写return")])]),t._v("，函数的返回值是"),s("code",[t._v("undefined")]),s("br"),t._v("\nreturn能立即结束当前函数,所以")],1),t._v("return后面的数据不要换行写")],1),s("br"),t._v(" "),s("strong",[t._v("可以用return [ ]返回多个值")])])])]),t._v(" "),s("li",[s("code",[t._v("fn()")]),t._v("相当于使用的函数的返回值，"),s("code",[t._v("fn")]),t._v("相当于直接使用函数对象")]),t._v(" "),s("li",[t._v("作用域"),s("br"),t._v("\n+ 全局作用域。函数外部或者整个"),s("code",[t._v("script")]),t._v("有效  \t\t全局变量"),s("br"),t._v("\n+ 局部作用域。也称为函数作用域，函数内部有效   \t     局部变量"),s("br"),t._v("\n+ 块级作用域。"),s("code",[t._v("{}")]),t._v("内有效   \t\t\t\t\t\t   块级变量"),s("br"),t._v("\n+ 如果变量没有声明，直接赋值，也当"),s("strong",[t._v("全局变量")]),t._v("看，但是"),s("strong",[t._v("强烈不推荐")])])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("变量的声明提前")]),s("br"),t._v("\n使用"),s("code",[t._v("var")]),t._v("关键字声明的变量，会在所有的代码执行之前被声明（但是不会赋值)﹐但是如果声明变量时不适用"),s("code",[t._v("var")]),t._v("关键字，则变量不会被声明提前")]),t._v(" "),s("li",[s("strong",[t._v("函数的声明提前")]),s("br"),t._v("\n使用函数声明形式创建的函数"),s("code",[t._v("function函数(){ }")]),t._v(",它会在所有的代码执行之前就被创建，所以我们可以在函数声明前来调用函数")])]),t._v(" "),s("ol",{attrs:{start:"6"}},[s("li",[t._v("匿名函数"),s("br"),t._v("\n函数表达式  "),s("code",[t._v("let 变量 = function () {语句....}")]),t._v(" "),s("ul",[s("li",[t._v("立即执行函数"),s("br"),t._v(" "),s("img",{attrs:{src:a(527),alt:""}}),s("br"),t._v(" "),s("strong",[s("font",{attrs:{color:"red"}},[t._v("立即执行函数最好在前面加分号，防止报错")])],1)])])])])]),t._v(" "),s("li",[t._v("对象\n"),s("ol",[s("li",[t._v("对象属于一种无序的复合的数据类型"),s("br"),t._v("\n内置对象、宿主对象（bom、dom）、自定义对象")]),t._v(" "),s("li",[t._v("对象声明"),s("br"),t._v(" "),s("code",[t._v("Let 对象名 = { 属性名：属性值 ， 方法名：函数 }")])]),t._v(" "),s("li",[t._v("属性访问"),s("br"),t._v(" "),s("code",[t._v("person.name")]),t._v("  --- "),s("code",[t._v("person[‘name’]")]),t._v(" "),s("ul",[s("li",[t._v("访问没有的属性返回"),s("code",[t._v("undefined")])]),t._v(" "),s("li",[s("strong",[t._v("在[  ]中可以直接传递一个变量(不加引号)，这样变量值是多少就会读取那个属性")])])])]),t._v(" "),s("li",[t._v("删除对象的属性 --- "),s("code",[t._v("delete 对象.属性名")])]),t._v(" "),s("li",[s("code",[t._v('"属性名" in 对象')]),t._v(" 可以检查一个对象中是否含有指定属性")]),t._v(" "),s("li",[t._v("遍历对象"),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v("  k  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("  对象 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" k "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])])]),t._v(" "),s("li",[s("ol",[s("li",[t._v("栈（操作系统）︰"),s("strong",[t._v("简单数据类型存放到栈里面")])]),t._v(" "),s("li",[t._v("堆（操作系统）∶"),s("strong",[t._v("引用数据类型存放到堆里面, 由垃圾回收机制回收")])]),t._v(" "),s("li",[t._v("当比较两个基本数据类型的值时，就是"),s("strong",[t._v("比较值")]),t._v("。")]),t._v(" "),s("li",[t._v("而比较两个引用数据类型时，它是"),s("strong",[t._v("比较的对象的内存地址")])])])]),t._v(" "),s("li",[t._v("Math对象方法"),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//生成0-1之间的随机数(包含0不包括1)  ")]),t._v("\n    Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ceil")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//向上取整  ")]),t._v("\n    Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//向下取整")]),t._v("\n    Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//找最大数")]),t._v("\n    Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//找最小数")]),t._v("\n    Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pow")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//幂运算")]),t._v("\n    Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("abs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//绝对值  ")]),t._v("\n    Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("round")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//就近取整(0.5往大取整)  ")]),t._v("\n    Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("floor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("random")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("M")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//生成N - M之间的随机数公式  ")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])])])])])]),t._v(" "),s("h2",{attrs:{id:"webapi进阶-dom、bom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webapi进阶-dom、bom"}},[t._v("#")]),t._v(" webAPI进阶--DOM、BOM")]),t._v(" "),s("h3",{attrs:{id:"day-1"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#day-1"}},[t._v("#")]),t._v(" Day 1")]),t._v(" "),s("ol",[s("li",[t._v("web api的基本认知\n"),s("ol",[s("li",[t._v("作用和分类"),s("br"),t._v("\n作用:就是使用"),s("code",[t._v("JS")]),t._v("去操作"),s("code",[t._v("html")]),t._v("和浏览器"),s("br"),t._v("\n分类:"),s("code",[t._v("DOM")]),t._v("(文档对象模型)、"),s("code",[t._v("BOM")]),t._v("（浏览器对象模型)")]),t._v(" "),s("li",[t._v("什么是DOM  --- 操作网页内容，可以开发网页内容特效和实现用户交互")]),t._v(" "),s("li",[t._v("DOM树：将HTML文档以树状结构直观的表现出来，称之为文档树或DOM树"),s("br"),t._v("\n作用:文档树直观的体现了标签与标签之间的关系")]),t._v(" "),s("li",[t._v("DOM对象：浏览器根据html标签生成的JS对象（DOM对象)")])])]),t._v(" "),s("li",[t._v("获取DOM对象\n"),s("ol",[s("li",[t._v("根据CSS选择器来获取DOM元素(重点)\n"),s("ol",[s("li",[t._v("选择匹配的第一个元素"),s("br"),t._v(" "),s("code",[t._v("document. querySelector ( )")])])]),t._v(" "),s("ul",[s("li",[t._v("参数：包含一个或多个有效的CSS选择器字符串")]),t._v(" "),s("li",[t._v("返回值: CSS选择器匹配的第一个元素。如果没有匹配到，则返回"),s("code",[t._v("null")]),t._v("。")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("获取多个元素"),s("br"),t._v(" "),s("code",[t._v("document.querySelectorAll ( )")])])]),t._v(" "),s("ul",[s("li",[t._v("返回值: CSS选择器匹配的"),s("code",[t._v("NodeList对象(伪数组）")]),t._v("，可以遍历但没有"),s("code",[t._v("pop()")]),t._v("等方法")])])]),t._v(" "),s("li",[t._v("其他获取DOM元素方法（了解)"),s("br"),t._v(" "),s("img",{attrs:{src:a(528),alt:""}})])])]),t._v(" "),s("li",[t._v("设置/修改DOM元素内容\n"),s("ol",[s("li",[s("code",[t._v("document.write()")]),t._v(" "),s("ul",[s("li",[t._v("只能将文本内容追加到"),s("code",[t._v("</body>")]),t._v("前面的位置")]),t._v(" "),s("li",[t._v("文本中包含的"),s("strong",[t._v("标签会被解析")])])])]),t._v(" "),s("li",[t._v("元素"),s("code",[t._v("innerText")]),t._v("属性\n"),s("ul",[s("li",[t._v("将文本内容添加/更新到任意标签位置")]),t._v(" "),s("li",[t._v("文本中包含的"),s("strong",[t._v("标签不会被解析")])])])]),t._v(" "),s("li",[t._v("元素"),s("code",[t._v(".innerHTML")]),t._v("属性\n"),s("ul",[s("li",[t._v("将文本内容添加/更新到任意标签位置")]),t._v(" "),s("li",[t._v("文本中包含的"),s("strong",[t._v("标签会被解析")])])])])])]),t._v(" "),s("li",[t._v("设置/修改DOM元素属性\n"),s("ol",[s("li",[t._v("设置/修改元素常用属性\n"),s("ul",[s("li",[t._v("直接  "),s("code",[t._v("对象.属性名 = 新值")])]),t._v(" "),s("li",[t._v("最常见的属性比如: "),s("code",[t._v("href、title、src")]),t._v("等")])])]),t._v(" "),s("li",[t._v("设置/修改元素样式属性\n"),s("ul",[s("li",[t._v("通过"),s("code",[t._v("style")]),t._v("属性操作CSS\n"),s("ul",[s("li",[s("code",[t._v("'-'")]),t._v("连接符改成小驼峰命名,这是行内样式，记得单位")])])]),t._v(" "),s("li",[t._v("操作类名("),s("code",[t._v("className")]),t._v(")操作CSS\n"),s("ul",[s("li",[s("code",[t._v("元素 . className = '类名'")])])])]),t._v(" "),s("li",[t._v("如果修改的样式较多，通过style属性修改比较繁琐，我们可以借助css类名的形式。\n"),s("ul",[s("li",[t._v("缺陷：会覆盖之前的类名")])])]),t._v(" "),s("li",[s("strong",[s("font",{attrs:{color:"red"}},[t._v("通过classList操作类控制CSS（三个方法）")])],1),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("元素"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("classList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'类名'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//增加一个类")]),t._v("\n元素"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("classList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'类名'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//移除一个类")]),t._v("\n元素"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("classList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toggle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'类名'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//切换一个类")]),t._v("\n元素"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("classList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("contains")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'类名'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//判断是否含此类")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])])])])]),t._v(" "),s("li",[t._v("设置/修改表单元素属性\n"),s("ul",[s("li",[t._v("设置:"),s("code",[t._v("DOM对象.属性名 = 新值")])]),t._v(" "),s("li",[t._v("表单属性中添加就有效果,移除就没有效果,一律使用布尔值表示,如果为"),s("code",[t._v("true")]),t._v("代表添加了该属性,如果是"),s("code",[t._v("false")]),t._v("代表移除了该属性")]),t._v(" "),s("li",[t._v("比如: "),s("code",[t._v("disabled、checked、selected")])])])]),t._v(" "),s("li",[t._v("获取自定义属性\n"),s("ul",[s("li",[t._v("名字以"),s("code",[t._v("data-name")]),t._v("设置，用"),s("code",[t._v("dataset")]),t._v("属性来取得")])])])])]),t._v(" "),s("li",[t._v("定时器-间歇函数\n"),s("ol",[s("li",[t._v("开启定时器"),s("br"),t._v(" "),s("code",[t._v("setInterval ( 函数，间隔时间 )")]),t._v(" "),s("ul",[s("li",[t._v("返回值:返回一个非零数值，这个数字用来作为定时器的唯一标识")])])]),t._v(" "),s("li",[t._v("关闭定时器"),s("br"),t._v(" "),s("code",[t._v("clearInterval ( timer )")]),t._v("可以用来关闭一个定时器")]),t._v(" "),s("li",[s("strong",[t._v("注意：在轮播图里面，点击一次按钮会开启一个定时器，一定要将在点击事件开始时先清除当前元素上的其他定时器")])])])])]),t._v(" "),s("h3",{attrs:{id:"day-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#day-2"}},[t._v("#")]),t._v(" Day 2")]),t._v(" "),s("ol",[s("li",[t._v("事件\n"),s("ol",[s("li",[t._v("事件监听\n"),s("ul",[s("li",[t._v("事件是在编程时系统内发生的动作或者发生的事情")]),t._v(" "),s("li",[t._v("事件监听就是让程序检测是否有事件产生，一旦有事件触发，就立即调用一个函数做出响应，也称为注册事件"),s("br"),t._v(" "),s("code",[t._v("元素.addEventListener('事件',要执行的函数)")])]),t._v(" "),s("li",[t._v("事件监听三要素:\n"),s("ul",[s("li",[t._v("事件源:哪个"),s("code",[t._v("dom")]),t._v("元素被事件触发了，要获取"),s("code",[t._v("dom")]),t._v("元素")]),t._v(" "),s("li",[t._v("事件:用什么方式触发，比如鼠标单击"),s("code",[t._v("click")]),t._v("、鼠标经过"),s("code",[t._v("mouseover")]),t._v("等")]),t._v(" "),s("li",[t._v("事件调用的函数:要做什么事")])])])])]),t._v(" "),s("li",[t._v("拓展阅读-事件监听版本\n"),s("ol",[s("li",[t._v("DOM LO---"),s("code",[t._v("事件源.on事件= function() {}")])]),t._v(" "),s("li",[t._v("DOM L2---"),s("code",[t._v("事件源.addEventListener(事件，事件处理函数)")])])])]),t._v(" "),s("li",[t._v("事件类型\n"),s("ul",[s("li",[t._v("鼠标事件："),s("code",[t._v("click")]),t._v("鼠标点击 "),s("code",[t._v("mouseenter")]),t._v("鼠标经过 "),s("code",[t._v("mouseleave")]),t._v("鼠标离开")]),t._v(" "),s("li",[t._v("焦点事件："),s("code",[t._v("focus")]),t._v("获得焦点 "),s("code",[t._v("blur")]),t._v("失去焦点")]),t._v(" "),s("li",[t._v("键盘事件："),s("code",[t._v("Keydown")]),t._v("键盘按下触发  "),s("code",[t._v("Keyup")]),t._v("键盘抬起触发")]),t._v(" "),s("li",[t._v("文本事件："),s("code",[t._v("input")]),t._v("用户输入事件、"),s("code",[t._v("change")]),t._v("事件（失去焦点时并且表单发生变化触发）")])])]),t._v(" "),s("li",[s("strong",[t._v("全选框案例")]),s("br"),t._v(" "),s("img",{attrs:{src:a(529),alt:""}}),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" cks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//绑定事件")]),t._v("\n  cks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//consoLe.Log(11)")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//只要点击任何一个小按钮，都要遍历所有的小按钮")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" cks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//都来看看是不是有人没有选中")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("checked "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果有false则退出循环结束函数")]),t._v("\n        all"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("checked "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当我们的循环结束，如果代码走到这里，说明没有")]),t._v("\n    all"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("checked "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("     \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])])])])]),t._v(" "),s("li",[t._v("高阶函数\n"),s("ol",[s("li",[t._v("函数表达式：把函数当值来对待")]),t._v(" "),s("li",[t._v("回调函数：如果将函数A做为参数传递给函数B时，我们称函数A为回调函数,例如："),s("code",[t._v("setInterval（fn，1000）")]),t._v(" "),s("code",[t._v("fn")]),t._v("就是回调函数")]),t._v(" "),s("li",[s("strong",[s("font",{attrs:{color:"red"}},[t._v("环境对象this")])],1),s("br"),t._v("\n解析器在调用函数每次都会向函数内部传递进一个隐含的参数this, this指向的是一个对象，"),s("strong",[s("font",{attrs:{color:"red"}},[t._v("定时器里面别用this，指向window")])],1),t._v(" "),s("ol",[s("li",[t._v("以函数形式调用时，"),s("code",[t._v("this")]),t._v("永远都是"),s("code",[t._v("window")])]),t._v(" "),s("li",[t._v("以方法的形式调用时，"),s("code",[t._v("this")]),t._v("是调用方法的对象")]),t._v(" "),s("li",[t._v("以构造函数的形式调用时，"),s("code",[t._v("this")]),t._v("是新创建的那个对象")]),t._v(" "),s("li",[t._v("使用"),s("code",[t._v("call")]),t._v("和"),s("code",[t._v("apply")]),t._v("调用时,"),s("code",[t._v("this")]),t._v("是指定的那个对象")]),t._v(" "),s("li",[t._v("箭头函数中的"),s("code",[t._v("this")]),t._v("，指向定义函数上下文的"),s("code",[t._v("this")]),t._v("。")])])]),t._v(" "),s("li",[t._v("编程思想\n"),s("ul",[s("li",[t._v("当前元素为A状态,其他元素为B状态使用\n"),s("ol",[s("li",[t._v("干掉所有人（包括他自己）：使用"),s("code",[t._v("for")]),t._v("循环")]),t._v(" "),s("li",[t._v("复活他自己：通过"),s("code",[t._v("this")]),t._v("或者下标找到自己或者对应的元素")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//找到以前的active类，移除掉")]),t._v("\n  document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".tab .active"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("classList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"active"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前的元素添加")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("classList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'active'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])])])])])])])]),t._v(" "),s("h3",{attrs:{id:"day-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#day-3"}},[t._v("#")]),t._v(" Day 3")]),t._v(" "),s("ol",[s("li",[t._v("节点操作\n"),s("ol",[s("li",[t._v("DOM节点-- DOM树里每一个内容都称之为节点\n"),s("ul",[s("li",[t._v("元素节点：所有的标签比如"),s("code",[t._v("body、div、html")]),t._v("是根节点")]),t._v(" "),s("li",[t._v("属性节点：·所有的属性比如"),s("code",[t._v("href")])]),t._v(" "),s("li",[t._v("文本节点：所有的文本")]),t._v(" "),s("li",[t._v("其他")])])]),t._v(" "),s("li",[t._v("查找节点\n"),s("ul",[s("li",[t._v("父节点查找\n"),s("ul",[s("li",[s("code",[t._v("parentNode")]),t._v("属性：返回最近一级的父节点，找不到返回为"),s("code",[t._v("null")])])])]),t._v(" "),s("li",[t._v("子节点查找\n"),s("ul",[s("li",[s("code",[t._v("childNodes")]),t._v("：获得所有子节点、"),s("strong",[t._v("包括文本节点（空格、换行)、注释节点等")])]),t._v(" "),s("li",[s("code",[t._v("children(重点)")]),t._v("：仅获得所有元素节点；返回的还是一个"),s("strong",[t._v("伪数组")])])])]),t._v(" "),s("li",[t._v("兄弟节点查找\n"),s("ul",[s("li",[s("code",[t._v("previousElementSibling")]),t._v("属性：表示当前节点的前一个兄弟节点")]),t._v(" "),s("li",[s("code",[t._v("nextElementSibling")]),t._v("属性：表示当前节点的后一个兄弟节点")])])])])]),t._v(" "),s("li",[t._v("增加节点\n"),s("ul",[s("li",[t._v("创建元素节点方法--"),s("code",[t._v("document,createElement('标签名')")])]),t._v(" "),s("li",[t._v("创建文本节点方法---"),s("code",[t._v("document.createTextNode('')")])])])]),t._v(" "),s("li",[t._v("追加节点：（"),s("strong",[t._v("必须由父元素添加")]),t._v("）\n"),s("ul",[s("li",[t._v("在最后加新节点------"),s("code",[t._v("父节点 . appendChild (子节点)")])]),t._v(" "),s("li",[t._v("在指定位置加新节点--"),s("code",[t._v("父节点 . insertBefore (新节点,旧节点)")])]),t._v(" "),s("li",[t._v("替换旧结点----------"),s("code",[t._v("父节点 . replaceChild (新节点,旧节点)")])]),t._v(" "),s("li",[s("strong",[t._v("先给新节点添加内容，再追加给父节点")])])])]),t._v(" "),s("li",[t._v("克隆节点\n"),s("ul",[s("li",[s("code",[t._v("cloneNode（布尔值")]),t._v("：会克隆出一个跟原标签一样的元素\n"),s("ul",[s("li",[t._v("若为"),s("code",[t._v("true")]),t._v("（深拷贝），则代表克隆时会包含后代节点一起克隆")]),t._v(" "),s("li",[t._v("若为"),s("code",[t._v("false")]),t._v("（浅拷贝），则代表克隆时不包含后代节点，默认为"),s("code",[t._v("false")])])])])])]),t._v(" "),s("li",[t._v("删除节点("),s("strong",[t._v("必须由父元素删除")]),t._v(")\n"),s("ul",[s("li",[s("code",[t._v("父节点.removeChild(子节点)")]),t._v(";")]),t._v(" "),s("li",[s("code",[t._v("子节点.parentNode.removeChild(子节点)")]),t._v(";")])])]),t._v(" "),s("li",[s("strong",[s("font",{attrs:{color:"red"}},[t._v("使用innerHTML也可以完成DOM的增册改的相关操作")])],1),t._v(" "),s("ul",[s("li",[s("code",[t._v('city.innerHTML += "<li>广州</li>";')])]),t._v(" "),s("li",[s("code",[t._v("div span ul Li")]),t._v("标签︰设置文字内容  "),s("code",[t._v("元素.innerText")])]),t._v(" "),s("li",[t._v("表单"),s("code",[t._v("input")]),t._v("单选复选 "),s("code",[t._v("textarea select")]),t._v("  表单的"),s("code",[t._v("vaLue")])]),t._v(" "),s("li",[t._v("特殊的"),s("code",[t._v("button")]),t._v("是通过"),s("code",[t._v("inner")]),t._v("来设置")])])])])]),t._v(" "),s("li",[t._v("时间对象\n"),s("ol",[s("li",[t._v("利用new关键字实例化时间\n"),s("ul",[s("li",[t._v("获得当前时间---"),s("code",[t._v("let date = new Date()")])]),t._v(" "),s("li",[t._v("获得指定时间---"),s("code",[t._v("let date = new Date(‘2021-8-29 18:30:00’)")])])])]),t._v(" "),s("li",[t._v("时间对象方法\n"),s("ul",[s("li",[s("code",[t._v("getDate()")]),t._v("  返回月份中的每一天")]),t._v(" "),s("li",[s("code",[t._v("getDay()")]),t._v("  返回星期几(0-6)")]),t._v(" "),s("li",[s("code",[t._v("getMonth()")]),t._v(" 返回月份（0-11）")]),t._v(" "),s("li",[s("code",[t._v("getFullYear()")]),t._v(" 返回四位年份")])])]),t._v(" "),s("li",[t._v("时间戳\n"),s("ul",[s("li",[t._v("指的是从格林威治标准时间的1970年1月1日0时0分0秒到现在的毫秒数")]),t._v(" "),s("li",[s("code",[t._v("getTime()")]),t._v("方法 （需要实例化）")]),t._v(" "),s("li",[s("code",[t._v("+ new Date()")]),t._v(" 利用正号的隐式转换 （需要实例化）")]),t._v(" "),s("li",[s("code",[t._v("Date.now()")])]),t._v(" "),s("li",[s("code",[t._v("new Date().tolocaleString()")]),t._v("  --- 可以生成一个标准时间(简易版)")])])])])]),t._v(" "),s("li",[t._v("重绘和回流\n"),s("ol",[s("li",[t._v("浏览器是如何进行界面渲染的"),s("br"),t._v(" "),s("img",{attrs:{src:a(530),alt:""}}),t._v(" "),s("ul",[s("li",[t._v("解析（Parser)HTML，生成DOM树(DOM Tree)")]),t._v(" "),s("li",[t._v("同时解析(Parser)css，生成样式规则(Style Rules)")]),t._v(" "),s("li",[t._v("根据DOM树和样式规则，生成渲染树(Render Tree)")]),t._v(" "),s("li",[t._v("进行布局Layout(回流/重排):根据生成的渲染树，得到节点的几何信息（位置，大小)")]),t._v(" "),s("li",[t._v("进行绘制 Painting(重绘):根据计算和获取的信息进行整个页面的绘制")]),t._v(" "),s("li",[t._v("Display:展示在页面上")])])]),t._v(" "),s("li",[t._v("回流(重排)"),s("br"),t._v("\n当Render Tree 中部分或者全部元素的尺寸、结构、布局等发生改变时，浏览器就会重新渲染部分或全部文档的过程称为回流。\n"),s("ul",[s("li",[t._v("页面的首次刷新")]),t._v(" "),s("li",[t._v("浏览器的窗口大小发生改变")]),t._v(" "),s("li",[t._v("元素的大小或位置发生改变")]),t._v(" "),s("li",[t._v("改变字体的大小")]),t._v(" "),s("li",[t._v("内容的变化（如"),s("code",[t._v(":input")]),t._v("框的输入，图片的大小)")]),t._v(" "),s("li",[t._v("激活css伪类（如"),s("code",[t._v("::hover")]),t._v(")")]),t._v(" "),s("li",[t._v("脚本操作DOM（添加或者删除可见的DOM元素)"),s("br"),t._v(" "),s("strong",[t._v("简单理解影响到布局了，就会有回流")])])])]),t._v(" "),s("li",[t._v("重绘"),s("br"),t._v("\n由于节点(元素)的样式的改变并不影响它在文档流中的位置和文档布局时(比如: "),s("code",[t._v("color、background-color,outline")]),t._v("等)，称为重绘"),s("br"),t._v(" "),s("strong",[s("font",{attrs:{color:"red"}},[t._v("重绘不一定重排，重排一定会重绘")])],1)]),t._v(" "),s("li",[s("strong",[s("font",{attrs:{color:"red"}},[t._v("如何减少重排？")])],1),t._v(" "),s("ol",[s("li",[t._v("分离读写操作")]),t._v(" "),s("li",[t._v("样式集中改变 ：可以添加一个类，样式都在类中改变")]),t._v(" "),s("li",[t._v("可以使用"),s("code",[t._v("absolute")]),t._v("脱离文档流")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("display:none")]),t._v("，不使用 "),s("code",[t._v("visibility")]),t._v("，也不要改变 它的 "),s("code",[t._v("z-index")])]),t._v(" "),s("li",[t._v("能用css3实现的就用css3实现。")])])])])])]),t._v(" "),s("h3",{attrs:{id:"day-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#day-4"}},[t._v("#")]),t._v(" Day 4")]),t._v(" "),s("ol",[s("li",[t._v("事件对象\n"),s("ol",[s("li",[t._v("获取事件对象"),s("br"),t._v(" "),s("code",[t._v("元素.addEventListener( 'click ' , function (e) {})")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("这个e就是事件对象，记录了事件触发的相关信息")])])])]),t._v(" "),s("li",[t._v("事件对象常用属性\n"),s("ul",[s("li",[s("code",[t._v("type")]),t._v("获取当前的事件类型")]),t._v(" "),s("li",[s("code",[t._v("clientX / clientY")]),t._v("获取光标相对于浏览器可见窗口左上角的位置")]),t._v(" "),s("li",[s("code",[t._v("offsetX / offsetY")]),t._v("获取光标相对于当前DOM元素左上角的位置")]),t._v(" "),s("li",[s("code",[t._v("pageX / pageY")]),t._v(" 整个页面的文档坐标")]),t._v(" "),s("li",[t._v("key用户按下的键盘键的值  (现在不提倡使用"),s("code",[t._v("keycode")]),t._v(")")])])])])]),t._v(" "),s("li",[t._v("事件流\n"),s("ul",[s("li",[t._v("事件流指的是事件完整执行过程中的流动路径"),s("br"),t._v("\n捕获阶段--\x3e目标阶段--\x3e冒泡阶段")]),t._v(" "),s("li",[t._v("捕获阶段触发事件，可以第三个参数设置"),s("code",[t._v("addEventListener( '' function(){}, true )")])]),t._v(" "),s("li",[s("strong",[t._v("事件冒泡")]),t._v(":当一个元素触发事件后，会依次向上调用所有父级元素的"),s("strong",[t._v("同名事件")])]),t._v(" "),s("li",[s("strong",[t._v("阻止事件冒泡")]),s("br"),t._v("\n1. "),s("code",[t._v("e.stopPropagation()")]),t._v("  w3c标准 不支持IE"),s("br"),t._v("\n2. "),s("code",[t._v("e.cancelBubble = true")]),t._v("  不符合w3c标准  支持ie")]),t._v(" "),s("li",[s("strong",[t._v("阻止默认行为，比如链接点击不跳转，表单域的跳转")]),s("br"),t._v("\n+ "),s("code",[t._v("e.preventDefault()")])]),t._v(" "),s("li",[t._v("鼠标经过事件:"),s("br"),t._v("\n+ "),s("code",[t._v("mouseover")]),t._v("和"),s("code",[t._v("mouseout")]),t._v("会有冒泡效果"),s("br"),t._v("\n+ "),s("code",[t._v("mouseenter")]),t._v(" 和"),s("code",[t._v("mouseleave")]),s("strong",[t._v("没有冒泡效果(推荐)")])])])]),t._v(" "),s("li",[t._v("两种注册事件"),s("br"),t._v(" "),s("img",{attrs:{src:a(531),alt:""}})]),t._v(" "),s("li",[t._v("事件委托\n"),s("ul",[s("li",[t._v("事件委托是"),s("strong",[t._v("给父级添加事件")]),t._v("而不是孩子添加事件，利用冒泡减少同一事件绑定的次数")]),t._v(" "),s("li",[s("code",[t._v("e.target")]),t._v("来找到真正触发事件的对象")])])])]),t._v(" "),s("h3",{attrs:{id:"day-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#day-5"}},[t._v("#")]),t._v(" Day 5")]),t._v(" "),s("ol",[s("li",[t._v("滚动事件和加载事件\n"),s("ol",[s("li",[t._v("滚动事件\n"),s("ul",[s("li",[t._v("监听整个页面滚动\n"),s("ol",[s("li",[s("code",[t._v("window.addEventListener( 'scroll', function () { })")])]),t._v(" "),s("li",[t._v("给"),s("code",[t._v("window")]),t._v("或"),s("code",[t._v("document")]),t._v("添加"),s("code",[t._v("scroll")]),t._v("事件")])])]),t._v(" "),s("li",[t._v("监听某个元素的内部滚动直接给某个元素加即可")])])]),t._v(" "),s("li",[s("strong",[t._v("加载事件")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("load")]),t._v("事件\n"),s("ul",[s("li",[t._v("外部资源加载完毕时触发的事件,监听整个页面资源给window 加")])])]),t._v(" "),s("li",[s("code",[t._v("DOMContentLoaded")]),t._v(" "),s("ul",[s("li",[t._v("给"),s("code",[t._v("document")]),t._v(" 加,当初始的"),s("code",[t._v("HTML")]),t._v("文档完全加载和解析完成之后,"),s("code",[t._v("DOMContentLoaded")]),t._v("事件被触发，而无需等待样式表、图像等完全加载")])])])])])])]),t._v(" "),s("li",[t._v("元素大小和位置\n"),s("ol",[s("li",[s("strong",[t._v("scroll家族")]),t._v(" "),s("ol",[s("li",[t._v("获取宽高: "),s("code",[t._v("scrollWidth")]),t._v("和"),s("code",[t._v("scrollHeight")]),t._v(" "),s("ul",[s("li",[t._v("获取"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("元素的内容总宽高(不包含滚动条)")])]),t._v(","),s("strong",[t._v("返回值不带单位")])],1)])]),t._v(" "),s("li",[t._v("获取位置: "),s("code",[t._v("scrollLeft")]),t._v("和"),s("code",[t._v("scrollTop")]),t._v(" "),s("ul",[s("li",[t._v("获取可滚动元素内容往左、往上滚出去看不到的距离, "),s("strong",[t._v("返回值不带单位")])]),t._v(" "),s("li",[t._v("监测html的滚动："),s("code",[t._v("document.documentElement.scrollTop")])]),t._v(" "),s("li",[t._v("这两个属性是"),s("strong",[t._v("可以修改")]),t._v("的")])])])])]),t._v(" "),s("li",[s("strong",[t._v("offset家族")]),t._v(" "),s("ol",[s("li",[t._v("获取宽高: "),s("code",[t._v("offsetWidth")]),t._v("和"),s("code",[t._v("offsetHeight")]),t._v(" "),s("ul",[s("li",[t._v("获取"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("元素的自身宽高、包含元素自身设置的宽高")])]),t._v("、"),s("code",[t._v("padding. Border")])],1)])]),t._v(" "),s("li",[t._v("获取位置:"),s("code",[t._v("offsetLeft")]),t._v("和"),s("code",[t._v("offsetTop")]),t._v(" "),s("strong",[t._v("只读属性")]),t._v(" "),s("ul",[s("li",[t._v("获取元素距离自己定位父级元素的左、上距离")])])]),t._v(" "),s("li",[s("code",[t._v("offsetParent")]),t._v(" "),s("ul",[s("li",[t._v("可以用来获取当前元素的定位父元素")])])])])]),t._v(" "),s("li",[s("strong",[t._v("client家族")]),t._v(" "),s("ol",[s("li",[t._v("获取宽高："),s("code",[t._v("clientwidth")]),t._v("和"),s("code",[t._v("clientHeight")]),t._v(" "),s("ul",[s("li",[t._v("获取"),s("font",{attrs:{color:"red"}},[s("strong",[t._v("元素的可视区域宽度和高度，不含边框和滚动条")])])],1)])]),t._v(" "),s("li",[t._v("获取位置: "),s("code",[t._v("clientLeft")]),t._v("和"),s("code",[t._v("clientTop")]),t._v("  只读属性\n"),s("ul",[s("li",[t._v("获取左边框和上边框宽度")])])])])]),t._v(" "),s("li",[s("code",[t._v("resize")]),t._v("事件：会在窗口尺寸改变的时候触发事件:\n"),s("ul",[s("li",[t._v("检测屏幕宽度")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'resize'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" w "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("documentElement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clienWidth\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])])]),t._v(" "),s("li",[t._v("滚动条检测\n"),s("ul",[s("li",[s("strong",[t._v("当满足"),s("code",[t._v("scrollHeight - scrollTop == clientHeight")]),t._v("说明垂直滚动条滚动到底了")])]),t._v(" "),s("li",[s("strong",[t._v("当满足"),s("code",[t._v("scrollwidth - scrollLeft == clientwidth")]),t._v("说明水平滚动条滚动到底")])])])]),t._v(" "),s("li",[t._v("轮播图技巧\n"),s("ul",[s("li",[s("strong",[t._v("轮播图最后一张回到第一张")]),t._v("："),s("code",[t._v("索引号 = 索引号 % 数组长度")])]),t._v(" "),s("li",[s("strong",[t._v("第一张回到最后一张")]),t._v("："),s("code",[t._v("索引号 = (数组长度 + 索引号) % 数组长")])])])])])])]),t._v(" "),s("h3",{attrs:{id:"day-6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#day-6"}},[t._v("#")]),t._v(" Day 6")]),t._v(" "),s("ol",[s("li",[t._v("Window对象\n"),s("ol",[s("li",[t._v("BOM(浏览器对象模型)"),s("br"),t._v(" "),s("img",{attrs:{src:a(532),alt:""}})]),t._v(" "),s("li",[t._v("定时器-延时函数"),s("br"),t._v(" "),s("code",[t._v("setTimeout(回调函数，等待的毫秒数)")]),t._v("   仅仅只执行一次\n"),s("ul",[s("li",[t._v("递归函数：自己调用自己的函数，一定要"),s("strong",[t._v("加上退出条件")]),t._v("，以免死递归")]),t._v(" "),s("li",[s("code",[t._v("setTimeout")]),t._v("结合递归函数，能模拟"),s("code",[t._v("setlnterval")]),t._v("重复执行")])])]),t._v(" "),s("li",[t._v("JS执行机制\n"),s("ul",[s("li",[t._v("JavaScript语言的一大特点就是单线程，也就是说，同一个时间只能做一件事。作为浏览器脚本语言，JavaScript以主要用途是与用户互动，以及操作DOM。这决定了它只能是单线程，否则会带来很复杂的同步问题")]),t._v(" "),s("li",[t._v("同步任务:同步任务都在主线程上执行，形成一个执行栈")]),t._v(" "),s("li",[t._v("异步任务:JS的异步是通过回调函数实现的\n"),s("ol",[s("li",[t._v("普通事件，如"),s("code",[t._v("click、resize")]),t._v("等")])]),t._v(" "),s("ul",[s("li",[t._v("资源加载，如 "),s("code",[t._v("load、error")]),t._v("等")]),t._v(" "),s("li",[t._v("定时器，包括 "),s("code",[t._v("setInterval、setTimeout")]),t._v("等")])])]),t._v(" "),s("li",[t._v("由于主线程不断的重复获得任务、执行任务、再获取任务、再执行，所以这种机制被称为"),s("strong",[t._v("事件循环")]),t._v("（"),s("code",[t._v("event loop")]),t._v(")")])])]),t._v(" "),s("li",[t._v("location对象"),s("br"),t._v(" "),s("img",{attrs:{src:a(533),alt:""}})]),t._v(" "),s("li",[t._v("navigator对象\n"),s("ul",[s("li",[t._v("代表的当前浏览器的信息，通过该对象可以来识别不同的浏览器")]),t._v(" "),s("li",[t._v("一般我们只会使用"),s("code",[t._v("userAgent")]),t._v("来判断浏览器的信息, 或者"),s("code",[t._v("Activexobject")])])])]),t._v(" "),s("li",[t._v("histroy对象"),s("br"),t._v(" "),s("img",{attrs:{src:a(534),alt:""}})])])]),t._v(" "),s("li",[t._v("本地存储\n"),s("ol",[s("li",[t._v("本地存储特性\n"),s("ol",[s("li",[t._v("数据存储在用户浏览器中")]),t._v(" "),s("li",[t._v("设置、读取方便、甚至页面刷新不丢失数据")]),t._v(" "),s("li",[t._v("容量较大，"),s("code",[t._v("sessionStorage")]),t._v("和"),s("code",[t._v("localStorage")]),t._v("约5M左右")])])]),t._v(" "),s("li",[s("code",[t._v("localStorage")]),t._v(" "),s("ol",[s("li",[t._v("生命周期永久生效，除非手动删除否则关闭页面也会存在")]),t._v(" "),s("li",[t._v("可以多窗口(页面）共享（同一浏览器可以共享)")]),t._v(" "),s("li",[t._v("以键值对的形式存储使用")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("   localStorage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setltem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'键'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'值'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//存储数据")]),t._v("\n   localStorage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getltem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'键'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取数据")]),t._v("\n   localStorage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeltem")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//删除数据")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("ol",{attrs:{start:"4"}},[s("li",[s("strong",[t._v("存储复杂数据类型存储")]),t._v(" "),s("ul",[s("li",[t._v("本地只能存储字符串,无法存储复杂数据类型")])]),t._v(" "),s("ol",[s("li",[s("code",[t._v("JSON.stringify(复杂数据类型)")]),t._v("  -- 将复杂数据转换成JSON字符串存储本地存储中")]),t._v(" "),s("li",[s("code",[t._v("JSON.parse(JSON字符串)")]),t._v("  -- 将JSON字符串转换成对象取出时候使用")])])])])]),t._v(" "),s("li",[s("code",[t._v("sessionStorage")]),t._v(" (了解)\n"),s("ol",[s("li",[t._v("生命周期为关闭浏览器窗口")]),t._v(" "),s("li",[t._v("在同一个窗口(页面)下数据可以共享")]),t._v(" "),s("li",[t._v("以键值对的形式存储使用")]),t._v(" "),s("li",[t._v("用法跟localStorage基本相同")])]),t._v(" "),s("ul",[s("li",[t._v("使用场景：多页表单填写，用户可能返回上一页修改；用户误刷新")])])])])])]),t._v(" "),s("h3",{attrs:{id:"day-7"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#day-7"}},[t._v("#")]),t._v(" Day 7")]),t._v(" "),s("ol",[s("li",[t._v("正则表达式\n"),s("ol",[s("li",[t._v("正则表达式有什么作用?\n"),s("ul",[s("li",[t._v("表单验证（匹配) -- 过滤敏感词（替换)  -- 字符串中提取我们想要的部分（提取)")])])]),t._v(" "),s("li",[t._v("定义\n"),s("ul",[s("li",[s("code",[t._v("let 变量名=/表达式/匹配模式")]),t._v("    i 忽略大小写  g全局匹配模式")]),t._v(" "),s("li",[s("code",[t._v('let变量名=new RegExp("正则表达式","匹配模式")')]),t._v(";")])])]),t._v(" "),s("li",[t._v("检测方法\n"),s("ul",[s("li",[s("code",[t._v("reg.test('待检测字符串')")]),t._v("  返回值为布尔值")]),t._v(" "),s("li",[s("code",[t._v("reg.exec('字符串')")]),t._v("  返回一个数组")])])]),t._v(" "),s("li",[t._v("元字符（特殊字符）\n"),s("ol",[s("li",[t._v("边界符（表示位置，开头和结尾，必须用什么开头，用什么结尾)\n"),s("ol",[s("li",[s("code",[t._v("^")]),t._v("表示匹配行首的文本(以谁开始)")]),t._v(" "),s("li",[s("code",[t._v("$")]),t._v(" 表示匹配行尾的文本(以谁结束)")]),t._v(" "),s("li",[t._v("如果"),s("code",[t._v("^$")]),t._v("在一起，表示精确匹配")])])]),t._v(" "),s("li",[t._v("量词（表示重复次数)"),s("br"),t._v(" "),s("img",{attrs:{src:a(535),alt:""}})]),t._v(" "),s("li",[t._v("字符类(比如"),s("code",[t._v("\\d表示0~9")]),t._v(")"),s("br"),t._v(" "),s("img",{attrs:{src:a(536),alt:""}})]),t._v(" "),s("li",[t._v(".表示除了换行外的任意字符"),s("br"),t._v(" "),s("img",{attrs:{src:a(537),alt:""}})])])]),t._v(" "),s("li",[s("strong",[t._v("过滤敏感词")]),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    字符串"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token regex"}},[s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("正则表达式")]),s("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'替换的文本'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[s("code",[t._v("split()")]),t._v(" "),s("ul",[s("li",[t._v("可以将一个字符串拆分为一个数组")]),t._v(" "),s("li",[t._v("方法中可以传一个正则表达式作为参数，这样将会根据正则表达式去拆分字符串")])])]),t._v(" "),s("li",[s("code",[t._v("search()")]),t._v(" "),s("ul",[s("li",[t._v("可以搜索字符串中是否含有指定内容")]),t._v(" "),s("li",[t._v("如果搜索到指定内容，则会返回第一次出现的索引，如果没有搜索到返回-1")]),t._v(" "),s("li",[t._v("它可以接受一个正则表达式作为参数，然后会根据正则表达式去检索字符串")]),t._v(" "),s("li",[s("code",[t._v("search()")]),t._v("只会查找第一个，即使设置全局匹配也没用")])])]),t._v(" "),s("li",[s("code",[t._v("match()")]),t._v(" "),s("ul",[s("li",[t._v("可以根据正则表达式，从一个字符串中将符合条件的内容提取出来")]),t._v(" "),s("li",[t._v("默认情况下我们的match只会找到第一个符合要求的内容，找到以后就停止")]),t._v(" "),s("li",[t._v("我们可以设置正则表达式为全局匹配模式，这样就会匹配到所有的内容可以为一个正则表达式设置多个匹配模式，且顺序无所谓")]),t._v(" "),s("li",[s("code",[t._v("match()")]),t._v("会将匹配到的内容"),s("strong",[t._v("封装到一个数组中返回")]),t._v("，即使只查询到一个结果")])])])])])]),t._v(" "),s("h2",{attrs:{id:"面向对象-js高级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面向对象-js高级"}},[t._v("#")]),t._v(" 面向对象+JS高级")]),t._v(" "),s("h3",{attrs:{id:"day-1-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#day-1-2"}},[t._v("#")]),t._v(" Day 1")]),t._v(" "),s("ol",[s("li",[t._v("面向对象编程介绍\n"),s("ol",[s("li",[t._v("面向过程 蛋炒饭\n"),s("ul",[s("li",[t._v("优点∶性能比面向对象高，适合跟硬件联系很紧密的东西，例如单片机就采用的面向过程编程")]),t._v(" "),s("li",[t._v("缺点∶没有面向对象易维护、易复用、易扩展")])])]),t._v(" "),s("li",[t._v("面向对象("),s("strong",[t._v("继承性、多态性、封装性")]),t._v(") 盖浇饭\n"),s("ul",[s("li",[t._v("优点∶易维护、易复用、易扩展，由于面向对象有封装、继承、多态性的特性，可以设计出低耦合的系统，使系统更加灵活、更加易于维护")]),t._v(" "),s("li",[t._v("缺点︰性能比面向过程低")])])])])]),t._v(" "),s("li",[t._v("ES6中的类和对象\n"),s("ol",[s("li",[t._v("对象\n"),s("ul",[s("li",[t._v("对象是由属性和方法组成的，"),s("strong",[t._v("对象特指某一个，通过类实例化一个具体的对象")])])])]),t._v(" "),s("li",[t._v("类\n"),s("ul",[s("li",[t._v("类抽象了对象的公共部分，它泛指某一大类( class )")])])]),t._v(" "),s("li",[t._v("面向对象的思维特点:\n"),s("ol",[s("li",[t._v("抽取（抽象）对象共用的属性和行为组织(封装)成一个类(模板)")]),t._v(" "),s("li",[t._v("对类进行实例化,获取类的对象"),s("br"),t._v(" "),s("img",{attrs:{src:a(538),alt:""}}),s("br"),t._v(" "),s("strong",[t._v("类里面可以添加方法，不需要function关键词，多个方法之间不用逗号隔开")])])])])])]),t._v(" "),s("li",[t._v("类的继承\n"),s("ol",[s("li",[s("code",[t._v("class son extends Father { }")]),t._v("子类继承父类的一些属性和方法")]),t._v(" "),s("li",[s("code",[t._v("super")]),t._v("关键字用于访问和调用对象父类上的函数。可以调用父类的构造函数，也可以调用父类的普通函数")]),t._v(" "),s("li",[t._v("子类在构造函数中使用"),s("code",[t._v("super")]),t._v(",必须放到"),s("code",[t._v("this")]),t._v("前面(必须先调用父类的构造方法,在使用子类构造方法)")]),t._v(" "),s("li",[t._v("在ES6中类没有变量提升，所以必须先定义类，才能通过类实例化对象")]),t._v(" "),s("li",[t._v("类里面的共有的属性和方法一定要加this使用")]),t._v(" "),s("li",[s("code",[t._v("constructor")]),t._v("里面的"),s("code",[t._v("this")]),t._v("指向实例对象,方法里面的"),s("code",[t._v("this")]),t._v("指向这个方法的调用者")])])])]),t._v(" "),s("h3",{attrs:{id:"day-2-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#day-2-2"}},[t._v("#")]),t._v(" Day 2")]),t._v(" "),s("ol",[s("li",[t._v("构造函数"),s("br"),t._v("\n构造函数是一种特殊的函数，主要用来初始化对象，即为对象成员变量赋初始值，它总与"),s("code",[t._v("new")]),t._v("一起使用。我们可以把对象中一些公共的属性和方法抽取出来，然后封装到这个函数里面\n"),s("ul",[s("li",[t._v("new在执行时会做四件事情:\n"),s("ol",[s("li",[t._v("在内存中创建一个新的空对象。")]),t._v(" "),s("li",[t._v("让this指向这个新的对象。")]),t._v(" "),s("li",[t._v("执行构造函数里面的代码，给这个新对象添加属性和方法。")]),t._v(" "),s("li",[t._v("返回这个新对象（所以构造函数里面不需要"),s("code",[t._v("return")]),t._v(")。")])])]),t._v(" "),s("li",[t._v("静态成员:在构造函数本身上添加的成员称为静态成员，只能由构造函数本身来访问·")]),t._v(" "),s("li",[t._v("实例成员:在构造函数内部创建的对象成员称为实例成员，只能由实例化的对象来访问")]),t._v(" "),s("li",[t._v("构造函数方法很好用，但是"),s("strong",[t._v("存在浪费内存的问题")])])])]),t._v(" "),s("li",[t._v("原型"),s("br"),t._v("\nES6之前通过构造函数+原型实现面向对象编程\n"),s("ol",[s("li",[t._v("构造函数有原型对象"),s("code",[t._v("prototype")]),t._v("，默认指向"),s("strong",[t._v("空"),s("code",[t._v("Object")]),t._v("对象")])]),t._v(" "),s("li",[t._v("构造函数原型对象"),s("code",[t._v("prototype")]),t._v("里面有"),s("code",[t._v("constructor")]),t._v("指向构造函数本身")]),t._v(" "),s("li",[t._v("构造函数可以通过原型对象添加方法")]),t._v(" "),s("li",[t._v("构造函数创建的"),s("strong",[t._v("实例对象有"),s("code",[t._v("__proto__")]),t._v("原型")]),t._v("指向构造函数的原型对象")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("__proto__")]),t._v("对象原型和原型对象"),s("code",[t._v("prototype")]),t._v("是等价的")])]),t._v(" "),s("li",[t._v("对象原型("),s("code",[t._v("__proto__")]),t._v(")和构造函数( "),s("code",[t._v("prototype")]),t._v(" )原型对象里面都有一个属性"),s("code",[t._v("constructor")]),t._v("属性，"),s("code",[t._v("constructor")]),t._v("我们称为构造函数，因为它指回构造函数本身。")]),t._v(" "),s("li",[s("strong",[t._v("如果我们修改了原来的原型对象,给原型对象赋值的是一个对象,则必须手动的利用"),s("code",[t._v("constructor")]),t._v("指回原来的构造函数")]),s("br"),t._v(" "),s("img",{attrs:{src:a(539),alt:""}})])])]),t._v(" "),s("li",[t._v("组合继承"),s("br"),t._v("\nES6之前并没有给我们提供"),s("code",[t._v("extends")]),t._v("继承。我们可以通过"),s("strong",[t._v("构造函数+原型对象")]),t._v("模拟实现继承，被称为组合继承"),s("br"),t._v(" "),s("img",{attrs:{src:a(540),alt:""}}),t._v(" "),s("ul",[s("li",[s("strong",[t._v("如何从原型继承方法（"),s("font",{attrs:{color:"red"}},[t._v("两个要点")]),t._v("）")],1),s("br"),t._v(" "),s("img",{attrs:{src:a(541),alt:""}})])])]),t._v(" "),s("li",[t._v("类的本质\n"),s("ul",[s("li",[s("strong",[t._v("类的本质其实还是一个函数，我们也可以简单的认为类就是构造函数的另外一种写法")]),t._v(" "),s("ol",[s("li",[t._v("类有原型对象"),s("code",[t._v("prototype")])]),t._v(" "),s("li",[t._v("类原型对象"),s("code",[t._v("prototype")]),t._v("里面有"),s("code",[t._v("constructor")]),t._v("指向类本身")]),t._v(" "),s("li",[t._v("类可以通过原型对象添加方法")]),t._v(" "),s("li",[t._v("所以ES6的类其实就是语法糖.")])])])])]),t._v(" "),s("li",[t._v("ES5新增方法\n"),s("ol",[s("li",[s("code",[t._v("forEach")]),t._v("数组遍历"),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'每个数组元素'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'每个数组元素的索引号'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'数组本身'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])])]),t._v(" "),s("li",[s("code",[t._v("fiflter")]),t._v("方法"),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fiflter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("currentValue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[s("code",[t._v("filter()")]),t._v("方法创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素,主要用于筛选数组")]),t._v(" "),s("li",[s("strong",[s("font",{attrs:{color:"red"}},[t._v("注意它直接返回一个新数组")])],1)])])]),t._v(" "),s("li",[s("code",[t._v("some")]),t._v("方法\n"),s("ul",[s("li",[s("code",[t._v("some()")]),t._v("方法用于检测数组中的元素是否满足指定条件.通俗点查找数组中是否有满足条件的元素")]),t._v(" "),s("li",[s("strong",[s("font",{attrs:{color:"red"}},[t._v("注意它返回值是布尔值,如果查找到这个元素,就返回"),s("code",[t._v("true")]),t._v("，如果查找不到就返回"),s("code",[t._v("false")]),t._v(".")])],1)]),t._v(" "),s("li",[t._v("如果找到第一个满足条件的元素,则终止循环不在继续查找.")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("Some")]),t._v("和"),s("code",[t._v("foreach")]),t._v("的区别")]),t._v(" "),s("ol",[s("li",[t._v("在"),s("code",[t._v("forEach")]),t._v("里面"),s("code",[t._v("return")]),t._v("不会终止迭代")]),t._v(" "),s("li",[t._v("在"),s("code",[t._v("some")]),t._v("里面遇到 "),s("code",[t._v("return true")]),t._v("就是终止遍历迭代效率更高")])])])])]),t._v(" "),s("li",[s("code",[t._v("reduce")]),t._v("方法\n"),s("ul",[s("li",[s("code",[t._v(".reduce((累加的结果,当前循环项)=>( { }，初始值)")])])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("amt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("item")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" amt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("price "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("count\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])])]),t._v(" "),s("li",[s("code",[t._v("trim()")]),t._v(" 去除字符串前后的空白。")]),t._v(" "),s("li",[s("code",[t._v("Object.defineProperty")]),t._v("定义新属性或修改原有属性"),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'num'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//>>第三个参数以对象书写    ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("设置属性的值默认为"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("writable")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("值是否可以重写。"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" 默认为"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("enumerable")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("目标属性是否可以被枚举。"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("默认为"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("configurable")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("目标属性是否可以被删除或是否可以再次修改特性"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" 默认为"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])])]),t._v(" "),s("li",[s("code",[t._v("Object.keys（）")]),t._v(" "),s("ul",[s("li",[t._v("用于获取对象自身所有的属性，"),s("strong",[t._v("返回一个由属性名（一层）组成的数组")])])])])])])]),t._v(" "),s("h3",{attrs:{id:"day-3-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#day-3-2"}},[t._v("#")]),t._v(" Day 3")]),t._v(" "),s("ol",[s("li",[t._v("函数的定义和调用方式\n"),s("ol",[s("li",[t._v("函数声明方式"),s("code",[t._v("function")]),t._v("关键字(命名函数)")]),t._v(" "),s("li",[t._v("函数表达式(匿名函数)")]),t._v(" "),s("li",[s("code",[t._v("new Function（'参数1’,’参数2’,’函数体’）")]),t._v(" "),s("ul",[s("li",[t._v("所有函数都是"),s("code",[t._v("Function")]),t._v("的实例(对象)")]),t._v(" "),s("li",[t._v("所有的函数都是对象")])])])])]),t._v(" "),s("li",[s("strong",[t._v("call、apply和bind")]),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj，"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'参数1'")]),t._v("，"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'参数2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n    fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apply（obj，"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'参数1'")]),t._v("，"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'参数2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("） "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//与call的不同点是参数用伪数组传递  ")]),t._v("\n        Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("apply（Math，arr）"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以用来求数组中的最值  ")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj，"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'参数1'")]),t._v("，"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'参数2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//与call不同是他不会调用函数，返回原函数的拷贝  ")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" btns "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelectorAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'button'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("btns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        btns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("disabled "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("disabled "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])])]),t._v(" "),s("li",[t._v("严格模式\n"),s("ol",[s("li",[t._v("为脚本开启严格模式\n"),s("ul",[s("li",[s("code",[t._v("use strict")]),t._v("   //"),s("code",[t._v("'use strict'")]),t._v(" 放在一个立即执行函数里第一行")])])]),t._v(" "),s("li",[t._v("为函数开启严格模式\n"),s("ul",[s("li",[t._v("在某个函数里面第一行添加 "),s("code",[t._v("'use strict'")])]),t._v(" "),s("li",[t._v("严格模式语法变化\n"),s("ol",[s("li",[t._v("我们的变量名必须先声明再使用")]),t._v(" "),s("li",[t._v("我们不能随意删除已经声明好的变量")]),t._v(" "),s("li",[s("strong",[t._v("严格模式下全局作用域中函数中的"),s("code",[t._v("this")]),t._v("是"),s("code",[t._v("undefined")])])]),t._v(" "),s("li",[t._v("严格模式下,如果构造函数不加"),s("code",[t._v("new")]),t._v("调用,"),s("code",[t._v("this")]),t._v("会报错.")]),t._v(" "),s("li",[t._v("定时器"),s("code",[t._v("this")]),t._v(" 还是指向"),s("code",[t._v("window")])]),t._v(" "),s("li",[t._v(".函数不能有重名的参数")]),t._v(" "),s("li",[t._v("不允许在非函数的代码块内声明函数。")])])])])])])]),t._v(" "),s("li",[t._v("高阶函数\n"),s("ul",[s("li",[t._v("高阶函数是对其他函数进行操作的函数，它"),s("strong",[t._v("接收函数作为参数")]),t._v("或将"),s("strong",[t._v("函数作为返回值")])])])]),t._v(" "),s("li",[t._v("闭包\n"),s("ul",[s("li",[t._v("闭包( closure )指有权"),s("strong",[t._v("访问另一个函数作用域中变量")]),t._v("的函数。\n"),s("ol",[s("li",[t._v("理解一:闭包是嵌套的内部函数(绝大部分人)")]),t._v(" "),s("li",[t._v("理解二:包含被引用变量(函数)的对象(极少数人)")])])]),t._v(" "),s("li",[t._v("闭包的作用：\n"),s("ol",[s("li",[t._v("闭包作为返回值，函数运行完成变量却不会被销毁。(延长了局部变量的生命周期)")]),t._v(" "),s("li",[t._v("让函数外部可以操作(读与)到函数内部的数据(变量/函数)")]),t._v(" "),s("li",[t._v("可以用来实现模块化或封装代码。")])])])])]),t._v(" "),s("li",[t._v("递归\n"),s("ul",[s("li",[s("strong",[t._v("函数内部自己调用自己，这个函数就是递归函数")])]),t._v(" "),s("li",[s("strong",[s("font",{attrs:{color:"red"}},[t._v("递归函数必须加退出条件")])],1)])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//利用递归求解 n！")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//递归退出条件")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" n "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])])]),t._v(" "),s("li",[t._v("浅拷贝和深拷贝\n"),s("ol",[s("li",[t._v("浅拷贝只是拷贝一层,更深层次对象级别的只拷贝引用.\n"),s("ol",[s("li",[s("code",[t._v("Object.assign(o,obj)")]),t._v(";")]),t._v(" "),s("li",[s("code",[t._v("for in")])])])]),t._v(" "),s("li",[t._v("深拷贝拷贝多层,每一级别的数据都会拷贝.\n"),s("ol",[s("li",[t._v("递归（先判断数组在判断对象）"),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("deepClone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//obj是null或者不是数组或者对象，直接返回")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意此处typeof的是小写的object，null判断用的==而不是===")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" obj\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//保证key不是原型上的属性")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("deepClone")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br")])])]),t._v(" "),s("li",[s("code",[t._v("JSON")]),t._v("转字符串--\x3e"),s("code",[t._v("JSON")]),t._v("转对象"),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newStr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringfy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newStr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" newObj  \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])])])])])])]),t._v(" "),s("li",[s("code",[t._v("let")]),t._v("和"),s("code",[t._v("const")]),t._v(" "),s("ol",[s("li",[t._v("let不能重复定义变量，var可以重复定义变量。")]),t._v(" "),s("li",[t._v("let有块级作用域，var没有块级作用域。")]),t._v(" "),s("li",[t._v("let没有变量提升，但有暂时性死区")]),t._v(" "),s("li",[t._v("const是设置常量，也就是不能改变。const定义的数值字符串的时候值不能改变。")]),t._v(" "),s("li",[t._v("const定义的对象的时候，对象不能改变，但是对象的属性值可以改变。")])]),t._v(" "),s("ul",[s("li",[t._v("对比\n"),s("ol",[s("li",[t._v("使用var声明的变量，其作用域为该语句所在的函数内，且存在变量提升现象。")]),t._v(" "),s("li",[t._v("使用let声明的变量，其作用域为该语句所在的代码块内，不存在变量提升。")]),t._v(" "),s("li",[t._v("使用const声明的是常量，在后面出现的代码中不能再修改该常量的值。")])])])])]),t._v(" "),s("li",[t._v("数组解构\n"),s("ol",[s("li",[t._v("数组解构允许我们按照一一对应的关系从数组中提取值")]),t._v(" "),s("li",[s("code",[t._v("let [a, b, c, d, e] = arr;")])])])]),t._v(" "),s("li",[t._v("对象解构\n"),s("ol",[s("li",[s("code",[t._v("let { name, age ) = person ;")])]),t._v(" "),s("li",[s("code",[t._v("let { name:Myname , age:Myage} = person;")])])])]),t._v(" "),s("li",[t._v("箭头函数\n"),s("ol",[s("li",[t._v("一般会定义一个变量接收 "),s("code",[t._v("const fn = ( ) => { }")])]),t._v(" "),s("li",[s("strong",[t._v("函数体中只有一句代码，且代码的执行结果就是返回值，可以省略大括号")]),s("br"),t._v(" "),s("code",[t._v("const sum = (num1 , num2) => num1 + num2 ;")])]),t._v(" "),s("li",[t._v("如果形参只有一个，可以省略小括号"),s("br"),t._v(" "),s("code",[t._v("const fn = v => v;")])]),t._v(" "),s("li",[t._v("箭头函数中可以形参用"),s("code",[t._v("…args")]),t._v("来接收不定数量的实参"),s("br"),t._v(" "),s("code",[t._v("const sum = (…args) => { }")])]),t._v(" "),s("li",[s("code",[t._v("…s2")]),t._v("可以接收剩余所有解构属性"),s("br"),t._v(" "),s("code",[t._v("let [s1, ...s2] = students")])]),t._v(" "),s("li",[t._v("在调用函数时，浏览器每次都会传递进两个隐含的参数:\n"),s("ol",[s("li",[t._v("函数的上下文对象this")]),t._v(" "),s("li",[t._v("封装实参的对象arguments\n"),s("ul",[s("li",[t._v("arguments是一个类数组对象,它也可以通过索引来操作数据，也可以获取长度")]),t._v(" "),s("li",[t._v("arguments.length可以用来获取实参的长度")]),t._v(" "),s("li",[t._v("我们即使不定义形参，也可以通过arguments来使用实参，只不过比较麻烦,arguments[0]表示第一个实参，arguments[1]表示第二个实参")]),t._v(" "),s("li",[t._v("它里边有一个属性叫做callee, 对应当前正在指向的函数的对象")])])])])])])]),t._v(" "),s("li",[t._v("扩展运算符\n"),s("ol",[s("li",[t._v("扩展运算符可以将数组或者对象转为用逗号分隔的参数序列。")]),t._v(" "),s("li",[t._v("扩展运算符可以应用于合并数组。"),s("br"),t._v(" "),s("code",[t._v("let ary3 = [ ...ary1 , ...ary2];")]),s("br"),t._v(" "),s("code",[t._v("ary1.push ( ...ary2) ;")])]),t._v(" "),s("li",[t._v("将类数组或可遍历对象转换为真正的数组  "),s("code",[t._v("oDivs = [...oDivs];")])])])]),t._v(" "),s("li",[t._v("array扩展方法\n"),s("ol",[s("li",[t._v("构造函数方法: Array.from()\n"),s("ul",[s("li",[t._v("将类数组或可遍历对象转换为真正的数组")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arrayLike"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   [ 'a','b','c']   ")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("方法还可以接受第二个参数，作用类似于数组的map方法，用来对每个元素进行处理,将处理后的值放入返回的数组.")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newAry "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("aryLike"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[t._v("实例方法:find()\n"),s("ul",[s("li",[t._v("用于找出第一个符合条件的数组成员，如果没有找到返回undefined")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" target "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[t._v("实例方法: findIndex()\n"),s("ul",[s("li",[t._v("用于找出第一个符合条件的数组成员的位置，如果没有找到返回-1")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findIndex")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value， index")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[t._v("实例方法: includes()\n"),s("ul",[s("li",[t._v("表示某个数组是否包含给定的值，返回布尔值。")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("，"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("，"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("includes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  true  ")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])])]),t._v(" "),s("li",[t._v("String的扩展方法\n"),s("ol",[s("li",[t._v("实例方法: startsWith()和endsWith()"),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("startsWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("表示参数字符串是否在原字符串的头部，返回布尔值\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("endsWith")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("表示参数字符串是否在原字符串的尾部，返回布尔值  \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])]),t._v(" "),s("li",[t._v("实例方法: repeat()\n"),s("ul",[s("li",[t._v("repeat方法表示将原字符串重复n次，返回一个新字符串。")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//  "xxx"  ')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[t._v("indexof()和lastIndexOf();\n"),s("ul",[s("li",[t._v("检索一个字符串中是否含有指定内容, 如果字符串中含有该内容，则会返回其第一次出现的索引,如果没有找到指定的内容，则返回-1")]),t._v(" "),s("li",[t._v("可以指定一个第二个参数，指定开始查找的位置")])])]),t._v(" "),s("li",[t._v("split（）\n"),s("ul",[s("li",[t._v("可以将一个字符串拆分为一个数组")]),t._v(" "),s("li",[t._v("需要一个字符串作为参数，将会根据该字符串去拆分数组, 如果传递一个空串作为参数，则会将每个字符都拆分为数组中的一个元素")])])])])]),t._v(" "),s("li",[t._v("使用instanceof可以检查一个对象是否是一个类的实例\n"),s("ul",[s("li",[t._v("对象instanceof构造函数")]),t._v(" "),s("li",[t._v("如果是，则返回true，否则返回false")]),t._v(" "),s("li",[t._v("所有的对象都是Object的后代，")]),t._v(" "),s("li",[t._v("所以任何对象和Object在instanceof检查时都会返回true")])])]),t._v(" "),s("li",[t._v("set数据结构\n"),s("ol",[s("li",[t._v("ES6提供了新的数据结构Set。它是类数组，成员的值都是唯一的。")]),t._v(" "),s("li",[t._v("Set本身是一个构造函数，用来生成Set 数据结构。"),s("code",[t._v("const s = new Set () ;")])]),t._v(" "),s("li",[t._v("Set函数可以接受一个数组作为参数，用来初始化。 "),s("code",[t._v("const set = new set ( [1,2,3,4,4]);")])]),t._v(" "),s("li",[s("strong",[t._v("利用set数据结构做数组去重")]),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" s3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("s3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//['a','b']  ")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])]),t._v(" "),s("li",[t._v("实例方法"),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("添加某个值，返回Set结构本身  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("删除某个值，返回一个布尔值，表示删除是否成功  \n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("has")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("返回一个布尔值，表示该值是否为Set的成员  \n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("清除所有成员，没有返回值  \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])])])])]),t._v(" "),s("li",[t._v("垃圾回收（GC)\n"),s("ol",[s("li",[t._v("就像人生活的时间长了会产生垃圾一样，程序运行过程中也会产生垃圾,这些垃圾积攒过多以后，会导致程序运行的速度过慢，所以我们需要一个垃圾回收的机制，来处理程序运行过程中产生垃圾.")]),t._v(" "),s("li",[t._v("当一个对象没有任何的变量或属性对它进行引用，此时我们将永远无法操作该对象，此时这种对象就是一个垃圾，这种对象过多会占用大量的内存空间，导致程序运行变慢，所以这种垃圾必须进行清理。")]),t._v(" "),s("li",[t._v("在JS中拥有自动的垃圾回收机制，会自动将这些垃圾对象从内存中销毁，我们不需要也不能进行垃圾回收的操作")]),t._v(" "),s("li",[s("strong",[t._v("我们需要做的只是要将不再使用的对象设置null即可")])])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);