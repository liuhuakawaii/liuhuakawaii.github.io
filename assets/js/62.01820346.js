(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{616:function(s,t,n){"use strict";n.r(t);var a=n(2),e=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"算法技巧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#算法技巧"}},[s._v("#")]),s._v(" 算法技巧")]),s._v(" "),t("ol",[t("li",[s._v("预处理数组\n"),t("ul",[t("li",[s._v("如果发现需要频繁查询，可以尝试总结需要获取的信息是否可以有统一规律，来生成辅助数组记录数据")])])]),s._v(" "),t("li",[s._v("加工等概率题型\n"),t("ul",[t("li",[s._v("先生成01概率发生器，利用二进制")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//如果一个函数生成0的概率是p，1的概率是1-p，请改造成等概率生成0,1的函数   ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//生成两遍 ，01定为0返回，10定为1返回")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("出现两次"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("或两次"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])]),s._v(" "),t("li",[s._v("打表法\n"),t("ul",[t("li",[s._v("输入参数和输出参数很简单的时候，可以先用笨方法获取输出值的规律")])])]),s._v(" "),t("li",[s._v("子串子数组题型\n"),t("ul",[t("li",[s._v("求出以每个位置结尾的情况下答案是多少")])])]),s._v(" "),t("li",[s._v("斐波那契数列套路\n"),t("ul",[t("li",[s._v("类似"),t("code",[s._v("F(n) = F(n-1) + F(n-2)")]),s._v("有严格递归式子")]),s._v(" "),t("li",[s._v("算出矩阵系数")])])]),s._v(" "),t("li",[s._v("二叉树递归套路\n"),t("ul",[t("li",[s._v('如果二叉树的问题,可以分解为 先处理左树, 再处理右侧, 这种就可以用"左程云"推荐的所谓"递归套路"解法')])])]),s._v(" "),t("li",[s._v("编辑距离问题")])])])}),[],!1,null,null,null);t.default=e.exports}}]);