import{_ as s,c as i,o as a,a7 as n}from"./chunks/framework.DLSH1pMh.js";const y=JSON.parse('{"title":"Shader 进阶 - 光照与材质系统的物理基础","description":"","frontmatter":{"title":"Shader 进阶 - 光照与材质系统的物理基础","date":"2025-10-28T00:00:00.000Z","categories":["笔记","GLSL","shader"],"tags":["WebGL","PBR","光照模型"]},"headers":[],"relativePath":"blogs/note/20251028-shader光照与材质.md","filePath":"blogs/note/20251028-shader光照与材质.md"}'),l={name:"blogs/note/20251028-shader光照与材质.md"},h=n(`<h1 id="💡-shader-进阶-光照与材质系统的物理基础" tabindex="-1">💡 Shader 进阶 - 光照与材质系统的物理基础 <a class="header-anchor" href="#💡-shader-进阶-光照与材质系统的物理基础" aria-label="Permalink to &quot;💡 Shader 进阶 - 光照与材质系统的物理基础&quot;">​</a></h1><h2 id="_1-🌟-为什么需要光照" tabindex="-1">1. 🌟 为什么需要光照？ <a class="header-anchor" href="#_1-🌟-为什么需要光照" aria-label="Permalink to &quot;1. 🌟 为什么需要光照？&quot;">​</a></h2><h3 id="_1-1-从2d到3d的关键突破" tabindex="-1">1.1 从2D到3D的关键突破 <a class="header-anchor" href="#_1-1-从2d到3d的关键突破" aria-label="Permalink to &quot;1.1 从2D到3D的关键突破&quot;">​</a></h3><p>在之前的文章中，我们主要处理<strong>二维图案</strong>和<strong>纹理</strong>。但要创造真实的<strong>三维世界</strong>，必须理解光如何与物体表面相互作用。</p><blockquote><p>💡 <strong>核心问题</strong>：如果没有光照，所有3D物体看起来都是平的！因为我们看到的&quot;立体感&quot;本质上就是光照产生的明暗变化。</p></blockquote><h3 id="_1-2-观察现实世界的材质差异" tabindex="-1">1.2 观察现实世界的材质差异 <a class="header-anchor" href="#_1-2-观察现实世界的材质差异" aria-label="Permalink to &quot;1.2 观察现实世界的材质差异&quot;">​</a></h3><p>仔细观察身边的物体，你会发现它们对光的反应完全不同：</p><ul><li>🏀 <strong>篮球</strong>：橡胶表面粗糙，光均匀散射到各个方向（<strong>漫反射</strong>为主）</li><li>🔮 <strong>玻璃球</strong>：表面光滑，有清晰的镜面高光和折射（<strong>镜面反射</strong>和<strong>透射</strong>）</li><li>🪨 <strong>岩石</strong>：粗糙、凹凸不平，光照分布不均匀（<strong>复杂漫反射</strong>）</li><li>🥇 <strong>金属</strong>：几乎不吸收光，强烈反射周围环境（<strong>强镜面反射</strong>）</li></ul><blockquote><p>💡 <strong>深层理解</strong>：这些视觉差异的本质是<strong>物体表面的微观结构</strong>决定了光的反射方式。光照模型就是用数学公式来模拟这些物理现象！</p></blockquote><h3 id="_1-3-光照模型的作用" tabindex="-1">1.3 光照模型的作用 <a class="header-anchor" href="#_1-3-光照模型的作用" aria-label="Permalink to &quot;1.3 光照模型的作用&quot;">​</a></h3><p><strong>光照模型</strong>回答了一个核心问题：<strong>给定一个表面点，它应该显示什么颜色？</strong></p><p>这个颜色取决于：</p><ol><li><strong>光源</strong>：光从哪里来？有多亮？什么颜色？</li><li><strong>材质</strong>：表面是什么材质？如何反射光？</li><li><strong>视角</strong>：观察者从哪个角度看？</li></ol><p>掌握光照模型，你就能在GPU上模拟现实世界的任何材质！</p><hr><h2 id="_2-📐-光照基础-从物理到数学" tabindex="-1">2. 📐 光照基础 - 从物理到数学 <a class="header-anchor" href="#_2-📐-光照基础-从物理到数学" aria-label="Permalink to &quot;2. 📐 光照基础 - 从物理到数学&quot;">​</a></h2><h3 id="_2-1-光照三要素-三个关键向量" tabindex="-1">2.1 光照三要素：三个关键向量 <a class="header-anchor" href="#_2-1-光照三要素-三个关键向量" aria-label="Permalink to &quot;2.1 光照三要素：三个关键向量&quot;">​</a></h3><p>任何光照计算都基于<strong>三个向量</strong>，它们描述了光、表面和观察者的几何关系：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>         N (法线)</span></span>
<span class="line"><span>          ↑</span></span>
<span class="line"><span>          │</span></span>
<span class="line"><span>          │</span></span>
<span class="line"><span>      ────●──── 表面</span></span>
<span class="line"><span>         ╱ ╲</span></span>
<span class="line"><span>    L ╱     ╲ V</span></span>
<span class="line"><span>     ╱       ╲</span></span>
<span class="line"><span>    ╱         ╲</span></span>
<span class="line"><span>  光源        观察者</span></span>
<span class="line"><span></span></span>
<span class="line"><span>N = Normal (法线方向)</span></span>
<span class="line"><span>L = Light Direction (指向光源)</span></span>
<span class="line"><span>V = View Direction (指向摄像机)</span></span></code></pre></div><blockquote><p>💡 <strong>类比理解</strong>：想象你站在阳光下：</p><ul><li><strong>法线N</strong>：你头顶朝天的方向（表面朝向哪里）</li><li><strong>光线L</strong>：从你指向太阳的方向（光从哪里来）</li><li><strong>视线V</strong>：从你指向观察者的方向（别人从哪里看你）</li></ul></blockquote><h3 id="_2-2-核心概念详解" tabindex="-1">2.2 核心概念详解 <a class="header-anchor" href="#_2-2-核心概念详解" aria-label="Permalink to &quot;2.2 核心概念详解&quot;">​</a></h3><h4 id="_2-2-1-法线-normal-表面的-朝向" tabindex="-1">2.2.1 法线 (Normal) - 表面的&quot;朝向&quot; <a class="header-anchor" href="#_2-2-1-法线-normal-表面的-朝向" aria-label="Permalink to &quot;2.2.1 法线 (Normal) - 表面的&quot;朝向&quot;&quot;">​</a></h4><p><strong>定义与作用</strong>：</p><ul><li><strong>定义</strong>：垂直于表面的方向向量</li><li><strong>作用</strong>：决定表面朝向哪里，是所有光照计算的基础</li><li><strong>性质</strong>：必须是<strong>单位向量</strong>（长度为1），通常用 <code>normalize()</code> 归一化</li></ul><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v_normal);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 确保法线长度为1</span></span></code></pre></div><blockquote><p>💡 <strong>为什么需要归一化？</strong><br> 点积公式：<code>dot(A, B) = |A| × |B| × cos(θ)</code><br> 如果A和B都是单位向量（长度=1），结果直接等于 <code>cos(θ)</code>，便于计算光照强度。<br> 如果不归一化，长度不是1，点积结果就不等于余弦值，导致光照计算错误。</p></blockquote><blockquote><p>⚠️ <strong>常见错误与排查</strong>：</p><ul><li><strong>忘记归一化法线</strong>：光照忽明忽暗，看起来很奇怪</li><li><strong>法线方向反了</strong>：物体背面亮，正面暗（检查法线是否为负）</li><li><strong>法线插值后未归一化</strong>：顶点着色器传递到片元着色器的法线经过插值，长度可能不是1，必须重新归一化</li></ul></blockquote><h4 id="_2-2-2-光照方向-light-direction-光从哪里来" tabindex="-1">2.2.2 光照方向 (Light Direction) - 光从哪里来 <a class="header-anchor" href="#_2-2-2-光照方向-light-direction-光从哪里来" aria-label="Permalink to &quot;2.2.2 光照方向 (Light Direction) - 光从哪里来&quot;">​</a></h4><p><strong>定义与计算</strong>：</p><ul><li><strong>定义</strong>：从表面点<strong>指向</strong>光源的向量</li><li><strong>计算</strong>：<code>L = normalize(光源位置 - 表面位置)</code></li><li><strong>注意</strong>：有些教程定义为&quot;光线传播方向&quot;（从光源指向表面），符号相反！</li></ul><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_lightPos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_position);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 从表面指向光源</span></span></code></pre></div><blockquote><p>💡 <strong>向量方向的约定</strong>：<br> 在这个系列教程中，我们统一使用&quot;从表面发出&quot;的约定：</p><ul><li><strong>L</strong>：从表面点指向光源（光来的方向）</li><li><strong>V</strong>：从表面点指向观察者（观察的方向）</li><li><strong>R</strong>：从表面点指向反射方向（光反射的方向）</li></ul><p>这样所有向量都以表面点为&quot;起点&quot;，便于理解和计算。</p></blockquote><blockquote><p>⚠️ <strong>教程间的差异</strong>： 有些教程（如OpenGL红宝书）定义L为&quot;光线传播方向&quot;（从光源到表面），这时公式会变成：</p><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v_position </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_lightPos);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 注意顺序相反！</span></span></code></pre></div><p>两种约定都可以，但要在整个项目中保持一致！</p></blockquote><h4 id="_2-2-3-视线方向-view-direction-观察者在哪里" tabindex="-1">2.2.3 视线方向 (View Direction) - 观察者在哪里 <a class="header-anchor" href="#_2-2-3-视线方向-view-direction-观察者在哪里" aria-label="Permalink to &quot;2.2.3 视线方向 (View Direction) - 观察者在哪里&quot;">​</a></h4><p><strong>定义与用途</strong>：</p><ul><li><strong>定义</strong>：从表面点指向摄像机/观察者的向量</li><li><strong>计算</strong>：<code>V = normalize(摄像机位置 - 表面位置)</code></li><li><strong>用途</strong>：计算镜面高光（视角越正对表面，高光越明显）</li></ul><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> V </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_viewPos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_position);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 从表面指向观察者</span></span></code></pre></div><blockquote><p>💡 <strong>视线方向的重要性</strong>：</p><ul><li><strong>漫反射</strong>：不需要V，因为漫反射与观察角度无关</li><li><strong>镜面反射</strong>：必须有V，因为高光只在特定视角可见</li><li><strong>菲涅尔效果</strong>：需要V计算视角与法线的夹角（例如水面边缘更反光）</li></ul></blockquote><blockquote><p>💡 <strong>为什么都是&quot;指向&quot;某处？</strong><br> 统一约定所有向量都从表面点&quot;发出&quot;，这样点积的物理意义更清晰：</p><ul><li><code>dot(N, L) &gt; 0</code>：表面朝向光源（能接收到光）</li><li><code>dot(N, L) = 0</code>：表面与光线垂直（掠射）</li><li><code>dot(N, L) &lt; 0</code>：表面背对光源（完全接收不到光）</li></ul><p>这比混合使用&quot;指向&quot;和&quot;来自&quot;的方向更容易理解和调试。</p></blockquote><h3 id="_2-3-光的两种反射-漫反射与镜面反射" tabindex="-1">2.3 光的两种反射：漫反射与镜面反射 <a class="header-anchor" href="#_2-3-光的两种反射-漫反射与镜面反射" aria-label="Permalink to &quot;2.3 光的两种反射：漫反射与镜面反射&quot;">​</a></h3><blockquote><p>💡 <strong>前置知识</strong>：光打到表面后，会发生两种不同的反射，它们混合在一起形成我们看到的最终颜色。</p></blockquote><table><thead><tr><th>类型</th><th>物理现象</th><th>视觉效果</th><th>材质示例</th></tr></thead><tbody><tr><td><strong>漫反射 (Diffuse)</strong></td><td>光均匀散射到各个方向</td><td>柔和、无光泽、&quot;哑光&quot;</td><td>纸张、布料、粗糙石头</td></tr><tr><td><strong>镜面反射 (Specular)</strong></td><td>光沿特定方向反射</td><td>高光、光泽、&quot;亮斑&quot;</td><td>金属、塑料、水面</td></tr></tbody></table><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>漫反射:                镜面反射:</span></span>
<span class="line"><span>   ↗  ↑  ↖              ↑</span></span>
<span class="line"><span>  ↗   ↑   ↖             │ R (反射光)</span></span>
<span class="line"><span> ●─────────●            ●</span></span>
<span class="line"><span>  ↘   │   ↙            ╱</span></span>
<span class="line"><span>   ↘  ↓  ↙            ╱ L (入射光)</span></span>
<span class="line"><span>                      ╱</span></span>
<span class="line"><span>光向所有方向散射      光沿镜面反射方向</span></span></code></pre></div><h4 id="_2-3-1-漫反射-diffuse-的物理本质" tabindex="-1">2.3.1 漫反射 (Diffuse) 的物理本质 <a class="header-anchor" href="#_2-3-1-漫反射-diffuse-的物理本质" aria-label="Permalink to &quot;2.3.1 漫反射 (Diffuse) 的物理本质&quot;">​</a></h4><p><strong>微观原理</strong>：粗糙表面有无数微小凹凸，光线打上去后在不同方向反射，最终混合成均匀散射。</p><blockquote><p>💡 <strong>类比理解1 - 墙面泼水</strong>：<br> 想象往粗糙的墙上泼水，水花会向四面八方溅开，没有固定方向。光在粗糙表面也是这样，所以<strong>无论从哪个角度看，亮度都差不多</strong>（只和光源角度有关）。</p></blockquote><blockquote><p>💡 <strong>类比理解2 - 磨砂玻璃</strong>：<br> 透明玻璃可以看到清晰的反射（镜面反射），但磨砂玻璃表面粗糙，光线被打散，看不到清晰反射，只能看到均匀的亮度（漫反射）。</p></blockquote><p><strong>关键特性</strong>（重要！）：</p><ul><li>✅ 亮度<strong>只取决于光照角度</strong>（光垂直照射最亮，斜射变暗）</li><li>✅ <strong>与观察角度无关</strong>（从任何方向看都一样亮）</li><li>✅ 提供物体的&quot;固有色&quot;（物体本身的颜色）</li><li>✅ 让物体看起来&quot;哑光&quot;、&quot;无光泽&quot;</li></ul><blockquote><p>📖 <strong>物理解释 - 为什么与观察角度无关？</strong><br> 粗糙表面的微小凹凸把光线打散到所有方向，每个方向的反射光强度都相同。所以无论你从哪里看（视线V的方向），看到的亮度都一样，只取决于&quot;有多少光打到表面上&quot;（即N·L）。</p></blockquote><h4 id="_2-3-2-镜面反射-specular-的物理本质" tabindex="-1">2.3.2 镜面反射 (Specular) 的物理本质 <a class="header-anchor" href="#_2-3-2-镜面反射-specular-的物理本质" aria-label="Permalink to &quot;2.3.2 镜面反射 (Specular) 的物理本质&quot;">​</a></h4><p><strong>微观原理</strong>：光滑表面上的光线按照&quot;入射角=反射角&quot;的规律反射，只在特定角度能看到反射光。</p><blockquote><p>💡 <strong>类比理解1 - 照镜子</strong>：<br> 照镜子时，你只能在特定角度看到反射。稍微偏一点，就看不到了。镜面高光也是这样，只有<strong>视线接近反射方向</strong>时才能看到亮斑。</p></blockquote><blockquote><p>💡 <strong>类比理解2 - 台球反弹</strong>：<br> 想象台球撞到桌边，它会按照&quot;入射角=反射角&quot;弹回。光线在光滑表面也遵循这个规律，只有站在&quot;反弹方向&quot;的观察者才能看到反射光。</p></blockquote><p><strong>关键特性</strong>（重要！）：</p><ul><li>✅ 亮度<strong>取决于视线和反射方向的夹角</strong>（视线越接近反射方向，越亮）</li><li>✅ <strong>与观察角度强相关</strong>（移动视角，高光位置会变化）</li><li>✅ 形成<strong>明显的高光点</strong>（局部很亮的&quot;亮斑&quot;）</li><li>✅ 高光颜色通常接近<strong>光源颜色</strong>（而非物体颜色）</li></ul><blockquote><p>📖 <strong>物理解释 - 为什么与观察角度相关？</strong><br> 光滑表面的反射是&quot;定向&quot;的，只在特定方向（反射方向R）有强反射光。观察者的视线V越接近R，看到的反射光越强。偏离R一点点，反射光就快速衰减。</p></blockquote><blockquote><p>💡 <strong>为什么高光是光源颜色？</strong></p><ul><li><strong>漫反射</strong>：光进入物体表面，被吸收后再发出，带上了物体的颜色（红苹果吸收蓝绿光，只发出红光）</li><li><strong>镜面反射</strong>：光直接在表面反射，没有进入物体内部，保持光源的颜色（白光照射，高光也是白色）</li><li><strong>例外</strong>：金属的高光会带有金属颜色，因为金属的自由电子会吸收和重新辐射特定波长的光</li></ul></blockquote><h4 id="_2-3-3-实际材质的混合比例" tabindex="-1">2.3.3 实际材质的混合比例 <a class="header-anchor" href="#_2-3-3-实际材质的混合比例" aria-label="Permalink to &quot;2.3.3 实际材质的混合比例&quot;">​</a></h4><p>现实中的材质都是漫反射和镜面反射的<strong>混合</strong>，比例不同决定了材质的视觉特性：</p><table><thead><tr><th>材质</th><th>漫反射占比</th><th>镜面反射占比</th><th>视觉特征</th></tr></thead><tbody><tr><td><strong>纸张/布料</strong></td><td>~100%</td><td>~0%</td><td>完全哑光，无高光</td></tr><tr><td><strong>粗糙塑料</strong></td><td>~90%</td><td>~10%</td><td>微弱高光，主要是固有色</td></tr><tr><td><strong>光滑塑料</strong></td><td>~70%</td><td>~30%</td><td>明显高光，有光泽感</td></tr><tr><td><strong>陶瓷/瓷器</strong></td><td>~50%</td><td>~50%</td><td>高光和固有色同样重要</td></tr><tr><td><strong>抛光金属</strong></td><td>~5%</td><td>~95%</td><td>强烈高光，固有色很弱</td></tr><tr><td><strong>镜子</strong></td><td>~0%</td><td>~100%</td><td>纯镜面反射，看不到固有色</td></tr></tbody></table><blockquote><p>💡 <strong>如何判断材质类型？</strong><br> 观察一个物体时：</p><ul><li>看到<strong>柔和的明暗变化</strong>，没有明显亮点 → 漫反射为主（纸张、布料）</li><li>看到<strong>明显的亮斑</strong>，而且移动视角时亮斑位置变化 → 镜面反射为主（金属、塑料）</li><li><strong>既有明暗变化又有高光</strong> → 两者混合（大多数材质）</li></ul></blockquote><hr><h2 id="_3-🔆-经典光照模型" tabindex="-1">3. 🔆 经典光照模型 <a class="header-anchor" href="#_3-🔆-经典光照模型" aria-label="Permalink to &quot;3. 🔆 经典光照模型&quot;">​</a></h2><h3 id="_3-1-lambert-漫反射模型-最简单的光照" tabindex="-1">3.1 Lambert 漫反射模型（最简单的光照） <a class="header-anchor" href="#_3-1-lambert-漫反射模型-最简单的光照" aria-label="Permalink to &quot;3.1 Lambert 漫反射模型（最简单的光照）&quot;">​</a></h3><blockquote><p>💡 <strong>为什么从Lambert开始？</strong><br> Lambert是最基础的光照模型，只需一行代码就能让3D物体有立体感！<br> 理解它是学习所有光照模型的基础，而且它仍然被广泛应用于现代渲染中。</p></blockquote><h4 id="_3-1-1-物理原理-余弦定律" tabindex="-1">3.1.1 物理原理：余弦定律 <a class="header-anchor" href="#_3-1-1-物理原理-余弦定律" aria-label="Permalink to &quot;3.1.1 物理原理：余弦定律&quot;">​</a></h4><p><strong>核心思想</strong>：表面亮度与入射角度的<strong>余弦值</strong>成正比。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>强度 = max(N · L, 0)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>公式拆解：</span></span>
<span class="line"><span>- N · L：点积运算</span></span>
<span class="line"><span>- 数学上：dot(N, L) = |N| × |L| × cos(θ)</span></span>
<span class="line"><span>- 因为N和L都是单位向量（长度=1），所以结果就是 cos(θ)</span></span>
<span class="line"><span>- θ：法线N和光线L之间的夹角</span></span>
<span class="line"><span>- max(..., 0)：确保背光面不受照（负值截断为0）</span></span></code></pre></div><blockquote><p>💡 <strong>为什么是余弦？物理解释</strong></p><p>想象太阳光照在地面上，光线是平行的：</p><p><strong>情况1 - 中午（光垂直照射）</strong>：</p><ul><li>1平方米的光均匀分布在1平方米的地面上</li><li>接收到的光能 = 100%</li><li>cos(0°) = 1.0 → 亮度 = 100%</li></ul><p><strong>情况2 - 傍晚（光斜射60°）</strong>：</p><ul><li>1平方米的光分散到2平方米的地面上（因为斜着照）</li><li>每平方米接收到的光能 = 50%</li><li>cos(60°) = 0.5 → 亮度 = 50%</li></ul><p><strong>情况3 - 夜晚（光从背面来）</strong>：</p><ul><li>地面背对太阳，完全照不到</li><li>cos(120°) = -0.5 → 截断为0 → 亮度 = 0%</li></ul></blockquote><blockquote><p>📖 <strong>数学与物理的统一</strong>：<br> 余弦定律不是凭空想出来的，而是真实的物理规律：</p><ul><li>光是能量流，遵循能量守恒</li><li>斜射时，相同的光束覆盖更大面积，单位面积的能量密度降低</li><li>降低的比例正好是余弦值：<code>cos(θ) = 垂直面积 / 实际面积</code></li></ul></blockquote><h4 id="_3-1-2-图解不同入射角的效果" tabindex="-1">3.1.2 图解不同入射角的效果 <a class="header-anchor" href="#_3-1-2-图解不同入射角的效果" aria-label="Permalink to &quot;3.1.2 图解不同入射角的效果&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>光垂直照射 (θ=0°):     光斜射 (θ=60°):      光从背面来 (θ=120°):</span></span>
<span class="line"><span>    L                    L                     ╲ L</span></span>
<span class="line"><span>    ↓                   ╱                       ╲</span></span>
<span class="line"><span>    ●──N               ●──N                     ●──N</span></span>
<span class="line"><span>                      ╱                         ╱</span></span>
<span class="line"><span>cos(0°) = 1.0       cos(60°) = 0.5          cos(120°) = -0.5 → 0.0</span></span>
<span class="line"><span>最亮（100%）        中等亮度（50%）          不亮（背光面）</span></span></code></pre></div><blockquote><p>💡 <strong>点积的几何意义与判断</strong>：</p><table><thead><tr><th>点积值</th><th>夹角θ</th><th>物理意义</th><th>视觉效果</th></tr></thead><tbody><tr><td><code>dot(N, L) = 1.0</code></td><td>0°</td><td>光垂直照射（最亮）</td><td>正面正对光源</td></tr><tr><td><code>dot(N, L) = 0.7</code></td><td>45°</td><td>光斜射</td><td>中等亮度</td></tr><tr><td><code>dot(N, L) = 0.0</code></td><td>90°</td><td>光掠射（几乎不亮）</td><td>侧面边缘</td></tr><tr><td><code>dot(N, L) = -0.5</code></td><td>120°</td><td>光从背面来（截断为0）</td><td>背光面（阴影）</td></tr></tbody></table><p><strong>判断规则</strong>：</p><ul><li><code>dot(N, L) &gt; 0</code>：光从正面照来，能看见光（越大越亮）</li><li><code>dot(N, L) = 0</code>：光平行于表面（掠射），几乎看不见</li><li><code>dot(N, L) &lt; 0</code>：光从背面照来，完全看不见（必须截断为0，否则出错）</li></ul></blockquote><blockquote><p>⚠️ <strong>为什么必须截断负值？</strong><br> 如果不用 <code>max(..., 0.0)</code> 截断，背光面会得到负的亮度值，导致：</p><ul><li>颜色计算出错（负数没有物理意义）</li><li>背光面可能显示为错误的颜色</li><li>最终图像看起来很奇怪（黑色变成异常的颜色）</li></ul></blockquote><h4 id="_3-1-3-🔧-glsl-实现" tabindex="-1">3.1.3 🔧 GLSL 实现 <a class="header-anchor" href="#_3-1-3-🔧-glsl-实现" aria-label="Permalink to &quot;3.1.3 🔧 GLSL 实现&quot;">​</a></h4><blockquote><p>💡 <strong>片元着色器（Fragment Shader）的作用</strong>：<br> 这个Shader在<strong>每个像素</strong>上独立运行，计算该像素应该显示的颜色。<br> 对于一个512x512的模型，这段代码会执行 262,144 次（每个像素一次）！</p></blockquote><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#ifdef</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> GL_ES</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">precision mediump </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 中等精度浮点数（移动端性能考虑）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#endif</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ========== Uniform变量（整个模型共享的常量） ==========</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_lightPos;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 光源位置（世界空间坐标）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_lightColor;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 光源颜色（例如：白光 = vec3(1.0)）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_objectColor;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 物体本身颜色（例如：红色 = vec3(1.0, 0.0, 0.0)）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ========== Varying变量（从顶点着色器插值传来） ==========</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varying</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_normal;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 当前像素的法线（世界空间）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varying</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_position;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 当前像素的世界坐标</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ========== 步骤1：准备向量 ==========</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 归一化法线（插值可能改变长度）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v_normal);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 计算光照方向：从当前像素指向光源</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_lightPos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_position);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ========== 步骤2：计算Lambert漫反射 ==========</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // dot(N, L)：计算法线和光线的夹角余弦</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // max(..., 0.0)：背光面截断为0（不能是负数）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> diff </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(N, L), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ========== 步骤3：合成最终颜色 ==========</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 最终颜色 = 物体固有色 × 光的颜色 × 漫反射强度</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 这样可以模拟彩色光照（例如红色光照在白色物体上显示为红色）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 diffuse </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_objectColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_lightColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> diff;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ========== 步骤4：输出颜色 ==========</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gl_FragColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vec4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(diffuse, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Alpha通道设为1.0（不透明）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>💡 <strong>为什么要乘以 <code>u_objectColor</code> 和 <code>u_lightColor</code>？</strong></p><ul><li><code>u_objectColor</code>：物体固有色（例如红色苹果）</li><li><code>u_lightColor</code>：光的颜色（例如黄色灯光）</li><li>相乘模拟&quot;光与物体表面相互作用&quot;的物理过程</li><li>例子：白光（1,1,1） × 红色（1,0,0） = 红色（1,0,0）</li><li>例子：蓝光（0,0,1） × 红色（1,0,0） = 黑色（0,0,0）（蓝光照在红色物体上看不见！）</li></ul></blockquote><blockquote><p>⚠️ <strong>常见问题</strong>：</p><ul><li><strong>全黑</strong>：检查法线是否正确，是否归一化</li><li><strong>忽明忽暗</strong>：确认 <code>v_normal</code> 和 <code>v_position</code> 在世界空间（不是局部空间）</li><li><strong>背面也亮</strong>：忘记用 <code>max(..., 0.0)</code> 截断</li></ul></blockquote><h4 id="_3-1-4-顶点着色器-传递数据给片元着色器" tabindex="-1">3.1.4 顶点着色器：传递数据给片元着色器 <a class="header-anchor" href="#_3-1-4-顶点着色器-传递数据给片元着色器" aria-label="Permalink to &quot;3.1.4 顶点着色器：传递数据给片元着色器&quot;">​</a></h4><blockquote><p>💡 <strong>顶点着色器的职责</strong>：<br> 顶点着色器在<strong>每个顶点</strong>上运行（而片元着色器在每个像素上运行），它的任务是：</p><ol><li><strong>空间变换</strong>：把顶点位置从<strong>模型空间</strong>转换到<strong>世界空间</strong>、<strong>视图空间</strong>、<strong>裁剪空间</strong></li><li><strong>法线变换</strong>：把法线转换到<strong>世界空间</strong>（注意：法线的变换和位置不同！）</li><li><strong>数据传递</strong>：把世界坐标、法线等数据传递给片元着色器（通过varying变量自动插值）</li></ol><p><strong>为什么需要顶点着色器？</strong><br> GPU渲染管线分为两个阶段：</p><ul><li><strong>顶点阶段</strong>：处理顶点（数量少，例如1000个顶点）</li><li><strong>片元阶段</strong>：处理像素（数量多，例如100万个像素）</li></ul><p>把能在顶点阶段完成的计算（如空间变换）提前做好，可以大幅减少片元阶段的计算量，提高性能！</p></blockquote><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ========== Attribute变量（每个顶点不同） ==========</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">attribute</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> position;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 顶点位置（模型空间）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">attribute</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> normal;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 顶点法线（模型空间）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ========== Uniform变量（整个模型共享） ==========</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> mat4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modelMatrix;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // 模型矩阵：模型空间 → 世界空间</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> mat4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> viewMatrix;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 视图矩阵：世界空间 → 视图空间</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> mat4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> projectionMatrix;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 投影矩阵：视图空间 → 裁剪空间</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> mat3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> normalMatrix;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 法线矩阵（下面解释为什么需要）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ========== Varying变量（输出到片元着色器） ==========</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varying</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_normal;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     // 世界空间的法线</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varying</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_position;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 世界空间的位置</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ========== 步骤1：转换位置到世界空间 ==========</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec4 worldPos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modelMatrix </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vec4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(position, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    v_position </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> worldPos.xyz;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 传递给片元着色器</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ========== 步骤2：转换法线到世界空间 ==========</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ⚠️ 法线不能直接用modelMatrix变换！原因见下方提示</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    v_normal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> normalMatrix </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> normal;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ========== 步骤3：投影到屏幕空间 ==========</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 完整变换链：模型空间 → 世界空间 → 视图空间 → 裁剪空间</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gl_Position </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> projectionMatrix </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> viewMatrix </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> worldPos;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>⚠️ <strong>为什么法线需要特殊的 <code>normalMatrix</code>？（重要概念！）</strong></p><p><strong>问题</strong>：如果用 <code>modelMatrix</code> 直接变换法线，在物体被<strong>非均匀缩放</strong>时会出错！</p><p><strong>例子 - 正方体被拉伸</strong>：<br> 想象一个正方体被沿X轴拉伸2倍（变成长方体）：</p><ul><li>顶点坐标：(1, 1, 1) → (2, 1, 1) ✅ 正确（拉伸后的新位置）</li><li>法线：(1, 0, 0) → (2, 0, 0) ❌ 错误！法线长度变了，且方向可能歪斜</li></ul><p><strong>为什么错误？</strong></p><ol><li>法线长度变了（从1变成2），不再是单位向量</li><li>更严重的是：在某些情况下法线的<strong>方向会歪斜</strong>，不再垂直于表面！</li></ol><p><strong>正确做法</strong>：用 <code>normalMatrix = transpose(inverse(mat3(modelMatrix)))</code><br> 这个矩阵能正确处理非均匀缩放和旋转，保证法线永远垂直于表面。</p><p><strong>数学原理（可选阅读）</strong>：</p><ul><li>顶点坐标变换：<code>p&#39; = M × p</code>（用modelMatrix）</li><li>法线变换：<code>n&#39; = (M⁻¹)ᵀ × n</code>（用modelMatrix的逆转置）</li><li>为什么不同？因为法线是&quot;余切向量&quot;（cotangent vector），变换规则和普通向量不同</li></ul><p><strong>JavaScript计算normalMatrix：</strong></p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Three.js会自动计算，无需手动处理：</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mesh.material.uniforms.normalMatrix.value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mesh.normalMatrix;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 如果手动计算：</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> normalMatrix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> THREE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Matrix3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getNormalMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(modelMatrix);  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 内部实现了transpose(inverse(...))</span></span></code></pre></div></blockquote><blockquote><p>💡 <strong>空间变换流程详解</strong>：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>模型空间        世界空间         视图空间        裁剪空间        屏幕空间</span></span>
<span class="line"><span>(局部坐标)   →  (全局坐标)   →  (相机视角)   →  (规范化)   →  (像素坐标)</span></span>
<span class="line"><span>   ↓              ↓               ↓              ↓              ↓</span></span>
<span class="line"><span>建模时的坐标    场景中的位置    从相机看的位置  GPU裁剪处理    最终像素</span></span>
<span class="line"><span></span></span>
<span class="line"><span> modelMatrix    viewMatrix    projectionMatrix</span></span>
<span class="line"><span>     ↓             ↓               ↓</span></span>
<span class="line"><span> position变换   摄像机变换      投影变换</span></span>
<span class="line"><span>     ↓</span></span>
<span class="line"><span> normal变换（用normalMatrix，不是modelMatrix！）</span></span>
<span class="line"><span></span></span>
<span class="line"><span>✨ 光照计算发生在「世界空间」！</span></span></code></pre></div><p><strong>为什么光照在世界空间计算？</strong></p><ul><li>光源位置通常定义在世界空间</li><li>摄像机位置也在世界空间</li><li>在世界空间计算，所有物体使用统一的坐标系，光照结果才正确</li></ul></blockquote><hr><h3 id="_3-2-phong-光照模型-经典三分量光照" tabindex="-1">3.2 Phong 光照模型（经典三分量光照） <a class="header-anchor" href="#_3-2-phong-光照模型-经典三分量光照" aria-label="Permalink to &quot;3.2 Phong 光照模型（经典三分量光照）&quot;">​</a></h3><blockquote><p>💡 <strong>为什么需要Phong？</strong><br> Lambert只有漫反射，无法模拟高光（镜面反射），看起来太&quot;哑光&quot;。Phong模型添加了环境光和镜面反射，让物体更真实！</p></blockquote><h4 id="phong模型的三个组成部分" tabindex="-1">Phong模型的三个组成部分 <a class="header-anchor" href="#phong模型的三个组成部分" aria-label="Permalink to &quot;Phong模型的三个组成部分&quot;">​</a></h4><p><strong>核心公式</strong>：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>最终颜色 = 环境光 (Ambient) + 漫反射 (Diffuse) + 镜面反射 (Specular)</span></span></code></pre></div><blockquote><p>💡 <strong>类比理解</strong>：想象一个塑料球：</p><ul><li><strong>环境光</strong>：即使不在直射光下，也能隐约看见轮廓（来自周围环境的反射）</li><li><strong>漫反射</strong>：球体受光面和背光面的明暗变化（Lambert那部分）</li><li><strong>镜面反射</strong>：球面上的一个亮斑（高光）</li></ul></blockquote><h4 id="_3-2-1-🌍-环境光-ambient-全局基础亮度" tabindex="-1">3.2.1 🌍 环境光 (Ambient) - 全局基础亮度 <a class="header-anchor" href="#_3-2-1-🌍-环境光-ambient-全局基础亮度" aria-label="Permalink to &quot;3.2.1 🌍 环境光 (Ambient) - 全局基础亮度&quot;">​</a></h4><p><strong>物理意义</strong>：模拟<strong>间接光照</strong>（天空光、墙面反射、其他物体反射等）</p><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ambient </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_ambientStrength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_lightColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_objectColor;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 参数说明：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// u_ambientStrength: 环境光强度（通常0.1-0.3，控制&quot;最低亮度&quot;）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// u_lightColor: 光源颜色</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// u_objectColor: 物体颜色</span></span></code></pre></div><blockquote><p>💡 <strong>为什么需要环境光？现实对比</strong></p><p>想象一个房间里的红色苹果：</p><ul><li><strong>只有直射光（Lambert）</strong>：正对光源的一面亮，背光面<strong>全黑</strong>，看不见任何细节</li><li><strong>加上环境光</strong>：背光面虽然暗，但仍然能看见苹果的轮廓和细节</li></ul><p>现实中很少有完全黑暗的阴影，因为总有<strong>间接光</strong>：</p><ul><li>天空散射的蓝光</li><li>墙面反射的光</li><li>其他物体反射的光</li></ul><p>环境光就是用一个<strong>常量</strong>简单模拟这些复杂的间接光照。</p></blockquote><blockquote><p>💡 <strong>环境光的计算特点</strong>：</p><ul><li><strong>与位置无关</strong>：每个像素的环境光强度都一样</li><li><strong>与角度无关</strong>：不考虑法线方向</li><li><strong>非常快</strong>：只需一次乘法</li><li><strong>不够真实</strong>：真实的间接光会有方向性和颜色变化（需要更复杂的全局光照技术，如GI）</li></ul></blockquote><blockquote><p>⚠️ <strong>环境光强度参考值</strong>：</p><table><thead><tr><th>强度值</th><th>视觉效果</th><th>适用场景</th></tr></thead><tbody><tr><td><code>0.05-0.1</code></td><td>微弱环境光，阴影很暗</td><td>戏剧性光照、恐怖游戏、夜晚场景</td></tr><tr><td><code>0.15-0.25</code></td><td>中等环境光，平衡</td><td>大多数游戏和3D应用的默认值</td></tr><tr><td><code>0.3-0.5</code></td><td>强环境光，阴影浅</td><td>卡通渲染、明亮的室外场景</td></tr><tr><td><code>&gt; 0.6</code></td><td>过强，失去立体感</td><td>一般不推荐</td></tr></tbody></table></blockquote><h4 id="_3-2-2-☀️-漫反射-diffuse-lambert模型" tabindex="-1">3.2.2 ☀️ 漫反射 (Diffuse) - Lambert模型 <a class="header-anchor" href="#_3-2-2-☀️-漫反射-diffuse-lambert模型" aria-label="Permalink to &quot;3.2.2 ☀️ 漫反射 (Diffuse) - Lambert模型&quot;">​</a></h4><p>这部分和3.1节的Lambert完全相同（Phong模型复用了Lambert的漫反射）：</p><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> diff </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(N, L), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> diffuse </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> diff </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_lightColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_objectColor;</span></span></code></pre></div><blockquote><p>💡 <strong>Phong模型的分层结构</strong>：</p><ul><li><strong>环境光（Ambient）</strong>：提供最低亮度，简单粗暴</li><li><strong>漫反射（Diffuse）</strong>：提供主要的明暗变化（Lambert），是物体颜色的主要来源</li><li><strong>镜面反射（Specular）</strong>：提供高光，是&quot;光泽感&quot;的来源</li></ul><p>这三个分量<strong>相加</strong>得到最终颜色：<code>Final = Ambient + Diffuse + Specular</code></p></blockquote><h4 id="_3-2-3-✨-镜面反射-specular-高光计算" tabindex="-1">3.2.3 ✨ 镜面反射 (Specular) - 高光计算 <a class="header-anchor" href="#_3-2-3-✨-镜面反射-specular-高光计算" aria-label="Permalink to &quot;3.2.3 ✨ 镜面反射 (Specular) - 高光计算&quot;">​</a></h4><p><strong>原理</strong>：当<strong>反射方向R</strong>接近<strong>视线方向V</strong>时，观察者能看到镜面反射的高光。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>      N (法线)</span></span>
<span class="line"><span>      ↑</span></span>
<span class="line"><span>      │</span></span>
<span class="line"><span>  L ╱   ╲ R (反射方向)</span></span>
<span class="line"><span>   ╱     ╲</span></span>
<span class="line"><span>  ╱       ╲ V (视线)</span></span>
<span class="line"><span> ╱         ↘</span></span>
<span class="line"><span>光源        观察者</span></span>
<span class="line"><span></span></span>
<span class="line"><span>镜面强度 = (R · V)^shininess</span></span>
<span class="line"><span></span></span>
<span class="line"><span>R和V越接近 → 点积越大 → 高光越亮</span></span></code></pre></div><p><strong>反射向量的计算</strong>：</p><p>光线遵循&quot;入射角 = 反射角&quot;定律，反射向量公式：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>R = 2(N · L)N - L</span></span>
<span class="line"><span></span></span>
<span class="line"><span>推导过程（可选）：</span></span>
<span class="line"><span>1. 入射光L在法线N上的投影：proj = (N · L)N</span></span>
<span class="line"><span>2. 反射光 = L + 2×（投影 - L分量在法线的部分）</span></span>
<span class="line"><span>3. 化简得：R = 2(N · L)N - L</span></span></code></pre></div><blockquote><p>💡 <strong>GLSL简化</strong>：不用手动计算，用内置函数：</p><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> R </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> reflect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">L, N);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 注意：L要取反，因为reflect函数的参数是&quot;入射方向&quot;</span></span></code></pre></div></blockquote><p><strong>shininess参数</strong>：</p><p>幂次 <code>shininess</code> 控制高光的&quot;聚集程度&quot;：</p><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> spec </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R, V), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), u_shininess);</span></span></code></pre></div><ul><li><strong>shininess = 2</strong>：高光范围很大，模糊（粗糙塑料）</li><li><strong>shininess = 32</strong>：高光范围中等（光滑塑料）</li><li><strong>shininess = 128</strong>：高光范围很小，锐利（抛光金属）</li></ul><blockquote><p>💡 <strong>为什么用幂次？</strong><br> 幂次函数让高光&quot;快速衰减&quot;。例如：</p><ul><li><code>dot(R, V) = 0.9</code> → <code>0.9^2 = 0.81</code> → <code>0.9^32 = 0.04</code> → <code>0.9^128 ≈ 0</code></li><li>只有R和V非常接近时（如0.99），高光才明显</li></ul></blockquote><h4 id="🔧-完整-phong-实现" tabindex="-1">🔧 完整 Phong 实现 <a class="header-anchor" href="#🔧-完整-phong-实现" aria-label="Permalink to &quot;🔧 完整 Phong 实现&quot;">​</a></h4><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_lightPos;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         // 光源位置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_viewPos;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          // 摄像机位置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_lightColor;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // 光源颜色</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_objectColor;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 物体颜色</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_ambientStrength;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 环境光强度（推荐0.1-0.2）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_shininess;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // 高光锐度（推荐8-128）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varying</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_normal;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varying</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_position;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ========== 步骤1：准备向量 ==========</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v_normal);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                 // 法线</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_lightPos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_position);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 光照方向</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 V </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_viewPos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_position);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // 视线方向</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ========== 步骤2：计算三个光照分量 ==========</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 🌍 环境光（全局基础亮度）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 ambient </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_ambientStrength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_lightColor;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ☀️ 漫反射（Lambert余弦定律）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> diff </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(N, L), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 diffuse </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> diff </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_lightColor;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ✨ 镜面反射（Phong高光）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 R </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> reflect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">L, N);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 计算反射方向（-L是入射方向）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> spec </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R, V), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), u_shininess);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 specular </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> spec </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_lightColor;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ========== 步骤3：合成最终颜色 ==========</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 注意：镜面反射通常不乘以objectColor（高光是光源颜色）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ambient </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> diffuse) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_objectColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> specular;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gl_FragColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vec4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>💡 <strong>为什么镜面反射不乘以物体颜色？</strong></p><ul><li><strong>漫反射</strong>：光被物体表面吸收后再发出，携带物体颜色</li><li><strong>镜面反射</strong>：光直接反射，不与物体材质作用，保持光源颜色</li><li>例外：金属的高光会带有金属本身的颜色（PBR会处理这个）</li></ul></blockquote><p><strong>参数效果对比</strong>：</p><table><thead><tr><th>shininess</th><th>高光效果</th><th>视觉描述</th><th>材质示例</th></tr></thead><tbody><tr><td>2</td><td>⭕ 大而模糊</td><td>高光占据大片区域</td><td>粗糙塑料、橡胶</td></tr><tr><td>32</td><td>🔘 中等大小</td><td>明显但不刺眼</td><td>光滑塑料、陶瓷</td></tr><tr><td>128</td><td>⚪ 小而锐利</td><td>亮点集中，类似镜面</td><td>抛光金属、玻璃</td></tr><tr><td>256+</td><td>✨ 极小极亮</td><td>几乎是点状高光</td><td>钻石、镜子</td></tr></tbody></table><blockquote><p>💡 <strong>调参技巧</strong>：</p><ul><li>先设 <code>u_ambientStrength = 0.2</code>，<code>u_shininess = 32</code></li><li>观察效果，根据需要调整</li><li>如果高光看不见，检查摄像机位置和光源位置是否合理</li></ul></blockquote><hr><h3 id="_3-3-blinn-phong-模型-性能优化版" tabindex="-1">3.3 Blinn-Phong 模型（性能优化版） <a class="header-anchor" href="#_3-3-blinn-phong-模型-性能优化版" aria-label="Permalink to &quot;3.3 Blinn-Phong 模型（性能优化版）&quot;">​</a></h3><blockquote><p>💡 <strong>为什么需要改进Phong？</strong><br> Phong模型在某些掠射角度（光线几乎平行于表面）会产生高光突然消失的不自然现象。Blinn改进了这个问题！</p></blockquote><h4 id="phong的问题" tabindex="-1">Phong的问题 <a class="header-anchor" href="#phong的问题" aria-label="Permalink to &quot;Phong的问题&quot;">​</a></h4><p>当视角V和反射方向R的夹角 &gt; 90°时，<code>dot(R, V)</code> 变负，高光突然消失。这在掠射角度很常见，导致不自然的高光&quot;闪烁&quot;。</p><h4 id="blinn的改进-半程向量" tabindex="-1">Blinn的改进：半程向量 <a class="header-anchor" href="#blinn的改进-半程向量" aria-label="Permalink to &quot;Blinn的改进：半程向量&quot;">​</a></h4><p><strong>核心思想</strong>：用<strong>半程向量H</strong>代替反射向量R。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>      N (法线)</span></span>
<span class="line"><span>      ↑ H (半程向量)</span></span>
<span class="line"><span>      │╱</span></span>
<span class="line"><span>      ╱</span></span>
<span class="line"><span>  L ╱   ╲ V</span></span>
<span class="line"><span>   ╱     ╲</span></span>
<span class="line"><span>  ╱       ╲</span></span>
<span class="line"><span></span></span>
<span class="line"><span>H = normalize(L + V)  ← L和V的平分线方向</span></span>
<span class="line"><span></span></span>
<span class="line"><span>镜面强度 = (N · H)^shininess</span></span></code></pre></div><blockquote><p>💡 <strong>为什么用半程向量？</strong><br> 想象你用镜子反射太阳光到眼睛里：</p><ul><li><strong>Phong思路</strong>：先算光的反射方向R，再看R和视线V是否接近</li><li><strong>Blinn思路</strong>：直接看法线N是否对准L和V的&quot;中间方向&quot;H</li></ul><p>两者物理意义等价，但Blinn在数学上更稳定！</p></blockquote><h4 id="优势对比" tabindex="-1">优势对比 <a class="header-anchor" href="#优势对比" aria-label="Permalink to &quot;优势对比&quot;">​</a></h4><table><thead><tr><th>特性</th><th>Phong</th><th>Blinn-Phong</th></tr></thead><tbody><tr><td><strong>计算量</strong></td><td>需要 <code>reflect()</code></td><td>只需一次向量加法 ✅</td></tr><tr><td><strong>稳定性</strong></td><td>掠射角会闪烁</td><td>过渡平滑 ✅</td></tr><tr><td><strong>物理准确性</strong></td><td>严格镜面反射</td><td>近似但更实用</td></tr><tr><td><strong>业界采用</strong></td><td>较少</td><td>广泛使用 ✅</td></tr></tbody></table><blockquote><p>💡 <strong>Three.js的选择</strong>：<code>MeshPhongMaterial</code> 实际使用的是Blinn-Phong，而非Phong！</p></blockquote><h4 id="🔧-实现" tabindex="-1">🔧 实现 <a class="header-anchor" href="#🔧-实现" aria-label="Permalink to &quot;🔧 实现&quot;">​</a></h4><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ========== 步骤1：准备向量 ==========</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v_normal);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_lightPos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_position);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 V </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_viewPos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_position);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 🌟 计算半程向量（L和V的平分线）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 H </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> V);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 注意：一定要归一化！(L+V)的长度不是1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ========== 步骤2：环境光 + 漫反射（与Phong相同） ==========</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 ambient </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_ambientStrength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_lightColor;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> diff </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(N, L), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 diffuse </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> diff </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_lightColor;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ========== 步骤3：Blinn-Phong镜面反射 ==========</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 用N·H代替R·V</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> spec </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(N, H), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), u_shininess);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 specular </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> spec </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_lightColor;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ========== 步骤4：合成最终颜色 ==========</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ambient </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> diffuse) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_objectColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> specular;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gl_FragColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vec4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>💡 <strong>Phong vs Blinn-Phong代码对比</strong>：</p><p><strong>Phong</strong>：</p><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> R </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> reflect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">L, N);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         // 需要计算反射向量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> spec </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(R, V), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), shininess);</span></span></code></pre></div><p><strong>Blinn-Phong</strong>：</p><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> H </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> V);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       // 只需向量加法</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> spec </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(N, H), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), shininess);</span></span></code></pre></div><p>更简单！</p></blockquote><blockquote><p>⚠️ <strong>shininess的调整</strong>：<br> Blinn-Phong的高光比Phong更&quot;锐利&quot;，可能需要调高shininess值以获得相同视觉效果：</p><ul><li>Phong的shininess=32 ≈ Blinn-Phong的shininess=64</li><li>实际使用时建议在32-256范围内调整</li></ul></blockquote><hr><h2 id="_4-🗺️-法线贴图-normal-mapping-细节的魔法" tabindex="-1">4. 🗺️ 法线贴图 (Normal Mapping) - 细节的魔法 <a class="header-anchor" href="#_4-🗺️-法线贴图-normal-mapping-细节的魔法" aria-label="Permalink to &quot;4. 🗺️ 法线贴图 (Normal Mapping) - 细节的魔法&quot;">​</a></h2><h3 id="_4-1-为什么需要法线贴图" tabindex="-1">4.1 为什么需要法线贴图？ <a class="header-anchor" href="#_4-1-为什么需要法线贴图" aria-label="Permalink to &quot;4.1 为什么需要法线贴图？&quot;">​</a></h3><h4 id="问题-多边形的限制" tabindex="-1">问题：多边形的限制 <a class="header-anchor" href="#问题-多边形的限制" aria-label="Permalink to &quot;问题：多边形的限制&quot;">​</a></h4><p><strong>困境</strong>：3D模型的面数有限，无法表现所有细微细节。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>低模（1000面）:         法线贴图后:</span></span>
<span class="line"><span>  ╱╲╱╲╱╲               ∿∾∿∾∿∾</span></span>
<span class="line"><span> ╱  ╲  ╱              ∾∿∾∿∾∿∾</span></span>
<span class="line"><span>╱────╲╱               ∿∾∿∾∿∾∿</span></span>
<span class="line"><span></span></span>
<span class="line"><span>平滑但缺细节           看起来凹凸不平！</span></span>
<span class="line"><span>                      （实际几何没变）</span></span></code></pre></div><blockquote><p>💡 <strong>类比理解</strong>：<br> 想象用积木搭建一座雕像：</p><ul><li><strong>高模</strong>：用1000万个小积木 → 细节丰富，但电脑跑不动</li><li><strong>低模</strong>：用1000个大积木 → 流畅，但太方块化</li><li><strong>法线贴图</strong>：用1000个大积木，但<strong>画</strong>上细节 → 兼顾性能和视觉！</li></ul></blockquote><h4 id="法线贴图的解决方案" tabindex="-1">法线贴图的解决方案 <a class="header-anchor" href="#法线贴图的解决方案" aria-label="Permalink to &quot;法线贴图的解决方案&quot;">​</a></h4><p><strong>核心思想</strong>：用贴图存储<strong>每个像素的法线方向</strong>，而不是真正改变几何形状。</p><p><strong>效果</strong>：</p><ul><li>✅ 几何保持简单（面数少，性能好）</li><li>✅ 光照计算时用贴图的法线（看起来有细节）</li><li>✅ 节省90%以上的多边形数量</li></ul><blockquote><p>⚠️ <strong>法线贴图的局限</strong>：</p><ul><li>只改变<strong>光照</strong>，不改变<strong>轮廓</strong>（从侧面看仍然是平的）</li><li>不能产生自遮挡（凹坑内部不会产生阴影）</li><li>需要配合视差贴图才能模拟深度感</li></ul></blockquote><h3 id="_4-2-切线空间-tangent-space-法线贴图的坐标系" tabindex="-1">4.2 切线空间 (Tangent Space) - 法线贴图的坐标系 <a class="header-anchor" href="#_4-2-切线空间-tangent-space-法线贴图的坐标系" aria-label="Permalink to &quot;4.2 切线空间 (Tangent Space) - 法线贴图的坐标系&quot;">​</a></h3><blockquote><p>💡 <strong>为什么需要切线空间？</strong><br> 法线贴图存储的是<strong>相对于表面的法线</strong>，而光照计算在<strong>世界空间</strong>进行。我们需要一个桥梁把两者连接起来！</p></blockquote><h4 id="切线空间的三个基向量" tabindex="-1">切线空间的三个基向量 <a class="header-anchor" href="#切线空间的三个基向量" aria-label="Permalink to &quot;切线空间的三个基向量&quot;">​</a></h4><p>法线贴图需要一个<strong>局部坐标系</strong>，由三个互相垂直的向量组成：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>        N (法线)</span></span>
<span class="line"><span>        ↑</span></span>
<span class="line"><span>        │</span></span>
<span class="line"><span>    ────●──── 表面</span></span>
<span class="line"><span>       ╱│</span></span>
<span class="line"><span>      ╱ │</span></span>
<span class="line"><span>     T  B</span></span>
<span class="line"><span>     </span></span>
<span class="line"><span>T = Tangent    (切线，沿UV的U方向)</span></span>
<span class="line"><span>B = Bitangent  (副切线，沿UV的V方向)</span></span>
<span class="line"><span>N = Normal     (法线，垂直于表面)</span></span></code></pre></div><blockquote><p>💡 <strong>类比理解</strong>：<br> 想象一张贴在曲面上的邮票：</p><ul><li><strong>T</strong>：邮票的&quot;横向&quot;（左右方向）</li><li><strong>B</strong>：邮票的&quot;纵向&quot;（上下方向）</li><li><strong>N</strong>：邮票朝外的&quot;法线&quot;（垂直于邮票）</li></ul><p>这三个方向形成一个&quot;局部坐标系&quot;，让我们知道法线贴图的&quot;上下左右&quot;对应世界的哪个方向。</p></blockquote><h4 id="tbn矩阵-切线空间-↔-世界空间" tabindex="-1">TBN矩阵：切线空间 ↔ 世界空间 <a class="header-anchor" href="#tbn矩阵-切线空间-↔-世界空间" aria-label="Permalink to &quot;TBN矩阵：切线空间 ↔ 世界空间&quot;">​</a></h4><p><strong>TBN矩阵</strong>是一个3x3矩阵，用于<strong>空间变换</strong>：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>世界法线 = TBN × 切线空间法线</span></span>
<span class="line"><span></span></span>
<span class="line"><span>其中 TBN = [T | B | N]（三个列向量组成的矩阵）</span></span></code></pre></div><blockquote><p>💡 <strong>数学本质</strong>：<br> TBN矩阵实际上是<strong>旋转矩阵</strong>，把法线从&quot;贴图的局部坐标系&quot;转到&quot;世界坐标系&quot;。</p></blockquote><blockquote><p>⚠️ <strong>T、B、N必须满足</strong>：</p><ul><li>三者互相垂直（正交）</li><li>都是单位向量（长度=1）</li><li>满足右手定则：<code>B = cross(N, T)</code></li></ul></blockquote><h3 id="_4-3-实现步骤" tabindex="-1">4.3 实现步骤 <a class="header-anchor" href="#_4-3-实现步骤" aria-label="Permalink to &quot;4.3 实现步骤&quot;">​</a></h3><h4 id="_4-3-1-步骤1-顶点着色器计算-tbn" tabindex="-1">4.3.1 步骤1: 顶点着色器计算 TBN <a class="header-anchor" href="#_4-3-1-步骤1-顶点着色器计算-tbn" aria-label="Permalink to &quot;4.3.1 步骤1: 顶点着色器计算 TBN&quot;">​</a></h4><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">attribute</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> position;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">attribute</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> normal;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">attribute</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> uv;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">attribute</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tangent;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 切线 (需要预计算或生成)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> mat4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modelMatrix;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> mat4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> viewMatrix;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> mat4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> projectionMatrix;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> mat3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> normalMatrix;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varying</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_uv;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varying</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_position;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varying</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> mat3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_TBN;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // TBN矩阵</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec4 worldPos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modelMatrix </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vec4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(position, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    v_position </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> worldPos.xyz;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    v_uv </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> uv;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 🧭 构建 TBN 矩阵</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(normalMatrix </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tangent);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(normalMatrix </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> normal);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Gram-Schmidt 正交化 (确保T垂直于N)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(T, N) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> N);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 计算副切线</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 B </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cross</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(N, T);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 组装 TBN 矩阵</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    v_TBN </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mat3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(T, B, N);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gl_Position </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> projectionMatrix </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> viewMatrix </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> worldPos;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="_4-3-2-步骤2-片元着色器采样法线贴图" tabindex="-1">4.3.2 步骤2: 片元着色器采样法线贴图 <a class="header-anchor" href="#_4-3-2-步骤2-片元着色器采样法线贴图" aria-label="Permalink to &quot;4.3.2 步骤2: 片元着色器采样法线贴图&quot;">​</a></h4><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> sampler2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_normalMap;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> sampler2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_diffuseMap;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_lightPos;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_viewPos;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varying</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_uv;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varying</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_position;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varying</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> mat3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_TBN;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 🗺️ 从法线贴图采样</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 tangentNormal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> texture2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_normalMap, v_uv).rgb;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 🔄 从 [0,1] 映射到 [-1,1]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    tangentNormal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tangentNormal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 🌍 转换到世界空间</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v_TBN </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tangentNormal);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 其余部分同 Blinn-Phong</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_lightPos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_position);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 V </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_viewPos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_position);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 H </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> V);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> diff </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(N, L), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> spec </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(N, H), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 🎨 基础颜色从 diffuse 贴图采样</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 baseColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> texture2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_diffuseMap, v_uv).rgb;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 ambient </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> baseColor;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 diffuse </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> diff </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> baseColor;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 specular </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> spec </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ambient </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> diffuse </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> specular;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gl_FragColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vec4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(color, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_4-4-法线贴图的颜色编码" tabindex="-1">4.4 法线贴图的颜色编码 <a class="header-anchor" href="#_4-4-法线贴图的颜色编码" aria-label="Permalink to &quot;4.4 法线贴图的颜色编码&quot;">​</a></h3><p>法线贴图看起来是<strong>蓝紫色</strong>的:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>颜色含义:</span></span>
<span class="line"><span>- R通道 (红): X轴分量 (水平)</span></span>
<span class="line"><span>- G通道 (绿): Y轴分量 (垂直)</span></span>
<span class="line"><span>- B通道 (蓝): Z轴分量 (朝向观察者)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>平坦表面: RGB(128, 128, 255) </span></span>
<span class="line"><span>         = 法线(0, 0, 1) </span></span>
<span class="line"><span>         = 垂直朝上</span></span></code></pre></div><h3 id="_4-5-强度控制" tabindex="-1">4.5 强度控制 <a class="header-anchor" href="#_4-5-强度控制" aria-label="Permalink to &quot;4.5 强度控制&quot;">​</a></h3><p>调整法线贴图的影响强度：</p><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 采样法线</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tangentNormal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> texture2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_normalMap, v_uv).rgb;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tangentNormal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tangentNormal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 🎛️ 控制强度 (0 = 完全平滑, 1 = 完整效果)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> normalStrength </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tangentNormal.xy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> normalStrength;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 重新归一化</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tangentNormal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tangentNormal);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v_TBN </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tangentNormal);</span></span></code></pre></div><hr><h2 id="_5-🏔️-视差贴图-parallax-mapping-假的凹凸" tabindex="-1">5. 🏔️ 视差贴图 (Parallax Mapping) - 假的凹凸 <a class="header-anchor" href="#_5-🏔️-视差贴图-parallax-mapping-假的凹凸" aria-label="Permalink to &quot;5. 🏔️ 视差贴图 (Parallax Mapping) - 假的凹凸&quot;">​</a></h2><h3 id="_5-1-原理" tabindex="-1">5.1 原理 <a class="header-anchor" href="#_5-1-原理" aria-label="Permalink to &quot;5.1 原理&quot;">​</a></h3><p>法线贴图只改变<strong>光照</strong>,不改变<strong>几何</strong>。视差贴图进一步伪造深度感:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>侧视图:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    观察者</span></span>
<span class="line"><span>      │V</span></span>
<span class="line"><span>      │  ╲</span></span>
<span class="line"><span>      │   ╲  实际采样点</span></span>
<span class="line"><span>      │    ●───────┐</span></span>
<span class="line"><span>      │   ╱        │ 偏移</span></span>
<span class="line"><span>  ────●───────────┘</span></span>
<span class="line"><span>   原始UV      高度贴图</span></span>
<span class="line"><span></span></span>
<span class="line"><span>根据视角和高度,偏移UV坐标</span></span></code></pre></div><h3 id="_5-2-基础视差贴图" tabindex="-1">5.2 基础视差贴图 <a class="header-anchor" href="#_5-2-基础视差贴图" aria-label="Permalink to &quot;5.2 基础视差贴图&quot;">​</a></h3><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> sampler2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_diffuseMap;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> sampler2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_heightMap;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 高度图 (灰度)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_heightScale;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 高度缩放 (0.01 ~ 0.1)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varying</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_uv;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varying</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_viewDirTangent;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 视线方向 (切线空间)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 🗺️ 采样高度</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> height </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> texture2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_heightMap, v_uv).r;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 📐 计算UV偏移</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec2 offset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_viewDirTangent.xy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (height </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_heightScale);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 🎯 偏移后的UV</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec2 parallaxUV </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_uv </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> offset;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 🎨 用偏移后的UV采样其他贴图</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> texture2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_diffuseMap, parallaxUV).rgb;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gl_FragColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vec4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(color, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><strong>顶点着色器补充:</strong></p><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varying</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_viewDirTangent;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ... (之前的代码)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 🌍 世界空间的视线方向</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 viewDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_position </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_viewPos;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 🔄 转到切线空间</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    v_viewDirTangent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> viewDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_TBN;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 注意:乘以TBN的转置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_5-3-陡峭视差贴图-steep-parallax" tabindex="-1">5.3 陡峭视差贴图 (Steep Parallax) <a class="header-anchor" href="#_5-3-陡峭视差贴图-steep-parallax" aria-label="Permalink to &quot;5.3 陡峭视差贴图 (Steep Parallax)&quot;">​</a></h3><p>基础视差在陡峭角度会失真,改进版使用<strong>分层采样</strong>:</p><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> sampler2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_heightMap;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_heightScale;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> minLayers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> maxLayers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 32.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vec2</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> parallaxMapping</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vec2 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">uv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, vec3 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">viewDir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 📊 根据视角动态调整层数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numLayers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(maxLayers, minLayers, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">abs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), viewDir)));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 📏 每层的深度步长</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layerDepth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numLayers;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentLayerDepth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 📐 每层的UV偏移</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec2 deltaUV </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> viewDir.xy </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_heightScale </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numLayers;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec2 currentUV </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> uv;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentHeight </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> texture2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_heightMap, currentUV).r;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 🔄 逐层下降,直到找到交点</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    while</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(currentLayerDepth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentHeight) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        currentUV </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> deltaUV;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        currentHeight </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> texture2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_heightMap, currentUV).r;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        currentLayerDepth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layerDepth;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentUV;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec2 parallaxUV </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> parallaxMapping</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v_uv, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v_viewDirTangent));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> texture2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_diffuseMap, parallaxUV).rgb;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gl_FragColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vec4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(color, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_5-4-视差遮蔽贴图-pom" tabindex="-1">5.4 视差遮蔽贴图 (POM) <a class="header-anchor" href="#_5-4-视差遮蔽贴图-pom" aria-label="Permalink to &quot;5.4 视差遮蔽贴图 (POM)&quot;">​</a></h3><p>最高质量,添加<strong>插值优化</strong>:</p><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vec2</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> parallaxOcclusionMapping</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vec2 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">uv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, vec3 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">viewDir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ... (分层下降,同上)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 🎯 找到交点后,进行线性插值优化</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec2 prevUV </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentUV </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> deltaUV;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> afterDepth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentHeight </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentLayerDepth;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> beforeDepth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> texture2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_heightMap, prevUV).r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> currentLayerDepth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layerDepth;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> weight </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> afterDepth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (afterDepth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> beforeDepth);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec2 finalUV </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(currentUV, prevUV, weight);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> finalUV;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h2 id="_6-🌈-pbr-基础-基于物理的渲染" tabindex="-1">6. 🌈 PBR 基础 - 基于物理的渲染 <a class="header-anchor" href="#_6-🌈-pbr-基础-基于物理的渲染" aria-label="Permalink to &quot;6. 🌈 PBR 基础 - 基于物理的渲染&quot;">​</a></h2><h3 id="_6-1-什么是-pbr" tabindex="-1">6.1 什么是 PBR? <a class="header-anchor" href="#_6-1-什么是-pbr" aria-label="Permalink to &quot;6.1 什么是 PBR?&quot;">​</a></h3><p><strong>Physically Based Rendering (基于物理的渲染)</strong> 是现代游戏引擎的标准:</p><ul><li>✅ 基于真实物理</li><li>✅ 参数直观 (粗糙度、金属度)</li><li>✅ 在任何光照下都正确</li></ul><h3 id="_6-2-核心参数" tabindex="-1">6.2 核心参数 <a class="header-anchor" href="#_6-2-核心参数" aria-label="Permalink to &quot;6.2 核心参数&quot;">​</a></h3><table><thead><tr><th>参数</th><th>含义</th><th>范围</th><th>示例</th></tr></thead><tbody><tr><td><strong>Albedo</strong></td><td>基础颜色 (不含光照)</td><td>RGB</td><td>木头: (0.6, 0.4, 0.2)</td></tr><tr><td><strong>Metallic</strong></td><td>金属度</td><td>0~1</td><td>金属: 1.0, 非金属: 0.0</td></tr><tr><td><strong>Roughness</strong></td><td>粗糙度</td><td>0~1</td><td>镜面: 0.0, 粗糙: 1.0</td></tr><tr><td><strong>AO</strong></td><td>环境遮蔽</td><td>0~1</td><td>缝隙: 0.0, 开阔: 1.0</td></tr></tbody></table><h3 id="_6-3-简化-pbr-实现" tabindex="-1">6.3 简化 PBR 实现 <a class="header-anchor" href="#_6-3-简化-pbr-实现" aria-label="Permalink to &quot;6.3 简化 PBR 实现&quot;">​</a></h3><div class="language-glsl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">glsl</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> sampler2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_albedoMap;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> sampler2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_metallicMap;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> sampler2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_roughnessMap;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> sampler2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_normalMap;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> sampler2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_aoMap;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> u_lightPositions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 多光源</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> u_lightColors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">uniform</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> u_camPos;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varying</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_uv;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varying</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_position;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varying</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> mat3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_TBN;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.14159265359</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 🎨 Fresnel方程 (Schlick近似)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vec3</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fresnelSchlick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> cosTheta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, vec3 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">F0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> F0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> F0) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cosTheta, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 📊 法线分布函数 (GGX/Trowbridge-Reitz)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> distributionGGX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vec3 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">N</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, vec3 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">H</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> roughness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> roughness </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> roughness;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NdotH </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(N, H), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NdotH2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NdotH </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NdotH;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nom </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a2;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> denom </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (NdotH2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (a2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    denom </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> denom </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> denom;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nom </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> denom;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 📐 几何遮蔽函数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> geometrySchlickGGX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> NdotV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> roughness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (roughness </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> k </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> r) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nom </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NdotV;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> denom </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NdotV </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> k) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> k;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nom </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> denom;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> geometrySmith</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vec3 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">N</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, vec3 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">V</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, vec3 </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">L</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> roughness</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NdotV </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(N, V), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NdotL </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(N, L), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ggx2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> geometrySchlickGGX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NdotV, roughness);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ggx1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> geometrySchlickGGX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(NdotL, roughness);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ggx1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ggx2;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 🗺️ 采样材质贴图</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 albedo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> texture2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_albedoMap, v_uv).rgb;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> metallic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> texture2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_metallicMap, v_uv).r;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> roughness </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> texture2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_roughnessMap, v_uv).r;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ao </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> texture2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_aoMap, v_uv).r;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 🧭 法线</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 tangentNormal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> texture2D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_normalMap, v_uv).rgb </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 N </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(v_TBN </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tangentNormal);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 V </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u_camPos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_position);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ✨ 计算 F0 (垂直入射时的菲涅尔反射率)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 F0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.04</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 非金属默认值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    F0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(F0, albedo, metallic);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 金属使用albedo作为F0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 💡 遍历所有光源</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 Lo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        vec3 L </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">u_lightPositions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_position);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        vec3 H </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> normalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(V </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> L);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> distance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">u_lightPositions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> v_position);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> attenuation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (distance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> distance);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 平方衰减</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        vec3 radiance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> u_lightColors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> attenuation;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 🧮 Cook-Torrance BRDF</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NDF </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> distributionGGX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(N, H, roughness);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> G </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> geometrySmith</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(N, V, L, roughness);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        vec3 F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fresnelSchlick</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(H, V), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), F0);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        vec3 numerator </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NDF </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> G </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> F;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> denominator </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(N, V), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(N, L), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        vec3 specular </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> numerator </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> denominator;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 🎨 能量守恒: kS + kD = 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        vec3 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> F;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 镜面反射比例</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        vec3 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> kS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        kD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> metallic;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 金属没有漫反射</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NdotL </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(N, L), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Lo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> albedo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> specular) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> radiance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NdotL;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 🌍 环境光 (简化版)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 ambient </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.03</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> albedo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ao;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vec3 color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ambient </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Lo;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 🎨 HDR色调映射 (Reinhard)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 📸 Gamma校正</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    color </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(color, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vec3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gl_FragColor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> vec4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(color, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><hr><h2 id="_7-🎓-本章总结" tabindex="-1">7. 🎓 本章总结 <a class="header-anchor" href="#_7-🎓-本章总结" aria-label="Permalink to &quot;7. 🎓 本章总结&quot;">​</a></h2><h3 id="_7-1-你学到了什么" tabindex="-1">7.1 你学到了什么 <a class="header-anchor" href="#_7-1-你学到了什么" aria-label="Permalink to &quot;7.1 你学到了什么&quot;">​</a></h3><p><strong>经典光照模型:</strong></p><ul><li>🔆 Lambert 漫反射</li><li>💡 Phong 三分量模型</li><li>✨ Blinn-Phong 优化</li></ul><p><strong>高级材质技术:</strong></p><ul><li>🗺️ 法线贴图 (Normal Mapping)</li><li>🏔️ 视差贴图 (Parallax Mapping)</li><li>🎯 视差遮蔽贴图 (POM)</li></ul><p><strong>PBR 基础:</strong></p><ul><li>🌈 基于物理的参数系统</li><li>🧮 Cook-Torrance BRDF</li><li>📊 GGX法线分布、Fresnel方程、几何遮蔽</li></ul><h3 id="_7-2-下一步" tabindex="-1">7.2 下一步 <a class="header-anchor" href="#_7-2-下一步" aria-label="Permalink to &quot;7.2 下一步&quot;">​</a></h3><p>下一篇 (最后一篇!) 《光线追踪与环境映射》将教你:</p><ol><li><strong>Ray Marching</strong>: SDF的3D应用,GPU光线追踪</li><li><strong>环境贴图</strong>: 球形、立方体环境映射</li><li><strong>反射与折射</strong>: 真实的光学现象</li><li><strong>全局光照</strong>: IBL (基于图像的光照)</li></ol><h3 id="_7-3-推荐练习" tabindex="-1">7.3 推荐练习 <a class="header-anchor" href="#_7-3-推荐练习" aria-label="Permalink to &quot;7.3 推荐练习&quot;">​</a></h3><ol><li><p><strong>多光源场景</strong></p><ul><li>实现点光源、聚光灯、平行光</li><li>阴影映射基础</li><li>光源衰减函数</li></ul></li><li><p><strong>材质库</strong></p><ul><li>创建不同材质预设 (金属、木头、塑料)</li><li>实时调整参数观察效果</li><li>组合多张贴图</li></ul></li><li><p><strong>法线贴图生成</strong></p><ul><li>从高度图生成法线贴图</li><li>Sobel算子应用</li><li>强度控制</li></ul></li><li><p><strong>PBR工作流</strong></p><ul><li>完整的PBR材质系统</li><li>IBL环境光照</li><li>实时GI近似</li></ul></li></ol><h3 id="_7-4-参考资源" tabindex="-1">7.4 参考资源 <a class="header-anchor" href="#_7-4-参考资源" aria-label="Permalink to &quot;7.4 参考资源&quot;">​</a></h3><ul><li><a href="https://learnopengl.com/Lighting/Basic-Lighting" target="_blank" rel="noreferrer">Learn OpenGL - Lighting</a></li><li><a href="https://learnopengl.com/PBR/Theory" target="_blank" rel="noreferrer">Learn OpenGL - PBR Theory</a></li><li><a href="https://google.github.io/filament/Filament.html" target="_blank" rel="noreferrer">Filament PBR Guide</a></li><li><a href="https://blog.selfshadow.com/publications/s2013-shading-course/" target="_blank" rel="noreferrer">Real Shading in Unreal Engine 4</a></li></ul><p>继续探索光与物质的物理奥秘吧!最后一篇见! ✨</p>`,211),t=[h];function p(k,e,r,E,g,d){return a(),i("div",null,t)}const c=s(l,[["render",p]]);export{y as __pageData,c as default};
