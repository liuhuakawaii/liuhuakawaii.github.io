import{_ as t,D as h,c as o,l as i,a as s,I as n,w as e,a5 as l,o as d}from"./chunks/framework.BIhQMg0k.js";const k="/assets/js1.C9dzRXZ2.jpg",p="/assets/js2.Db-3FetZ.jpg",c="/assets/js3.D05TD3NM.jpg",r="/assets/js4.CZRbbue6.jpg",E="/assets/js5.D6sKwou-.jpg",g="/assets/js6.Bi14uYHc.jpg",u="/assets/js7.BDBfQe_T.jpg",_="/assets/js8.DwRyi1rB.jpg",y="/assets/day0101.DfseSNz4.png",F="/assets/day0201.BHNfwsGP.jpg",A="/assets/day0301.sfYO9DyW.jpg",C="/assets/day0401.DnHu93x5.jpg",b="/assets/day0601.DJsaxzh6.jpg",D="/assets/day0602.CjP1GER5.jpg",T="/assets/day0603.Bdd8mcaU.jpg",m="/assets/day0701.i69KGQih.jpg",S="/assets/day0702.odAjfGOa.jpg",v="/assets/day0703.DRF457PA.jpg",f="/assets/01.D2weHy2N.jpg",B="/assets/02.UXVlNMy6.jpg",j="/assets/03.Cui-VwGI.jpg",P="/assets/04.HoUHQmhP.jpg",Fl=JSON.parse('{"title":"JS学习笔记","description":"","frontmatter":{"title":"JS学习笔记","date":"2021-01-09T00:00:00.000Z","categories":["javascript","笔记"]},"headers":[],"relativePath":"blogs/note/js.md","filePath":"blogs/note/js.md"}'),I={name:"blogs/note/js.md"},N=i("h2",{id:"js基础",tabindex:"-1"},[s("JS基础 "),i("a",{class:"header-anchor",href:"#js基础","aria-label":'Permalink to "JS基础"'},"​")],-1),V=l("",1),w=i("br",null,null,-1),M=i("br",null,null,-1),O=i("code",null,"let、var",-1),R=i("strong",null,[s("注意同一个变量不能用"),i("code",null,"let"),s("多次声明")],-1),q=l("",2),x=l("",1),L=i("ul",null,[i("li",null,"JavaScript是弱数据类型: JavaScript也不知道变量属于那种类型，赋值了才清楚。"),i("li",null,"坑:使用表单、prompt 获取过来的数据默认是字符串类型，此时不能直接进行加法运算。")],-1),J=l("",1),H=l("",1),U=i("strong",null,"这种方式专门用来对付字符串",-1),$=l("",3),W=i("code",null,"parseInt()",-1),z=l("",1),G=i("strong",null,[s("调用被转换数据类型的"),i("code",null,"toString()"),s("方法")],-1),X=i("li",null,"该方法不会影响到原变量，它会将转换的结果返回",-1),Y=i("li",null,"但是注意:null和undefined这两个值没有toString()方法,",-1),K=i("code",null,"boolean",-1),Z=l("",1),Q=i("li",null,[i("code",null,"typeof"),s("就是运算符，它将该值的类型"),i("strong",null,"以字符串的形式"),s("返回")],-1),ii=i("li",null,[i("strong",null,"无论是a++ 还是++a，都会立即使原变量的值自增1")],-1),si=l("",1),li=i("br",null,null,-1),ai=i("strong",null,"&&属于短路的与，如果第一个值为false，则不会看第二个值",-1),ni=i("br",null,null,-1),ei=i("img",{src:k,alt:""},null,-1),ti=i("br",null,null,-1),hi=i("strong",null,"||属于短路的或，如果第一个值为true，则不会检查第二个值",-1),oi=i("br",null,null,-1),di=i("img",{src:p,alt:""},null,-1),ki=i("li",null,[s("运算符的优先级"),i("br"),i("img",{src:c,alt:""})],-1),pi=l("",2),ci=l("",4),ri=i("code",null,"arr.splice(起始索引，删几个，插入的新元素)",-1),Ei=i("strong",null,"改变原数组",-1),gi=i("code",null,"arr.slice(起始索引，结束索引)",-1),ui=i("code",null,"concat()",-1),_i=i("br",null,null,-1),yi=i("code",null,'var result = arr.concat(arr2,arr3,"牛魔王","铁扇公主")',-1),Fi=i("code",null,"join()",-1),Ai=i("code",null,"join()",-1),Ci=i("code",null,",",-1),bi=i("code",null,"reverse()",-1),Di=i("strong",null,"接修改原数组",-1),Ti=i("code",null,"sort()",-1),mi=i("code",null,"Unicode",-1),Si=i("br",null,null,-1),vi=i("img",{src:g,alt:""},null,-1),fi=i("br",null,null,-1),Bi=i("strong",null,"数组去重",-1),ji=i("br",null,null,-1),Pi=i("img",{src:u,alt:""},null,-1),Ii=i("li",null,[s("函数是封装一些功能的代码块，可以实现代码复用，提高开发效率"),i("br"),s(" 函数声明: "),i("code",null,"function 函数名 ( ) {语句...}")],-1),Ni=i("li",null,[s("函数的参数"),i("br"),s(" 形参可以理解为是在这个函数内声明的变量，但是没有赋值，实参可以理解为是给这个变量赋值，多余实参不会被赋值，没有对应实参的形参将是"),i("code",null,"undefined")],-1),Vi=i("li",null,"特点：有值就返回值，无值就结束函数",-1),wi=i("strong",null,"函数内不写return",-1),Mi=i("code",null,"undefined",-1),Oi=i("br",null,null,-1),Ri=i("br",null,null,-1),qi=i("strong",null,"可以用return [ ]返回多个值",-1),xi=l("",2),Li=l("",1),Ji={start:"6"},Hi=i("br",null,null,-1),Ui=i("code",null,"let 变量 = function () {语句....}",-1),$i=i("br",null,null,-1),Wi=i("img",{src:_,alt:""},null,-1),zi=i("br",null,null,-1),Gi=l("",1),Xi=i("h2",{id:"webapi进阶-dom、bom",tabindex:"-1"},[s("webAPI进阶--DOM、BOM "),i("a",{class:"header-anchor",href:"#webapi进阶-dom、bom","aria-label":'Permalink to "webAPI进阶--DOM、BOM"'},"​")],-1),Yi=i("h3",{id:"day-1",tabindex:"-1"},[s("Day 1 "),i("a",{class:"header-anchor",href:"#day-1","aria-label":'Permalink to "Day 1"'},"​")],-1),Ki=l("",3),Zi=i("li",null,[s("设置/修改元素常用属性 "),i("ul",null,[i("li",null,[s("直接 "),i("code",null,"对象.属性名 = 新值")]),i("li",null,[s("最常见的属性比如: "),i("code",null,"href、title、src"),s("等")])])],-1),Qi=l("",3),is=l("",1),ss=l("",2),ls=l("",1),as=i("h3",{id:"day-2",tabindex:"-1"},[s("Day 2 "),i("a",{class:"header-anchor",href:"#day-2","aria-label":'Permalink to "Day 2"'},"​")],-1),ns=l("",1),es=i("li",null,"函数表达式：把函数当值来对待",-1),ts=i("li",null,[s("回调函数：如果将函数A做为参数传递给函数B时，我们称函数A为回调函数,例如："),i("code",null,"setInterval（fn，1000）"),s(),i("code",null,"fn"),s("就是回调函数")],-1),hs=i("br",null,null,-1),os=l("",1),ds=l("",1),ks=i("h3",{id:"day-3",tabindex:"-1"},[s("Day 3 "),i("a",{class:"header-anchor",href:"#day-3","aria-label":'Permalink to "Day 3"'},"​")],-1),ps=l("",6),cs=l("",1),rs=l("",1),Es=l("",2),gs=i("br",null,null,-1),us=i("code",null,"color、background-color,outline",-1),_s=i("br",null,null,-1),ys=l("",1),Fs=l("",3),As=l("",1),Cs=i("strong",null,"scroll家族",-1),bs=i("code",null,"scrollWidth",-1),Ds=i("code",null,"scrollHeight",-1),Ts=i("strong",null,"元素的内容总宽高(不包含滚动条)",-1),ms=i("strong",null,"返回值不带单位",-1),Ss=l("",1),vs=i("strong",null,"offset家族",-1),fs=i("code",null,"offsetWidth",-1),Bs=i("code",null,"offsetHeight",-1),js=i("strong",null,"元素的自身宽高、包含元素自身设置的宽高",-1),Ps=i("code",null,"padding. Border",-1),Is=i("li",null,[s("获取位置:"),i("code",null,"offsetLeft"),s("和"),i("code",null,"offsetTop"),s(),i("strong",null,"只读属性"),i("ul",null,[i("li",null,"获取元素距离自己定位父级元素的左、上距离")])],-1),Ns=i("li",null,[i("code",null,"offsetParent"),i("ul",null,[i("li",null,"可以用来获取当前元素的定位父元素")])],-1),Vs=i("strong",null,"client家族",-1),ws=i("code",null,"clientwidth",-1),Ms=i("code",null,"clientHeight",-1),Os=i("strong",null,"元素的可视区域宽度和高度，不含边框和滚动条",-1),Rs=i("li",null,[s("获取位置: "),i("code",null,"clientLeft"),s("和"),i("code",null,"clientTop"),s(" 只读属性 "),i("ul",null,[i("li",null,"获取左边框和上边框宽度")])],-1),qs=l("",3),xs=l("",8),Ls=l("",2),Js=i("br",null,null,-1),Hs=i("code",null,"extends",-1),Us=i("strong",null,"构造函数+原型对象",-1),$s=i("br",null,null,-1),Ws=i("img",{src:j,alt:""},null,-1),zs=i("br",null,null,-1),Gs=i("img",{src:P,alt:""},null,-1),Xs=l("",1),Ys=l("",1),Ks=i("code",null,"fiflter",-1),Zs=l("",1),Qs=i("li",null,[i("code",null,"filter()"),s("方法创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素,主要用于筛选数组")],-1),il=i("code",null,"some",-1),sl=i("li",null,[i("code",null,"some()"),s("方法用于检测数组中的元素是否满足指定条件.通俗点查找数组中是否有满足条件的元素")],-1),ll=i("code",null,"true",-1),al=i("code",null,"false",-1),nl=l("",2),el=l("",4),tl=i("h3",{id:"day-3-1",tabindex:"-1"},[s("Day 3 "),i("a",{class:"header-anchor",href:"#day-3-1","aria-label":'Permalink to "Day 3"'},"​")],-1),hl=l("",5),ol=i("li",null,[i("strong",null,"函数内部自己调用自己，这个函数就是递归函数")],-1),dl=l("",1),kl=l("",11);function pl(cl,rl,El,gl,ul,_l){const a=h("font");return d(),o("div",null,[N,i("ol",null,[V,i("li",null,[s("变量和字面量 "),i("ol",null,[i("li",null,[s("字面量，都是一些不可改变的值，数字、字符串、数组、对象等等"),w,s(" 变量是计算机存储数据的"),n(a,{color:"red"},{default:e(()=>[s("“容器”")]),_:1}),s("，而不是数据"),M,s(" 可以用"),O,s("来声明变量，"),R]),q])]),x,i("li",null,[s("类型转换 "),L,i("ol",null,[J,i("li",null,[s("显式转换 "),i("ul",null,[i("li",null,[i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("转换成数字")]),_:1})]),i("ol",null,[H,i("li",null,[U,i("ul",null,[$,i("li",null,[i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("可以在"),W,s("中传递第二个参数，表示以此进制看待传入进来的参数")]),_:1})])])])])])]),i("li",null,[i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("转换成字符串")]),_:1})]),i("ol",null,[z,i("li",null,[G,i("ul",null,[X,Y,i("li",null,[i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("可以传一个参数2，表示转换成2进制结果 ")]),_:1})])])])])])]),i("li",null,[i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("转换成"),K]),_:1})]),Z])])])])]),i("li",null,[s("运算符 "),i("ol",null,[Q,i("li",null,[s("一元运算符：自增和自减 自减同理 "),i("ul",null,[ii,i("li",null,[i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("a++的值")]),_:1}),s(" = 原变量的值（"),n(a,{color:"red"},{default:e(()=>[s("自增前")]),_:1}),s("的值)")])]),i("li",null,[i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("++a的值")]),_:1}),s(" = 新值（"),n(a,{color:"red"},{default:e(()=>[s("自增后")]),_:1}),s("的值)")])])])]),si,i("li",null,[s("逻辑运算符"),li,ai,i("ol",null,[i("li",null,[i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("与运算：第一个为false，返回第一个；第一个为true，必然返回第二个")]),_:1})]),ni,ei,ti,hi]),i("li",null,[i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("或运算：第一个为true，返回第一个；第一个为false，必然返回第二个")]),_:1})]),oi,di]),i("li",null,[i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("非运算：！！a可以将任意数据类型转换为布尔值")]),_:1})])])])]),ki])]),pi,i("li",null,[s("数组的基本使用 "),i("ol",null,[ci,i("li",null,[ri,s("，会"),n(a,{color:"red"},{default:e(()=>[Ei]),_:1})]),i("li",null,[gi,s("可以从数组提取指定元素("),n(a,{color:"red"},{default:e(()=>[s("左闭右开")]),_:1}),s(")，并且封装到一个新数组中返回，"),i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("不会改变原数组")]),_:1})]),s("，第二个参数可以省略不写,此时会截取从开始索引往后的所有元素,可如果索引传递一个负值，则从后往前计算(-1倒数第一个)")]),i("li",null,[ui,s("可以连接两个或多个数组，并将新的数组返回，"),i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("不会改变原数组")]),_:1})]),_i,yi]),i("li",null,[Fi,s("可以将数组转换为一个字符串并作为结果返回，"),i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("不会对原数组产生影响")]),_:1})]),s(".在"),Ai,s("中可以指定一个字符串作为参数，将成为数组中元素的连接符，默认"),Ci,s("作为连接符")]),i("li",null,[bi,s("方法用来反转数组，该方法会"),n(a,{color:"red"},{default:e(()=>[s("直"),Di]),_:1})]),i("li",null,[Ti,s("用来对数组中的元素进行排序，"),i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("会影响原数组")]),_:1})]),s("，默认按照"),mi,s("编码进行排序"),Si,vi,fi,Bi,ji,Pi])])]),i("li",null,[s("函数 "),i("ol",null,[Ii,Ni,i("li",null,[s("函数的返回值 "),i("ol",null,[Vi,i("li",null,[i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("return后面不接数据")]),_:1}),i("strong",null,[s("或者"),n(a,{color:"red"},{default:e(()=>[wi]),_:1}),s("，函数的返回值是"),Mi,Oi,s(" return能立即结束当前函数,所以")]),s("return后面的数据不要换行写")]),Ri,qi])])]),xi]),Li,i("ol",Ji,[i("li",null,[s("匿名函数"),Hi,s(" 函数表达式 "),Ui,i("ul",null,[i("li",null,[s("立即执行函数"),$i,Wi,zi,i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("立即执行函数最好在前面加分号，防止报错")]),_:1})])])])])])]),Gi]),Xi,Yi,i("ol",null,[Ki,i("li",null,[s("设置/修改DOM元素属性 "),i("ol",null,[Zi,i("li",null,[s("设置/修改元素样式属性 "),i("ul",null,[Qi,i("li",null,[i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("通过classList操作类控制CSS（三个方法）")]),_:1})]),is])])]),ss])]),ls]),as,i("ol",null,[ns,i("li",null,[s("高阶函数 "),i("ol",null,[es,ts,i("li",null,[i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("环境对象this")]),_:1})]),hs,s(" 解析器在调用函数每次都会向函数内部传递进一个隐含的参数this, this指向的是一个对象，"),i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("定时器里面别用this，指向window")]),_:1})]),os]),ds])])]),ks,i("ol",null,[i("li",null,[s("节点操作 "),i("ol",null,[ps,i("li",null,[i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("使用innerHTML也可以完成DOM的增册改的相关操作")]),_:1})]),cs])])]),rs,i("li",null,[s("重绘和回流 "),i("ol",null,[Es,i("li",null,[s("重绘"),gs,s(" 由于节点(元素)的样式的改变并不影响它在文档流中的位置和文档布局时(比如: "),us,s("等)，称为重绘"),_s,i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("重绘不一定重排，重排一定会重绘")]),_:1})])]),i("li",null,[i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("如何减少重排？")]),_:1})]),ys])])])]),Fs,i("ol",null,[As,i("li",null,[s("元素大小和位置 "),i("ol",null,[i("li",null,[Cs,i("ol",null,[i("li",null,[s("获取宽高: "),bs,s("和"),Ds,i("ul",null,[i("li",null,[s("获取"),n(a,{color:"red"},{default:e(()=>[Ts]),_:1}),s(","),ms])])]),Ss])]),i("li",null,[vs,i("ol",null,[i("li",null,[s("获取宽高: "),fs,s("和"),Bs,i("ul",null,[i("li",null,[s("获取"),n(a,{color:"red"},{default:e(()=>[js]),_:1}),s("、"),Ps])])]),Is,Ns])]),i("li",null,[Vs,i("ol",null,[i("li",null,[s("获取宽高："),ws,s("和"),Ms,i("ul",null,[i("li",null,[s("获取"),n(a,{color:"red"},{default:e(()=>[Os]),_:1})])])]),Rs])]),qs])])]),xs,i("ol",null,[Ls,i("li",null,[s("组合继承"),Js,s(" ES6之前并没有给我们提供"),Hs,s("继承。我们可以通过"),Us,s("模拟实现继承，被称为组合继承"),$s,Ws,i("ul",null,[i("li",null,[i("strong",null,[s("如何从原型继承方法（"),n(a,{color:"red"},{default:e(()=>[s("两个要点")]),_:1}),s("）")]),zs,Gs])])]),Xs,i("li",null,[s("ES5新增方法 "),i("ol",null,[Ys,i("li",null,[Ks,s("方法"),Zs,i("ul",null,[Qs,i("li",null,[i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("注意它直接返回一个新数组")]),_:1})])])])]),i("li",null,[il,s("方法 "),i("ul",null,[sl,i("li",null,[i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("注意它返回值是布尔值,如果查找到这个元素,就返回"),ll,s("，如果查找不到就返回"),al,s(".")]),_:1})])]),nl])]),el])])]),tl,i("ol",null,[hl,i("li",null,[s("递归 "),i("ul",null,[ol,i("li",null,[i("strong",null,[n(a,{color:"red"},{default:e(()=>[s("递归函数必须加退出条件")]),_:1})])])]),dl]),kl])])}const Al=t(I,[["render",pl]]);export{Fl as __pageData,Al as default};
