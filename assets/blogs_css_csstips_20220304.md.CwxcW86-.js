import{_ as s,c as i,o as l,a3 as a}from"./chunks/framework.DpzXWsSh.js";const g=JSON.parse('{"title":"client、offset、scroll区分","description":"","frontmatter":{"title":"client、offset、scroll区分","date":"2022-3-04","categories":["css","css小知识"]},"headers":[],"relativePath":"blogs/css/csstips/20220304.md","filePath":"blogs/css/csstips/20220304.md"}'),n={name:"blogs/css/csstips/20220304.md"},e=a(`<h2 id="client、offset、scroll区分" tabindex="-1">client、offset、scroll区分 <a class="header-anchor" href="#client、offset、scroll区分" aria-label="Permalink to &quot;client、offset、scroll区分&quot;">​</a></h2><h3 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h3><ul><li>在工作中总是会碰到需求需要获取元素的宽高，相对视口宽高...等等位置属性，但是之前对于client，offset等等的一系列属性看的一个头两个大，网上的文章有的也是重复的内容，于是自己花时间用demo去理解了一些，有问题的地方希望可以指出来。</li></ul><h3 id="宽高相关" tabindex="-1">宽高相关 <a class="header-anchor" href="#宽高相关" aria-label="Permalink to &quot;宽高相关&quot;">​</a></h3><ol><li><p>client的意思是客户、客户端的意思，那他这个的宽高基本指的是他可视的元素宽高</p><ul><li><code>clientWidth</code>: <ol><li>通常指的是该元素（<code>contentWidth + padding</code>）的宽度，</li><li>但是如果是<code>display：inline</code>例如<code>span</code>元素，该值恒为0.</li><li>在怪异盒模型下，等于元素的<code>width - boder</code>，因为此时的<code>width = contentWidth + padding + border</code></li></ol></li><li><code>clientHeight</code>: <ol><li>通常指的是该元素（<code>contentheight + padding</code>）的宽度，</li><li>但是如果是<code>display：inline</code>例如<code>span</code>元素，该值恒为0.</li><li>在怪异盒模型下，等于元素的<code>height -boder</code>，因为此时的<code>height = contentheight + padding + boder</code></li></ol></li></ul></li><li><p>offset的意思是偏移，很明显他与我们的元素定位位置是相关的</p><ul><li><code>offsetWidth</code>: <ol><li>通常指的是该元素（<code>contentWidth + padding + border</code>）的宽度，</li><li>但是如果是<code>display：inline</code>例如<code>span</code>元素，该值为<code>实际的内容宽度 + padding + boder</code>,因为此时的容器宽度由内容撑开.</li><li>在怪异盒模型下，等于元素的<code>width</code></li></ol></li><li><code>offsetHeight</code>: <ol><li>通常指的是该元素（<code>contentheight + padding + boder</code>）的宽度，</li><li>但是如果是<code>display：inline</code>例如<code>span</code>元素，该值为<code>实际的内容高度 + 浏览器默认样式高度 + padding + boder</code>，这里要注意浏览器默认一个高度，我自己测试的时候有个默认<code>21px</code>的高度</li><li>在怪异盒模型下，等于元素的<code>height</code></li></ol></li></ul></li><li><p>scroll是指滑动，他和元素的实际情况有关</p><ol><li>通常我们用的多的是<code>document.documentElement.scrollWidth</code>来获取网页的宽度和高度</li><li>一般情况下他和client的宽高没有区别</li><li>不过他指的是实际宽高，不是可视宽高，也就是不在视口内的宽高也会计算进去</li></ol></li><li><p>以上的均为<strong>只读属性</strong></p></li><li><p>代码如下</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .box1{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 200px;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 300px;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 2px solid red;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 20px;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 100px;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .box2{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      box</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sizing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: border</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">box;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 200px;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 300px;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 2px solid red;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 20px;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 100px;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    .box3{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 2px solid red;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 20px;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 100px;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }   </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;box1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;box2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;box3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">span</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        let box1 = document.querySelector(&#39;.box1&#39;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        let box2 = document.querySelector(&#39;.box2&#39;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        let box3 = document.querySelector(&#39;.box3&#39;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        let box4 = document.querySelector(&#39;.box4&#39;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.log(box1.offsetWidth) //244 200+40+4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.log(box1.offsetHeight)  //344</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.log(box1.clientWidth)   //240</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.log(box1.clientHeight)  //340</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.log(box2.offsetWidth) //200</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.log(box2.offsetHeight)  //300</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.log(box2.clientWidth)   //196 200-4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.log(box2.clientHeight)  //296  console.log(box1.offsetWidth) //244</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.log(box3.offsetWidth) //44  40+4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.log(box3.offsetHeight)  //65  40+4+21</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.log(box3.clientWidth)   //0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.log(box3.clientHeight)  //0     </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></li></ol><h3 id="位置相关" tabindex="-1">位置相关 <a class="header-anchor" href="#位置相关" aria-label="Permalink to &quot;位置相关&quot;">​</a></h3><ol><li>client相关 <ul><li><code>clientLeft</code> : 元素左边框宽度</li><li><code>clientTop</code> : 元素上边框宽度</li></ul></li><li>offset相关 (只读属性) <ul><li><code>offsetLeft</code> : 元素距离最近的一个定位包含块的左边框距离,注意浏览器的默认margin</li><li><code>offsetTop</code> : 元素距离最近的一个定位包含块的上边框距离</li></ul></li><li>scroll相关 (可读写属性) <ul><li><code>scrollLeft</code> : 水平方向滚动的距离</li><li><code>scrollTop</code> : 垂直方向滚动的距离</li></ul></li></ol><h3 id="事件相关" tabindex="-1">事件相关 <a class="header-anchor" href="#事件相关" aria-label="Permalink to &quot;事件相关&quot;">​</a></h3><ul><li>event.clientX:目标点距离浏览器可视范围的X轴坐标</li><li>event.offsetX:目标点对于触发的源元素的X轴坐标</li><li>event.pageX:目标点相对于文档X轴坐标，会计算滚动距离</li><li>event.screenY:目标点距离屏幕左侧的X坐标</li><li>event.getBoundingClientRect().left:目标元素左边框相对于浏览器可视区域的距离，可能为负值</li></ul>`,9),t=[e];function h(p,o,k,d,c,E){return l(),i("div",null,t)}const y=s(n,[["render",h]]);export{g as __pageData,y as default};
