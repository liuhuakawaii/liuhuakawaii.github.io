import{_ as s,c as i,o as a,a3 as n}from"./chunks/framework.DpzXWsSh.js";const g=JSON.parse('{"title":"函数式编程-触发点击事件","description":"","frontmatter":{"title":"函数式编程-触发点击事件","date":"2023-2-05","categories":["javascript","踩坑","工具轮子"]},"headers":[],"relativePath":"blogs/word/2023/0205.md","filePath":"blogs/word/2023/0205.md"}'),t={name:"blogs/word/2023/0205.md"},l=n(`<h2 id="函数式编程-触发点击事件" tabindex="-1">函数式编程-触发点击事件 <a class="header-anchor" href="#函数式编程-触发点击事件" aria-label="Permalink to &quot;函数式编程-触发点击事件&quot;">​</a></h2><ol><li>需求背景 <ul><li>一个验密的组件，在唤起组件的时候，希望做到能够自动聚焦输入框，并且唤起客户端键盘</li><li>之前只有在点击输入框时才能唤起客户端键盘</li></ul></li><li>API <ul><li>利用<code>Event</code>构造函数创建一个新的 <code>Event</code> 对象</li><li>然后，使用 <code>dispatchEvent()</code> 方法触发事件</li></ul></li><li>代码实现<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">( type , options )  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//options:{ bubbles: false, cancelable: false}   </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> clickEvent </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Event</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;click&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$refs.input.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">focus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//自动聚焦</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$refs.input </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.activeElement){</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$refs.input.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dispatchEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(clickEvent) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//模拟点击事件触发</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }     </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //...点击事件唤起客户端键盘</span></span></code></pre></div></li></ol>`,2),e=[l];function h(p,k,d,r,E,c){return a(),i("div",null,e)}const y=s(t,[["render",h]]);export{g as __pageData,y as default};
