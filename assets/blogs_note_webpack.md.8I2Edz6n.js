import{_ as e,c as a,o as t,a3 as l}from"./chunks/framework.DpzXWsSh.js";const h=JSON.parse('{"title":"webpack深入学习","description":"","frontmatter":{"title":"webpack深入学习","date":"2024-5-15","categories":["webpack","工程化","笔记"]},"headers":[],"relativePath":"blogs/note/webpack.md","filePath":"blogs/note/webpack.md"}'),o={name:"blogs/note/webpack.md"},c=l('<h2 id="webpack" tabindex="-1">webpack <a class="header-anchor" href="#webpack" aria-label="Permalink to &quot;webpack&quot;">​</a></h2><ul><li><p>babel 的原理</p><ol><li>parse: 把代码 code 变成 AST</li><li>traverse: 遍历 AST 进行修改</li><li>generate: 把 AST 变成代码 code2 即 code --(1)-&gt; ast --(2)-&gt; ast2 --(3)-&gt; code2</li></ol></li><li><p>为什么必须使用AST</p><ul><li>你很难用正则表达式来替换，正则很容易把 let a = &#39;let&#39; 变成 var a = &#39;var&#39;</li><li>你需要识别每个单词的意思，才能做到只修改用于声明变量的 let</li><li>而 AST 能明确地告诉你每个 let 的意思</li></ul></li></ul>',2),i=[c];function r(s,p,_,n,d,b){return t(),a("div",null,i)}const u=e(o,[["render",r]]);export{h as __pageData,u as default};
