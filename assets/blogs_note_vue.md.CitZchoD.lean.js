import{_ as e,D as E,c as d,l as s,a as i,I as l,w as t,t as h,a5 as a,o as r}from"./chunks/framework.BIhQMg0k.js";const k="/assets/01.RazwKv62.jpg",g="/assets/02.CFs13dqa.jpg",y="/assets/03.KBbYuweE.png",Ci=JSON.parse('{"title":"Vue学习笔记","description":"","frontmatter":{"title":"Vue学习笔记","date":"2021-1-12","categories":["vue","笔记"]},"headers":[],"relativePath":"blogs/note/vue.md","filePath":"blogs/note/vue.md"}'),o={name:"blogs/note/vue.md"},c=s("h2",{id:"vue学习笔记-一-基础概念、基本指令",tabindex:"-1"},[i("Vue学习笔记(一)--基础概念、基本指令 "),s("a",{class:"header-anchor",href:"#vue学习笔记-一-基础概念、基本指令","aria-label":'Permalink to "Vue学习笔记(一)--基础概念、基本指令"'},"​")],-1),F=s("h3",{id:"基础概念",tabindex:"-1"},[i("基础概念 "),s("a",{class:"header-anchor",href:"#基础概念","aria-label":'Permalink to "基础概念"'},"​")],-1),u=s("li",null,"数据的变化会驱动视图自动更新",-1),A=s("li",null,"好处:程序员只管把数据维护好，那么页面结构会被vue自动渲染出来!",-1),D=s("strong",null,"单向的数据绑定",-1),C=s("ul",null,[s("li",null,"在网页中，form表单负责采集数据，Ajax负责提交数据。"),s("li",null,[i("好处:开发者"),s("strong",null,"不再需要手动操作DOM元素"),i("，来获取表单元素最新的值!"),s("br"),s("img",{src:k,alt:""})])],-1),_=a("",2),m=s("h3",{id:"常用指令",tabindex:"-1"},[i("常用指令 "),s("a",{class:"header-anchor",href:"#常用指令","aria-label":'Permalink to "常用指令"'},"​")],-1),B=s("li",null,[s("code",null,"v-text"),i(":会覆盖元素原有内容")],-1),v=s("li",null,[s("code",null,"v-html"),i(":可以把带标签的字符串，渲染真正的html内容，"),s("strong",null,"会有XSS风险，会覆盖子组件")],-1),b=a("",1),f=a("",4),T=a("",1),x=s("li",null,[i("加key的作用： "),s("ol",null,[s("li",null,"正确维护列表的状态"),s("li",null,"复用现有的DOM元素，提升渲染的性能")])],-1),V=a("",1),j=a("",1),S=s("code",null,"v-cloak",-1),q=s("li",null,"本质是一个特殊属性,Vue实例创建完毕并接管容器后，会删掉v-cloak属性。",-1),P=s("strong",null,"页面闪烁问题",-1),I=a("",2),N=a("",1),w=s("h3",{id:"注意事项",tabindex:"-1"},[i("注意事项 "),s("a",{class:"header-anchor",href:"#注意事项","aria-label":'Permalink to "注意事项"'},"​")],-1),M=a("",4),$=s("strong",null,"for+id的组合",-1),O=s("strong",null,"动态拼接",-1),R=s("h3",{id:"vue监视数据的原理",tabindex:"-1"},[i("Vue监视数据的原理 "),s("a",{class:"header-anchor",href:"#vue监视数据的原理","aria-label":'Permalink to "Vue监视数据的原理"'},"​")],-1),H=s("ul",null,[s("li",null,[i("用户data数据-->"),s("code",null,"_data"),i("数据进行代理，并且给每一项数据进行包装，设置"),s("code",null,"getter、setter"),i("-->数据在vm实例上可以直接找到-->当数据发生变化-->对应"),s("code",null,"setter"),i("调用（数据劫持）-->形成虚拟DOM-->新旧DOM比对复用-->更新页面")])],-1),X=s("li",null,"vue会监视data中所有层次的数据。",-1),W=s("li",null,"如需给后添加的属性做响应式，请使用如下API:",-1),L=a("",1),z=s("li",null,[i("如何监测数组中的数据? "),s("ul",null,[s("li",null,[i("通过包裹数组更新元素的方法实现,本质就是做了两件事: "),s("ol",null,[s("li",null,"调用原生对应的方法对数组进行更新。"),s("li",null,"重新解析模板，进而更新页面。")])])])],-1),G=a("",1),U=a("",3),Y=s("li",null,[i("可以通过new实例时用watch配置，也可以用"),s("code",null,"Vue.$watch(''，{对象配置})")],-1),J=a("",1),K=a("",4),Q=a("",11),Z=s("code",null,"beforeCreate",-1),ss=s("code",null,"props/data/methods",-1),is=s("strong",null,"不可用状态",-1),as=s("code",null,"created",-1),ns=s("code",null,"porps/data/methods",-1),ls=s("strong",null,"可用的状态",-1),ts=s("strong",null,"模板结构尚未生成",-1),hs=s("li",null,"基于数据和模板,在内存中编译生成HTML结构（虚拟DOM）",-1),ks=s("li",null,[s("code",null,"beforeMount"),i(": 呈现的是未经Vue编译的DOM结构，所有对DOM的操作不奏效")],-1),ps=s("li",null,"将内存中的虚拟DOM转为真实DOM插入页面",-1),es=s("li",null,[s("code",null,"mounted"),i(": 页面中呈现的是经过Vue编译的DOM，对DOM的操作均有效(尽可能避免)，至此初始化过程结束，一般在此进行:开启定时器、发送网络请求、订阅消息、绑定自定义事件、等初始化操作。")],-1),Es=s("code",null,"beforeUpdate",-1),ds=s("strong",null,"数据是新的，但页面是旧的",-1),rs=s("li",null,"根据新数据，生成新的虚拟DOM，新旧虚拟DOM进行比较，最终完成页面更新，即:完成了Model View的更新",-1),gs=s("code",null,"updated",-1),ys=s("strong",null,"数据是新的，页面也是新的",-1),os=s("code",null,"beforeDestroy",-1),cs=s("strong",null,"所有对数据的更新都不会生效，不会进入update",-1),Fs=s("li",null,[s("code",null,"destroy"),i(": 组件已经被销毁，此组件在浏览器中对应的DOM结构已被完全移除!")],-1),us=a("",3),As=a("",2),Ds=s("strong",null,"基于唯一的index.html页面",-1),Cs=s("li",null,"style节点的scoped属性：让样式在局部生效,防止冲突。",-1),_s=s("strong",null,"当前组件的样式对其子组件是不生效",-1),ms=s("strong",null,"使用/deep/深度选择器",-1),Bs=a("",1),vs=a("",1),bs=a("",2),fs=a("",1),Ts=a("",1),xs=a("",1),Vs=a("",1),js=a("",1),Ss=a("",3),qs=s("h3",{id:"动态组件",tabindex:"-1"},[i("动态组件 "),s("a",{class:"header-anchor",href:"#动态组件","aria-label":'Permalink to "动态组件"'},"​")],-1),Ps=s("strong",null,"动态切换组件的显示与隐藏",-1),Is=s("code",null,"<component>",-1),Ns=s("strong",null,"专门用来实现动态组件的渲染",-1),ws=a("",1),Ms=s("strong",null,"销毁原组件",-1),$s=s("li",null,[i("组件名称默认使用注册名，可以提供一个name属性给组件来使用 "),s("ol",null,[s("li",null,"注册名称是在使用标签时使用"),s("li",null,"name名称在调试工具和添加属性时使用")])],-1),Os=a("",3),Rs=s("li",null,"需要频繁切换（tab切换），不需要重新渲染，Vue常见的性能优化之一",-1),Hs=s("code",null,"<keep-alive>",-1),Xs=s("strong",null,"让不展示的路由组件保持挂载，不被销毁",-1),Ws=s("br",null,null,-1),Ls=s("code",null,'html <keep-alive> <component :is="comName"></component> </keep-alive> ',-1),zs=s("strong",null,"keep-alive对应的生命周期函数",-1),Gs=s("strong",null,"缓存",-1),Us=s("code",null,"deactivated",-1),Ys=s("strong",null,"激活",-1),Js=s("code",null,"activated",-1),Ks=a("",1),Qs=a("",7),Zs=a("",2),si=s("p",null,"路由重定向和默认子路由",-1),ii=s("ol",null,[s("li",null,[i("在"),s("code",null,"src/router/index.js"),i("路由模块中，通过"),s("code",null,"routes"),i("数组声明路由的匹配规则")])],-1),ai=s("li",null,[s("strong",null,"路由重定向"),i("指的是: 用户在访问地址A的时候，强制用户跳转到地址C, 通过路由规则的"),s("code",null,"redirect"),i("属性，指定一个新的路由地址")],-1),ni=s("strong",null,"默认子路由",-1),li=s("code",null,"children",-1),ti=s("code",null,"path",-1),hi=s("strong",null,"默认子路由",-1),ki=a("",1),pi=a("",1),ei=s("p",null,"路由传参",-1),Ei=a("",1),di=a("",1),ri=a("",2),gi=a("",2);function yi(p,oi,ci,Fi,ui,Ai){const n=E("font");return r(),d("div",null,[c,F,s("ol",null,[s("li",null,[i("vue特性 "),s("ol",null,[s("li",null,[s("strong",null,[l(n,{color:"red"},{default:t(()=>[i("数据驱动视图")]),_:1})]),s("ul",null,[u,A,s("li",null,[i("注意:数据驱动视图是"),l(n,{color:"red"},{default:t(()=>[D]),_:1}),i("。")])])]),s("li",null,[s("strong",null,[l(n,{color:"red"},{default:t(()=>[i("双向数据绑定")]),_:1})]),C])])]),_]),m,s("ol",null,[s("li",null,[i("内容渲染指令 "),s("ul",null,[B,v,s("li",null,[s("code",null,h(),1),i(": 插值表达式,内容占位符 (只能用在元素的内容节点,不能用于属性节点)")]),b])]),f,s("li",null,[i("列表渲染指令 (基于一个数组来循环渲染一个列表结构)"),T,s("ul",null,[x,s("li",null,[s("strong",null,[l(n,{color:"red"},{default:t(()=>[i("key的注意事项:")]),_:1})]),V]),s("li",null,[s("strong",null,[l(n,{color:"red"},{default:t(()=>[i("面试题:react. vue中的key有什么作用?(key的内部原理)")]),_:1})]),j])])]),s("li",null,[i("其他指令 "),s("ol",null,[s("li",null,[S,i("指令（没有值） "),s("ul",null,[q,s("li",null,[i("使用css配合v-cloak可以解决网速慢时页面展示出"),s("code",null,h(p.xxxx),1),i("的"),P,i("。")])])]),I])]),N]),w,s("ol",null,[M,s("li",null,[i("给checkbox绑定v-model时可以用"),l(n,{color:"red"},{default:t(()=>[$]),_:1}),i("提升用户体验，但是要注意这里要用"),l(n,{color:"red"},{default:t(()=>[O]),_:1}),i("，不然只有第一行的checkbox生效")])]),R,H,s("ol",null,[X,s("li",null,[i("如何监测对象中的数据? "),s("ul",null,[s("li",null,[i("通过setter实现监视，且要在new Vue时就传入要监测的数据。 "),s("ol",null,[s("li",null,[s("strong",null,[l(n,{color:"red"},{default:t(()=>[i("对象中后追加的属性，Vue默认不做响应式处理")]),_:1})])]),W]),L])])]),z,s("li",null,[i("在Vue修改数组中的某个元素一定要用如下方法: "),s("ul",null,[s("li",null,[s("strong",null,[l(n,{color:"red"},{default:t(()=>[i("直接对数组的索引操作，不会有响应式变化，但是对索引下的属性操作可以")]),_:1})])])]),G,s("ul",null,[s("li",null,[s("strong",null,[l(n,{color:"red"},{default:t(()=>[i("特别注意:Vue.set()和vm.$set()不能给vm或 vm的根数据对象添加属性!!!")]),_:1})])])])])]),U,s("ol",null,[Y,s("li",null,[i("侦听器的格式 "),s("ul",null,[J,s("li",null,[K,s("ul",null,[s("li",null,[s("strong",null,[i("watch可以开启一些异步任务，里面的定时器"),l(n,{color:"red"},{default:t(()=>[i("必须使用箭头函数")]),_:1})])])])])])])]),Q,s("ol",null,[s("li",null,[i("组件创建阶段 "),s("ul",null,[s("li",null,[Z,i(": 组件的"),ss,i("尚未被创建，都处于"),l(n,{color:"red"},{default:t(()=>[is]),_:1})]),s("li",null,[as,i(": 组件的"),ns,i("已创建好，都处于"),l(n,{color:"red"},{default:t(()=>[ls]),_:1}),i(" 。但是组件的"),l(n,{color:"red"},{default:t(()=>[ts]),_:1}),i(" 这个阶段可以用来发起Ajax请求，获取数据")]),hs,ks,ps,es])]),s("li",null,[i("组件运行阶段（当数据改变时） "),s("ul",null,[s("li",null,[Es,i("：此时:"),l(n,{color:"red"},{default:t(()=>[ds]),_:1}),i("，即:页面尚未和数据保持同步。")]),rs,s("li",null,[gs,i("：此时:"),l(n,{color:"red"},{default:t(()=>[ys]),_:1}),i("，即:页面和数据保持同步。（新DOM）")])])]),s("li",null,[i("组件销毁阶段 "),s("ul",null,[s("li",null,[os,i("： vm中所有的: data、methods、指令等等，都处于可用状态，但是"),l(n,{color:"red"},{default:t(()=>[cs]),_:1}),i("，马上要执行销毁过程,一般在此阶段:关闭定时器、取消订阅消息、解绑自定义事件等收尾操作")]),Fs])])]),us,s("ol",null,[As,s("li",null,[i("组件中的样式冲突问题 "),s("ol",null,[s("li",null,[i("导致组件之间样式冲突的根本原因是:单页面应用程序中，多个组件的样式都是"),l(n,{color:"red"},{default:t(()=>[Ds]),_:1}),i(" 呈现的")]),Cs,s("li",null,[i("/deep/样式穿透 "),s("ul",null,[s("li",null,[i("如果给当前组件的style节点添加了scoped属性，则"),l(n,{color:"red"},{default:t(()=>[_s]),_:1}),i("的。如果想让某些样式对子组件生效，可以"),l(n,{color:"red"},{default:t(()=>[ms]),_:1}),i("。")])]),Bs])])]),s("li",null,[i("组件之间的数据共享 "),s("ol",null,[s("li",null,[s("strong",null,[l(n,{color:"red"},{default:t(()=>[i("父组件向子组件共享数据需要使用自定义属性,注意要绑定要传值的属性")]),_:1})]),vs]),s("li",null,[s("strong",null,[l(n,{color:"red"},{default:t(()=>[i("子组件向父组件共享数据调用父组件事件")]),_:1})]),bs,s("ul",null,[s("li",null,[s("strong",null,[l(n,{color:"red"},{default:t(()=>[i("注意: 回调要么配置在methods中，要么用箭头函数，直接写回调this指向子组件!")]),_:1})]),fs])]),Ts]),s("li",null,[s("strong",null,[l(n,{color:"red"},{default:t(()=>[i("在vue2.x中，兄弟组件之间数据共享的方案是EventBus(事件总线)。")]),_:1})]),xs]),s("li",null,[s("strong",null,[l(n,{color:"red"},{default:t(()=>[i("消息订阅与发布(pubsub)")]),_:1})]),Vs]),js])]),Ss]),qs,s("ol",null,[s("li",null,[i("动态组件指的是"),l(n,{color:"red"},{default:t(()=>[Ps]),_:1})]),s("li",null,[i("vue提供了一个内置的"),Is,i("组件，"),l(n,{color:"red"},{default:t(()=>[Ns]),_:1}),ws]),s("li",null,[i("动态组件切换时默认会"),l(n,{color:"red"},{default:t(()=>[Ms]),_:1}),i("重新创建新组件")]),$s]),Os,s("ol",null,[Rs,s("li",null,[i("可以使用vue内置的"),Hs,i("组件"),l(n,{color:"red"},{default:t(()=>[Xs]),_:1}),Ws,Ls]),s("li",null,[zs,s("ol",null,[s("li",null,[i("当组件被"),l(n,{color:"red"},{default:t(()=>[Gs]),_:1}),i("时，会自动触发组件的"),Us,i("生命周期函数。")]),s("li",null,[i("当组件被"),l(n,{color:"red"},{default:t(()=>[Ys]),_:1}),i("时，会自动触发组件的"),Js,i("生命周期函数")])])]),Ks]),Qs,s("ol",null,[Zs,s("li",null,[si,ii,s("ul",null,[ai,s("li",null,[l(n,{color:"red"},{default:t(()=>[i("**子路由规则最好不要/开头**")]),_:1})]),s("li",null,[ni,i(":如果"),li,i("数组中，某个路由规则的"),ti,i("值为空字符串，则这条路由规则，叫做“"),l(n,{color:"red"},{default:t(()=>[hi]),_:1}),i("”"),ki])]),pi]),s("li",null,[ei,s("ol",null,[Ei,s("li",null,[i("params参数"),di,s("ul",null,[s("li",null,[s("strong",null,[l(n,{color:"red"},{default:t(()=>[i("特别注意:路由携带params参数时，若使用to的对象写法，则不能使用path配置项，必须使用name配置!")]),_:1})])])])]),ri])]),gi])])}const _i=e(o,[["render",yi]]);export{Ci as __pageData,_i as default};
